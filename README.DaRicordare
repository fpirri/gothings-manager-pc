
****************************************************************************************************
                                                                                   Roba DA RICORDARE
****************************************************************************************************
Questa doc:
  .../github-gothings/gothings-scratchpad/README.DaRicordare
---------------------------------------------------------------------------------------------------- 2021-10-01
                                                                                versione: 1.00
Scopo: 
  - mini progetti utili, riuniti qui

Note:
  --> ??


****************************************************************************************************

****************************************************************************************************

----------------------------------------------------------------------------------------------------
                                                                                       History Index
               per la storia precedente, cerca:     *** STORIA ***
                               lavoro iniziale:     *** Bash ***

                                 Script server:     script-server to control GoThings  |
                                                    GoThings Manager PC  |

                                   lavori vari:
                                                    strategia per GoThings Raspi  |
               ???                                  interfaccia web per GoThings  |
                                                    Progetto localserver  |


                               ricerche google:     nodejs to control GoThings  |
                                                    bash to control GoThings  |
                                                    websocketd to control GoThings  |
                                                    tkinter to control GoThings  |
                                                    OliveTin to control GoThings  |



                         Progetti Interessanti:
                                                    *** Progetti Futuri ***





                  Per cut & paste interessanti:     CUT & PASTE library  -  INIT


****************************************************************************************************

last commit:
        scratchpad : sviluppo pc-manager - v 1.00 - 15
        scratchpad : commit olivetin - 0.01 - 03
        scratchpad : scriptserver: init - v 1.00 - 1
        scratchpad : manageraspi: init - v 1.00 - 1
        pc-manager : first running version - v 1.00 - 17




----------------------------------------------------------------------------------------------------
                                                                                      Prossimi passi
-------------------------------------
PIRRI.NET
PIRRI.ME
  <-- certbot
  <-- definire progetto





****************************************************************************************************


---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2018-08-18
                                                                                      *** SYSTEM ***/----------
---------------------------------------------------------------------------------------------------/
                                                                           *** doc interessante ***



=====================================================================================================\
                                                                         xxx to control GoThings  |

=====================================================================================================/



=====================================================================================================\
                                                                                 GoThings Manager PC  |
scopo:
  - installare la parte base con un solo script
  - gestire tutto il resto dal PC con un browser
    - admin solo da docker host del server
    - esecuzione anche da altri browser

Strategia:
  - si install lo script-server su PC come servizio docker
  - script di start classico per docker
  - immagine personalizzata a partire dal server originale
      <-- aggiungere sudo, nano, ??

Implementazione:
  - script di start iniziale nel gitrepo
  - altri script in ./dockrepo dentro il .tar.gz
  - README aggiuntivi?

Quick Start:
---- prerequisiti:
- PC con docker
  -documentare in readme
  - mettere uno script per ubuntu in ./dockrepo
      <-- vedi il passo 0bis sotto

---- passo 0 : install ambiente docker
Si consiglia di seguire i ref.
  ?
  ?

---- passo 1 : download software from github
- da terminale:
    wget -O ${HOME}/managerdirs.tar.gz https://github.com/fpirri/gothings-pc-manager/raw/main/managerdirs.tar.gz
    sudo tar xpf "${HOME}/managerdirs.tar.gz" -C "${HOME}"; \ ./dockrepo/install_pc_manager
- per partire la prima volta:
    dockrepo/install+pc_manager

---- passo 2 : gestione del pc-manager:
    dockrepo/start_pc_manager        lancia il pc-manager
                                     <-- riparte automaticamente al prossimo reboot
    dockrepo/stop_pc_manager         ferma momentaneamente il pc-manager
                                     <-- riparte automaticamente al prossimo reboot
    dockrepo/down_pc_manager         ferma definitivamente il pc-manager
                                     <-- non ripartira' al prossimo reboot
                                     <-- eseguire  dockrepo/start_pc_manager per ricominciare


------------------------------------------------------------ Build manager image
- costruzione immagine docker dello scrip-server sul PC
  - volumi docker usati:
      .../manager/                 sezione sysdata per pc-manager
        .../conf/
            .../runners/           dir per le definizioni degli script
                  /...             un file per ogni script
            .../conf.json          configurazione dl server
            .../logging.json       formato dei logs
            .../example.json       un esempio di conf.json per riferimento
        .../logs/                  files di log
        .../scripts/               dir per gli script
            ...??                  un file per ogni script

  - build immagine
    - download .zip dei sorgenti                                             <-- DA AUTOMATIZZARE
    - sorgenti nel dir 'manager', da copiare nell'immagine                   <-- DA AUTOMATIZZARE
    - costruzione dell'immagine con lo script 'build_pc_manager'
        <-- realizzarlo come script nello script-server ???
  - per ora si parte ancora l'immagine python3.9-slim
    - si installa ssh                                <-- necessario per parlare con la raspi
    - si aggiunge nano, per fare edit da dentro il container



--------------------------------------------------------- aggiornamenti in corso
- DA INSERIRE in install_pc_manager:
  -->  creare i networks   <--OK
       verificare docker   <-- da fare
       informare esistenza start, stop & down
       mettere un 'pause' prima della fine

- installare ssh
  apt update
  apt install -y openssh-server            <-- aggiungere nano
    --> ssh user@host dovrebbe funzionare


-----------------------------------------------------------------------  history

---------------------  ADMIN
in conf.json vanno definiti:
	"admin_users": [ "172.29.196.1", "192.168.1.110", "192.168.4.197" ],
    "trusted_ips": [ "172.29.196.1", "192.168.0.0/16" ]
dove l'admin e' "172.29.196.1", ovvero il browser sul docker host che passa 
dal docker network bridge interno
  (congettura probabilmente valida ...)


--------------------------------------------------------------------------------
----------------------------------------------------------------------- In Corso

----------------------  TEST da fare
- stop/restart del manager al reboot del PC
- whoami  <-- ?


----------------------  Aggiornamento
manager-init
  <-- mettere lo script per il download & start del pc manager
  <-- scarica il tar.gz, lo espande e fa partire lo script-server

docker-install
  <-- da aggiungere
  <-- riferimenti a tutorials 'install docker & docker-compose'
  <-- script super semplice con i passi dedotti dai ref di cui sopra
  <-- versioni per gli OS che uso io
  <-- aggiungere windows ...
  <-- mettere docker-install dentro ~/dockrepo?

aggiustare il readme
  - parlare dello sviluppo con <main repo>-aux
      <-- qui stanno i sorgenti di quello che va in <repo>dirs.tar.gz

aggiustare lo scratchpad, con il privato in scratchpad-aux

prima di fare il dockerfile, vedi:
  https://medium.com/swlh/alpine-slim-stretch-buster-jessie-bullseye-bookworm-what-are-the-differences-in-docker-62171ed4531d


                                                                                 GoThings Manager PC  |
=====================================================================================================/




=====================================================================================================\
                                                                        strategia per GoThings Raspi  |

----------------------------- nuovo percorso
si parte da PC
  - si evitano troppi passi con bash & terminale
  ---------
  - da pensare:
    - eliminare la modifica di OS come .img
        <-- con edit sulle partizioni boot & ???
        <-- postare su una droplet 1/2 img di raspbian modificato ???
        ping raspberrypi.local   <-- find IP
    - gira un .sh all'inizio
        https://raspberrypi-guide.github.io/programming/run-script-on-boot
  ---------
  - passo 0:
    - segui una procedura consigliata per accedere via ssh alla tua scheda
    - passi seguenti, eventualmente da uno script server remoto                 DA FARE & PROVARE
        <-- usa lo script-server di prova per fare una prova di ssh da remoto ...
      - 

FARE uno script che trasferisce un file da PC a raspberry e lo esegue, sempre via ssh

Comando da PC verso la raspi:
scp -p file.orig pi@192.168.1.43:/home/pi/pippo.txt
scp -p /home/superman/pippo.txt pi@192.168.1.43:/home/pi/pippo.txt

passo 0
  - set up scrip-server-pc
      --> script-server local: si eseguono operazioni con il browser,
          evitando di usare la shell
      <-- vedere come trasportare la cosa su windows
           (dovrebbe essere facile)
passo 1 (install raspi)
  - da PC, si inizializza la raspi
      --> si ottiene una raspi capace di accettare ed operare comandi
  - si copiano sulla raspi codice ed i dati dello script-server
  - si inizializza e si fa partire (come servizio) lo scrip-server
  - si passa alla fase operativa
passo 2 (ripetibile)
  - da PC, si immettono uno o piu' script
  - restart della raspi per attivare i nuovi script   (necessario??)
passo 3 (ripetibile)
  - da browser si eseguono operazioni sulla raspi ...

                                                                                SONO QUI




------ Passo 0
Prerequisiti:
  - sd-card con OS iniziale & credenziali wifi
      <-- scheda raggiungibile in ssh su wifi
      <-- ethernet dove applicabile
      <-- console fisica se disponibile (non testato)
Obiettivo:
  - bootstrap scheda pronto, accesso da browser
  - start automatico del passo successivo   <--  script
implementazione:
  - installazione & test di docker & docker-compose                 <-- rimandabile?
  - repo:     gothings-raspi-install
  - script:   0
              nel passo finale chiama go-raspi (in questo repo)
                <-- per semplicita' di sviluppo si separano i due script
VECCHIO:  go-raspi chiama manage-raspi  -->  poi si va a raspi-basezero con la vecchia filosofia
  NUOVO:  go-raspi installa il local server  --> nuova strategia per il controllo da browser

Risultato: => controllo raspi da browser, con script-server

===> si torna su gothings-scratchpad per lo sviluppo del nuovo go-raspi === ??
     vedi:   .../gothings-scratchpad/README.DaRicordare
             cerca:  


------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------- BUTTARE ?
Seguito: DA RIVEDERE
------ Passo 1
Obiettivo:
  - script-server installato e funzionante
  - set base iniziale di script:
    - installazione docker ??
    - installazione raspi-basezero
====> raspi in configurazione usabile da un utente semplice


------ Passo 2
Obiettivo:
  - raspi usabile per uno scopo specifico

------ Passo 2bis
Obiettivo:
  - raspi usabile per AI vision


------------------------- Implementazione
------ Passo 0

------ Passo 1
  gothings-raspi-basezero --> script manage-raspi-go   -- DA AGGIUSTARE  --
    manage-raspi-go --> aggiustare per script-server
    script-server --> configurare per l'installazione di basezero




-------------------------------------------------------- sotto: RIVEDERE        BUTTARE tutta la sezione?
- pagina con lista di script eseguibili
    <-- ne scegli uno e si va alla pagina del singolo script
- pagina con informazioni dello script e form per l'immissione dei parametri
    <-- l'utente riempe il form e da' il GO
    <-- si va alla pagina 'esecuzione dello script'
- pagina di esecuzione
  - output box
  - parameters fields
  - GO button
    <-- ad ogni GO i parametri possono cambiare ...

Layout proposto per la pagina:
  - box di testo (in alto) che mostra lo stream di uscita della pagina
  - form con i parametri
  - bottono STOP & GO

??
  - CGI di esecuzione degli script
    - accetta i parametri del form
    - avvisa sul box
    - invoca lo script con i parametri
    - se gli serve un input:
      - salva lo stato
      - aggiorna il box
      - ritorna alla pagina
  ==> potrebbe essere un python / nodejs che chiama uno script



                                                                        strategia per GoThings Raspi  |
=====================================================================================================/



=====================================================================================================\
                                                                                interfaccia web-bash  |


-- IN  -- ????

Vediamo se si riesce a definire & girare uno script sempice ...

Ref.: https://github.com/bugy/script-server

Doc da vedere:
https://hub.docker.com/r/bugy/script-server
  <-- docker version
https://pythonrepo.com/repo/bugy-script-server-python-miscellaneous
  <-- introduzione allo script server
https://github.com/bugy/script-server/wiki/Script-config
  <-- guida alla configurazione

:PROVA
- expand .zip in ~/script-server/
- cd in ~/script-server/script-server-master
    python3 -m pip install tornado
    tools/init.py --no-npm
    python3 launcher.py
- parte, ma non ci sono script ...
====> OK, facciamo qualche aggiustamento alloscript di start


------------------------------------------ procedura di setup
- download software
  https://github.com/bugy/script-server/releases/
    <-- contiene i puntatori alle versioni: dev, 1.16 (latest), ...
    <-- si sceglie: 'latest'
  https://github.com/bugy/script-server/releases/latest/download/script-server.zip
    <-- risorsa da scaricare
    <-- si espande in ~/dockrepo/sysdata/script-server
- diversita' tra primo tentativo e zip iniziale:
    <-- solo nei dir conf & src
- nuovo tentativo di start:
  - add dir:   .../conf/scripts
    ./script-server-start    (in home/superman)
    ==> per i comandi vedi sopra:     :PROVA
  - il server parte ed e' visibile ...
  - si immette:
    script name   -->  destroy_world
    script path   -->  ./scripts/destry_world.py
    description   -->  This is a very dangerous script, ....
      <-- SAVE button
  - ovviamente, non trova lo script
      <-- copia lo script da samples --> scripts ...
      -->  FUNZIONA !!!


------------------------------------------- altre prove;
- prova sudo
  - file sudotest
      --> richiede la pwd e FUNZIONA!


--------------------------- Prova 'gothings su PC'
scopo:
limitare al massimo l'uso di script da terminale e comandare da browser
2.a prova
- mettere il lancio dello script-server in create-gothings
- aggiungere lo script-server ai servizi del PC
- lanciare il localserver con uno script (e' un servizio dockerizzato)
- aggiungere i servizi per controllare le raspi ...




ref:
  https://github.com/bugy/script-server/tree/stable/samples/scripts
    <-- script di esempio


-------------------------  DA VEDERE

Possibile problema:
  GoThings usa docker, come si chiama docker da uno script bash a sua volta
  chiamato da un server python che eventualmente e' in un contenitore?
Possibile soluzione:
  chiama docker da python:
    https://www.docker.com/blog/guest-post-calling-the-docker-cli-from-python-with-python-on-whales/
Altre possibili soluzioni:
    https://stackoverflow.com/questions/32163955/how-to-run-shell-script-on-host-from-docker-container
    https://stackoverflow.com/questions/31720935/execute-host-commands-from-within-a-docker-container

======> usare fastcgi?    <-- FCGI wrap




https://sites.google.com/site/easybashweb/home?authuser=0

Nuova ricerca:   web bash gui   -->
  https://www.olivetin.app/
    <-- l'esempio sembra fatto apposta !
    In realta' mancano molte dlle cose presenti nello script-server

====> vedi:   interfaccia web per GOThings  |



=====================
--------------- ipotesi di sviluppo futuro
--- interazione con raspi-base
- pagina di accesso su raspi
  - server http che esegue comandi locali
    ?-> aprire shell di controllo sul proprio PC
    ?-> futuro 'http control panel'
- Pagina WP con raspi-key (da current-user)
- un iframe che chiama la pagina di accesso


------- iframe refs:
https://www.dyn-web.com/tutorials/iframes/postmessage/
  <-- tutorial js cross-origin
https://www.dyn-web.com/tutorials/iframes/refs/parent.php
  <-- tutorial js same-origin

https://www.templatemonster.com/blog/best-wordpress-iframe-plugins/



                                                                                interfaccia web-bash  |
=====================================================================================================/




=====================================================================================================\
                                                                   script-server to control GoThings  |
---------------------------------------------
successore di:
  interfaccia web-bash  |               <-- esplorazione su PC
  strategia per GoThings Raspi  |       <-- elucubrazioni da verificare
  bash to control GoThings  |           <-- ricerca google iniziale
  websocketd to control GoThings  |     <-- ricerca interessante che potrebbe esse utile in futuro
  node js to control GoThings  |
  xterm to control GoThings  |
---------------------------------------------


===> NUOVO obiettivo
- sostituire '0' con una versione 'scriptserver'
- RIFARE 0 usando lo scriptserver     <-- chiamarlo 'raspi-start' ??

---------------- Install script server sulla raspi
                                                        da:  interfaccia web-bash  |

Doc da vedere:
https://hub.docker.com/r/bugy/script-server
  <-- docker version
https://pythonrepo.com/repo/bugy-script-server-python-miscellaneous
  <-- introduzione allo script server
https://github.com/bugy/script-server/wiki/Script-config
  <-- guida alla configurazione

si scarica:
https://github.com/bugy/script-server/releases/latest/download/script-server.zip
  <-- risorsa da scaricare
  <-- si espande in ~/dockrepo/sysdata/script-server


----------------Prova manuale
Download archive da github:
  - crea il dir ~/dockrepo/dockimages/scriptserver/
      wget -O ~/dockrepo/dockimages/scriptserver/scriptserver.zip https://github.com/bugy/script-server/releases/latest/download/script-server.zip
  - crea il dir ~/dockrepo/sysdata/scriptserver/
  - unzip da dockimages a sysdata
      # unzip /path/to/archive.zip "in/archive/folder/*" -d "/path/to/unzip/to"
      unzip ~/dockrepo/dockimages/scriptserver/scriptserver.zip -d ~/dockrepo/sysdata/scriptserver/
  - verifica dir:
      ls -la ~/dockrepo/sysdata/scriptserver/
      cd ~/dockrepo/sysdata/scriptserver/
  - facciamolo partire:
    python3 -m pip install tornado
        <-- Successfully installed tornado-6.1
    pip3 install -r requirements.txt
        <-- NON provato: e' solo una verifica?
    python3 launcher.py
        <-- sembra funzionare (porta 5000)


------------ Prova service con systemd
ref.:
    https://github.com/bugy/script-server/wiki/Installing-on-virtualenv-(linux)
        <-- meglio il docker ?
proviamo virtualenv & systemd:
                                        parte da rivedere (ricostruita a memoria)
vedi:  https://github.com/bugy/script-server/wiki/Installing-on-virtualenv-(linux)
  <-- si fa sudo -i
installa virtualenv, vedi:
        https://github.com/bugy/script-server/wiki/Running-as-a-linux-service#systemd
    apt update
    apt install python3-venv
    nano script-server.service    <-- in: /lib/systemd/system/
        <-- vedi: 

comandi disponibili:
    systemctl enable script-server.service
    systemctl start script-server.service
    systemctl stop script-server.service

edit systemd:
    sudo nano /lib/systemd/system/script-server.service
-->
[Unit]
Description=Script Server
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
ExecStart=/usr/bin/python3 /home/pi/dockrepo/sysdata/scriptserver/launcher.py

  <====   come servizio:    NON FUNZIONA

- lanciato da terminale:    FUNZIONA

- aggiungiamo .../conf/conf.json

---------- raspistart
  .../github-gothings/gothings-raspi-start/raspistart
      script per inizializzare lo script-server sulla raspi






ref.:  https://github.com/bugy/script-server/wiki/Server-configuration
- preso conf.json da samples
- edit conf.json
  - aggiunti valori default minimi
  - aggiunto admin_users   <-- tutta la rete locale/16
      <-- fare estensione per le LAN conosciute                                 DA FARE





================================================================================
:PROVA
- expand .zip in ~/script-server/
- cd in ~/script-server/script-server-master
    python3 -m pip install tornado
    tools/init.py --no-npm
    python3 launcher.py
- parte, ma non ci sono script ...
====> OK, facciamo qualche aggiustamento alloscript di start


------------------------------------------ procedura di setup
- download software
  https://github.com/bugy/script-server/releases/
    <-- contiene i puntatori alle versioni: dev, 1.16 (latest), ...
    <-- si sceglie: 'latest'
- diversita' tra primo tentativo e zip iniziale:
    <-- solo nei dir conf & src
- nuovo tentativo di start:
  - add dir:   .../conf/scripts
    ./script-server-start    (in home/superman)
    ==> per i comandi vedi sopra:     :PROVA
  - il server parte ed e' visibile ...
  - si immette:
    script name   -->  destroy_world
    script path   -->  ./scripts/destry_world.py
    description   -->  This is a very dangerous script, ....
      <-- SAVE button
  - ovviamente, non trova lo script
      <-- copia lo script da samples --> scripts ...
      -->  FUNZIONA !!!


  - 



https://github.com/bugy/script-server

Prerequisiti:
  - sd-card con OS iniziale & credenziali wifi
      <-- scheda raggiungibile in ssh su wifi
      <-- ethernet dove applicabile
      <-- console fisica se disponibile (non testato)
Obiettivo:
  - bootstrap per accesso da browser
  - start automatico del passo successivo   <--  script
implementazione:
  - installazione & test di docker & docker-compose                 <-- rimandabile?   <-- SI
  - repo:     gothings-raspi-install
  - script:   0
              nel passo finale chiama go-raspi (in questo repo)
                <-- per semplicita' di sviluppo si separano i due script
VECCHIO:  go-raspi chiama manage-raspi  -->  poi si va a raspi-basezero con la vecchia filosofia
  NUOVO:  go-raspi installa il local server  --> nuova strategia per il controllo da browser

Risultato: => controllo raspi da browser, con script-server





                                                                   script-server to control GoThings  |
=====================================================================================================/




=====================================================================================================\
                                                                            bash to control GoThings  |
refs:


esempio in:
  https://blog.eduonix.com/shell-scripting/learn-cgi-scripting-using-bash-in-linux-shell-scripting/
    <-- per apache in cgi-bin

bookmarks:   WORK LIST --> work --> bash GUI --> FCGI wrap
-------- ricerca:   nginx cgi-bin bash
https://www.cyberciti.biz/faq/how-to-install-fcgiwrap-for-nginx-on-ubuntu-20-04/
https://www.cyberciti.biz/faq/how-to-install-fcgiwrap-for-nginx-on-ubuntu-20-04/#Installing_fcgiwrap_on_Ubuntu_20.04
https://sleeplessbeastie.eu/2017/09/18/how-to-execute-cgi-scripts-using-fcgiwrap/
https://tipsmake.com/how-to-install-fcgiwrap-for-nginx-on-ubuntu-2004
  <-- esempi completi - vederli tutti?



https://nassif-haynes.com/3/
  <-- interessante: esegue i file *sh !
  <-- locations diverse per i vari tipi di cgi
  <--    "     "    verifica l'esistenza del file



https://help.ubuntu.com/community/FcgiWrap
  <-- Istruzioni per FCGI

https://manpages.debian.org/unstable/fcgiwrap/fcgiwrap.8.en.html
  <-- manuale fcgiwrap

https://serverfault.com/questions/667798/allow-only-local-users-in-nginx/667863
  <-- SOLO per user LOCALI

RIFLESSIONE:
- per sicurezza, gli input da browser DEVONO essere SOLO y/n, 'vai avanti', esci e cosi' via
- a GoThings serve solo dirigere le operazioni ...
- un vero sistema di management verra' dopo ...


rifiniture:
http://www.yolinux.com/TUTORIALS/BashShellCgi.html
  <-- esempio di echo in html & passaggio di variabili
https://techexpert.tips/it/nginx-it/nginx-shell-script-cgi/
  <-- altro esempio fastcgi



                                                                            bash to control GoThings  |
=====================================================================================================/




=====================================================================================================\
                                                                      websocketd to control GoThings  |
refs:
  http://websocketd.com/
  https://github.com/joewalnes/websocketd
    <-- github repository
bookmarks:   WORK LIST --> work --> websocket
------
apri le finestre:
  http://websocketd.com/
  https://github.com/joewalnes/websocketd/wiki
esegui:
  https://github.com/joewalnes/websocketd/wiki/Download-and-install
alla fine, vedi anche:
  https://github.com/joewalnes/websocketd/wiki/Websocketd-behind-Nginx

Primo tentativo:   ???



                                                                      websocketd to control GoThings  |
=====================================================================================================/




=====================================================================================================\
                                                                         node.js to control GoThings  |



UTILI:
  https://stackabuse.com/executing-shell-commands-with-node-js/
    <-- chiama la shell
  https://nodejs.dev/learn/accept-input-from-the-command-line-in-nodejs
    <-- simile a bash shell

DA VEDERE:
  https://opensource.com/article/18/7/node-js-interactive-cli

  https://www.smashingmagazine.com/2017/03/interactive-command-line-application-node-js/



                                                                         node.js to control GoThings  |
=====================================================================================================/




=====================================================================================================\
                                                                           XTERM to control GoThings  |

https://github.com/xtermjs/xterm.js
  NON E' CHIARO come funziona
  DA STUDIARE


                                                                           XTERM to control GoThings  |
=====================================================================================================/




=====================================================================================================\
                                                                         tkinter to control GoThings  |




                                                                         tkinter to control GoThings  |
=====================================================================================================/




=====================================================================================================\
                                                                        OliveTin to control GoThings  |

------------- OliveTin
Interfaccia web per eseguire bash scripts

refs:
  https://www.olivetin.app/
    <-- l'esempio sembra fatto apposta !

  https://docs.olivetin.app/index.html
    <-- DOCs !

Si segue la strategia prevista    -->     GoThings QuickStart  |

Steps:
1.- inizializza dockrepo
    - dovrebbe bastare il create.gothings sul PC
    - estendere alla raspberry
    - estendere a windows su PC
2.- installa OliveTin sul PC
    - verifica che sia immediamente eseguibile con il browser                   DA VERIFICARE
3.- installa OliveTin sulla raspberry (con una nuova versione di 0)
    - forse va fatto a mano la prima volta
    - modificare il lavoro gia' fatto per usare olivetin
4.- PROSEGUIRE alla grande !


----------------- Primo tentativo
ref.:   https://github.com/OliveTin/OliveTin/releases
          <-- versione   2021-07-19 Latest
          <-- file:   OliveTin_2021-07-19_linux_amd64.deb
        https://hub.docker.com/r/jamesread/olivetin/tags
          <-- versione docker

- scarica il file OliveTin_2021-07-19_linux_amd64.deb
- installa (doppio click che richiama ubuntu software)
- esiste gia' un file di configurazione:
      /etc/OliveTin/config.yaml
  inizialmente non e' editabile
- crea il servizio olivetin:
      systemctl enable --now OliveTin
- FATTO !
- alternativa di installazione:
      dpkg -i debFileName
  dal ref.: https://en.wikipedia.org/wiki/Dpkg
    <-- nota: esiste anche una versione windows !!
    <-- usare docker for windows ??

adesso olivetin e' eseguibile:
- test 'ping google'
    <-- devi cliccare 'logs' per vedere cosa e' successo

fase successiva: customization
- icons:
    https://www.w3schools.com/charsets/ref_utf_dingbats.asp
    https://www.w3schools.com/charsets/ref_emoji_smileys.asp
      <-- emoji: def ufficiale
  vedere altre sorgenti di icone
- timeout:
    settabile da 3 (sec) in avanti

--------- prova di customizzazione
ref.: https://golangexample.com/a-web-interface-for-running-linux-shell-commands/

Come si fa il restart?
  <-- sembra che rilegga automaticamente il config.yaml
  - prova con systemctl ?
      





                                                                                SONO QUI

====> vericare sviluppo parametri & interazione:
        https://github.com/OliveTin/OliveTin/issues/22
          --> https://github.com/OliveTin/OliveTin/blob/task-arguments/webui/js/ArgumentForm.js

====> INVESTIGARE la sostituzione di nginx con traefik

                                                                        OliveTin to control GoThings  |
=====================================================================================================/




=====================================================================================================\
                                                                           certbot renew certificate  |

-------- renew letsencrypt certificate
eseguire:
.../WP-Sviluppi/gothings/base/dockrepo/sysdata/certbot/go-letsencrypt
  --> RICORDA:  eseguire il -s reload su nginx !!!  (prima: nginx -t)
        <-- in realta' NON dipendeva da firefox ! ...

==> fare uno script ?                                                           DA FARE


IP address:
      ssh yesfi@104.248.95.29           gothings-v09
      ssh yesfi@188.166.70.203          

                                                                           certbot renew certificate  |
=====================================================================================================/




=====================================================================================================\
                                                                          traefik ingress controller  |
SOSTITUIRE traefik a nginx ??
  ====> risolve il problema di aggiungere servizi lato host interno
          <-- VEDI la figura su github (link ufficiale sotto)

https://github.com/traefik/traefik
  <-- PRIMA cosa da leggere

Tutorials per traefik:
https://www.smarthomebeginner.com/traefik-2-docker-tutorial/
  <-- sembra molto completo
https://www.alexhyett.com/traefik-vs-nginx-docker-raspberry-pi/
  
https://www.digitalocean.com/community/tutorials/how-to-use-traefik-v2-as-a-reverse-proxy-for-docker-containers-on-ubuntu-20-04



                                                                          traefik ingress controller  |
=====================================================================================================/



=====================================================================================================\
                                                                          droplet IP Address & notes  |
IP address:
      ssh yesfi@104.248.95.29           gothings-v09
      ssh yesfi@188.166.70.203          


refs.:
  .../gothings-app-servicewp-aux/README.gothings-app-servicewp-aux
    <-- cerca:     gothings-v09  |

  .../gothings/gothings-app-servicewp-aux/dockrepo/sysdata/multisite-v01-03/gocloud-base-v01-03
    <-- cerca:     expand & creazione  |

                                                                          droplet IP Address & notes  |
=====================================================================================================/




=====================================================================================================\
                                                                                             Windows  |
                                                                         porting gothings to windows  |
Potrebbe essere ultile portare gothings sotto windows:
  WSL 2 is the second iteration of the Windows Subsystem for Linux
    <-- sembra una specie di contenitore per girare linux dentro windows
    <-- da verificare se e' compatibile con docker per windows ...


                                                                         porting gothings to windows  |
=====================================================================================================/




=====================================================================================================\
                                                                                        buco memoria  |
                                                                                             memoria  |

cerca:    ubuntu checking memory usage  -->
  https://phoenixnap.com/kb/linux-commands-check-memory-usage
    <-- 5 strade ..
  https://askubuntu.com/questions/9642/how-can-i-monitor-the-memory-usage
    <-- vedere bashtop  (e la versione python ...)
    ==> vedi:  https://github.com/aristocratos/bpytop


                                                                                        memoria fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            markdown  |
                                                                                              viewer  |
Apparentemente FUNZIONANTI:
Marktext
  https://github.com/marktext/marktext
    <-- eventualmente: installare con flatpack
    <-- eseguibile da lanciare
        seguite istruzioni:  versione da terminale OK
    - per integrare con la GUI:
        https://github.com/TheAssassin/AppImageLauncher
          <-- DA FARE
    - FUNZIONA:  editing 'in loco', vero WYSIWYG |
        <-- per i link ci vuole un browser


IN PROVA ORA:



DA PROVARE:
  http://dynalon.github.io/mdwiki/#!index.md
    <-- provare SUBITO su localhost ...

  http://strapdownjs.com/
    <-- si include il file .md in un template ...
      <-- automatizzare con nginx & dockerizzare ?
  https://stackedit.io/
    <-- editor online, sembra buono ..    <-- DA PROVARE


==============  PROVE insoddisfacenti ...
Markdown-Live-Preview
  https://markdownlivepreview.com/
    <-- non e' chiaro come si fa ...
  https://github.com/ms-jpq/markdown-live-preview
    <-- applicativo da installare ...
        - bisogna installare bene python3, pipenv ed altro ...
            https://docs.python-guide.org/dev/virtualenvs/#virtualenvironments-ref
              <-- doc DA STUDIARE  ... quando trovero' il tempo ...
            https://servicedesk.mtu.edu/TDClient/1801/Portal/KB/ArticleDet?ID=66715
              <-- forse anche questo e' da guardare ...
    - installato dopo molte peripezie (passaggio a python 3 ...)
    ORA DA PROVARE ...
      <==== NON sono riuscito a farlo funzionare ...
  DISINSTALLATO !!!
ReText  da Ubuntu software
  ERRORE::  il live preview NON FUNZIONA !!!
    <-- DA RICERCARE una soluzione



                                                                                         viewer fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                                bash  |
                                                                                          operazioni  |

https://stackoverflow.com/questions/6348902/how-can-i-add-numbers-in-a-bash-script
somma:
    num=$((num1 + num2))
    num=$(($num1 + $num2))       # Also works
    num=$((num1 + 2 + 3))        # ...
    num=$[num1+num2]             # Old, deprecated arithmetic expression syntax

Assign output to variable
  Var=$(command)

WHILE loop
while [ condition ]
do
   command1
   command2
   command3
done

---- num condition
a=2462620
b=2462620

if [ "$a" -eq "$b" ]; then
  echo "They're equal";
fi
------
operators:
-eq # Equal                -ne # Not equal      -lt # Less than
-le # Less than or equal   -gt # Greater than   -ge # Greater than or equal


Directory does not exists:
  if [ ! -d "/dir1/" ]; then
    <dir does not exists>
  fi

                                                                                     operazioni fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                                bash  |
                                                                                      manage scripts  |
Esci ed esegui un altro script
Sostituisci lo script attuale (equivalente a esci+esegui
  <-- chiama lo script con 'source <script>' oppure con '. <script>'
  <-- esegui il cd nello script e questo verra' cambiato ...


                                                                                 manage scripts fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                                bash  |
                                                                                     utenti & gruppi  |
Elenca gli utenti del gruppo docker:
    getent group docker


                                                                                utenti & gruppi fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                                 apt  |
Ricerca package disponibili:
  apt-cache search 'package'
  apt-cache search '' | sort -d | awk '{print $1}'
<-- https://askubuntu.com/questions/786121/how-can-i-get-a-list-of-all-packages-available-for-a-specific-version-of-ubuntu


                                                                                            apt fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                              Docker  |
                                                                                        docker varie  |
docker logs -f --tail 100 nginx

exit error code: https://betterprogramming.pub/understanding-docker-container-exit-codes-5ee79a1d58f6




                                                                                   docker varie fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                              GITHUB  |
                                                                                        GITHUB varie  |
CLONE github repo to netbeans
- In github, create repository with readme, gitignore-node & mit license
    <-- copy repository url
- in Netbeans:
  - From Netbeans Team menu click git --> clone
  - Paste your URL as repository URL, provide your github user name and password
  - Netbeans IDE will clone your repository and will ask to create a new application
  - Crea l'applicazione come normalmente
  - fai aggiunte/edit se credi
  - Commit changes and push to the remote
  - DONE. Check from github your changes and enjoy...



                                                                                   GITHUB varie fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                              system  |
                                                                                               varie  |

docker logs -f --tail 100 nginx

tree -d -L 5 <dir>               solo dirs, 5 livelli

spazio disco:
  du -h --max-depth=1 /path/to/directory
  du -hsc *                                          <-- spazio occupato nel dir


getent group developers

                                                                                          varie fine  |
=====================================================================================================/




                                                                           *** doc interessante ***
---------------------------------------------------------------------------------------------------\
                                                                                      *** SYSTEM ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2018-08-18
                                                                             *** Progetti Futuri ***/----------
---------------------------------------------------------------------------------------------------/
                                                                                *** Progetti 01 ***



=====================================================================================================\
                                                                    Interfaccia raspi-GoThings Cloud  |

VEDI:    traefik ingress controller  |

vedi anche websocketd & seguenti in:   interfaccia web-bash  |
vedi anche script server

                                                                    Interfaccia raspi-GoThings Cloud  |
=====================================================================================================/



=====================================================================================================\
                                                                                Progetto localserver  |
===> si chiamava:  Progetto localhost

---------- NGINX come sito locale
Docker container su NetBeansProject per vedere i file MD
- progetto:   .../NetBeansProjects/github-gothings/gothings-localserver/
- messi script start & stop sotto .../dockrepo
- copiati i file del progetto da netbeans a ~/dockrepo
    <-- porta: 1234

=====> prova di esecuzione: NON FUNZIONA !!!

google: "nginx serve md files"
  <-- da vedere le ricerche alternative suggerite ...
  http://strapdownjs.com/
    <-- aggiungere header + footer.js

----------------------------------------------
vedere: 
  http://dynalon.github.io/mdwiki/#!index.md
    <-- vedere meglio!  sembrerebbe usabile!

---------------- Versione aggiornata                                  2021-10-15

---------- NGINX come sito locale
Docker container vedere i file locali da browser
- repository su github
  - contiene solo i file operativi
      <-- mettere tutto in un .tar.gz
  - file di sviluppo su netbeans
- utile per visualizzare i file MD locali & in sviluppo
- probabilmente utile in GoThings per collaborare tra le COSE
- progetto:   .../NetBeansProjects/github-gothings/gothings-localserver/
- organizzazione dirs:
    ~/create.gothings              script per inizializzare localmente
                                   il sistema Gothings sul PC
                                     <-- scarica il progetto da github
                                         e chiama localserver-go
    ~/dockrepo/                    dir base: comune a tutte le app GoThings
      localserver-go               menu di gestione del localserver
                                   fa qualche verifica di base
                                     <-- NON usa dockimages etc.
      <file operativi vari>        ci saranno file di tipo <AppName>-go
                                      <-- per le varie applicazioni             DA FARE
      .../sysdata/                 area per TUTTE le app
        .../localserver/           area per il localserver
          
        

- messi script start & stop sotto .../dockrepo
- per ora create.gothings e' messo in $HOME
- fatte prove di download da github di ~/localserverdirs.tar.gz
- script make-localserver    <-- OK

- copiati i file del progetto da netbeans a ~/dockrepo
    <-- porta: 1234



                                                                         Progetto localserver - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                             Progetto localwordpress  |
Un wordpress locale, da usare come accesso a GoThings
- raggiungibile da un sito GoThings   (Things ?)
  - menu protetto, attivo solo se il PC locale e' ON
  - sicurezza a due livelli ...
- compatibile con un DynDNS


                                                                      Progetto localwordpress - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                  Progetto localgate  |
Un sito locale per 'assiemare' le cose di casa in stile IDN

                                                                           Progetto localgate - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                        Progetto IDN  |
Un sito internet per realizzare un aggregatore di dati in stile IDN

- collegare siti/API che forniscano i dati secondo IDN
- usare HTTPS ed una forma di auth
- aggregare con un campo <IDN>--dativari</IDN>

- e' possibile usare websocket?

                                                                                 Progetto IDN - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                    Messaging system  |

    https://nats.io/



                                                                                    Messaging system  |
=====================================================================================================/




=====================================================================================================\
                                                                                            Qualcosa  |

                                                                                            Qualcosa  |
=====================================================================================================/


                                                                                *** Progetti 01 ***
---------------------------------------------------------------------------------------------------\
                                                                             *** Progetti Futuri ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2018-08-18
                                                                                   *** STRATEGIA ***/----------
---------------------------------------------------------------------------------------------------/


=====================================================================================================\
                                                                                            Qualcosa  |

=====================================================================================================/


---------------------------------------------------------------------------------------------------\
                                                                                   *** STRATEGIA ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------





****************************************************************************************************
                                                                                 CUT & PASTE library  -  INIT

--- comandi o testi usati molto spesso  ---


                                                                                 cut & paste library  -  END
****************************************************************************************************





====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
??????????????????????  DA QUI IN POI AGGIUSTARE O ELIMINARE !!!  ???????????????                >>> INIZIO


====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
                                                                                                 >>> FINE



====================================================================================================
===================================================================================   *** STORIA ***
====================================================================================================



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2021-
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                                         *** ??? ***



                                                                                         *** ??? ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

-----^  parte da copiare






@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2021-11-10
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                                   *** PC Manager ***


=====================================================================================================\
                                                                                 GoThings Manager PC  |
scopo:
  - gestire tutto dal PC con un browser
  - installare tutto con un solo script

Strategia:
  - si install lo script-server su PC come servizio docker
  - script di start classico per docker

Strategia bis:
  - si aggiunge uno script che prima installa il docker, poi installa
    il Manager-PC

Implementazione:
  - script di start classico: manager-pc-start


Quick Start:

---- passo 0 : download software from github
da terminal in $home:
    wget -O ${HOME}/manager-init https://github.com/fpirri/gothings-pc-manager/blob/main/manager-init
      <-- espande l'archivio managedirs.tar.gz in dockrepo
                                 https://github.com/fpirri/gothings-pc-manager/blob/main/manager-init

---- passo 1 : install ambiente docker
Chiamato dallo script di install:

NOTA: install_pc_manager  -->  verificare docker, creare i networks,  ?
      

---- passo 2 : start docker script server
Chiamato dallo script di install:



---------------------  ADMIN
in conf.json vanno definiti:
	"admin_users": [ "172.29.196.1", "192.168.1.110", "192.168.4.197" ],
    "trusted_ips": [ "172.29.196.1", "192.168.0.0/16" ]
dove l'admin e' "172.29.196.1", ovvero il browser sul docker host che passa 
dal docker network bridge interno
  (congettura probabilmente valida ...)


---------------------

ALTERNATIVA al passo 0  (equivalente)
wget -O ${HOME}/managerdirs.tar.gz https://github.com/fpirri/gothings-pc-manager/raw/main/managerdirs.tar.gz; \
sudo tar xpf "${HOME}/managerdirs.tar.gz" -C "${HOME}"; \
./dockrepo/install_pc_manager
                                   https://github.com/fpirri/gothings-pc-manager/raw/main/managerdirs.tar.gz
  <==== FUNZIONA !


----------------------  Aggiornamento
manager-init
  <-- mettere lo script per il download & start del pc manager
  <-- scarica il tar.gz, lo espande e fa partire lo script-server

docker-install
  <-- da aggiungere
  <-- riferimenti a tutorials 'install docker & docker-compose'
  <-- script super semplice con i passi dedotti dai ref di cui sopra
  <-- versioni per gli OS che uso io
  <-- aggiungere windows ...
  <-- mettere docker-install dentro ~/dockrepo?

aggiustare il readme
  - parlare dello sviluppo con <main repo>-aux
      <-- qui stanno i sorgenti di quello che va in <repo>dirs.tar.gz




                                                                                 GoThings Manager PC  |
=====================================================================================================/

                                                                                   *** PC Manager ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@








@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2021-10-28
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                                  OliveTin quickstart


=====================================================================================================\
                                                                                 GoThings QuickStart  |

Se olivetin mantiene le promesse TUTTO gothings viene molto semplificato!

Steps:
1.- inizializza dockrepo
    - dovrebbe bastare il create.gothings sul PC
    - estendere alla raspberry
    - estendere a windows su PC
2.- installa OliveTin sul PC
    - verifica che sia immediamente eseguibile con il browser                   DA VERIFICARE
3.- installa OliveTin sulla raspberry (con una nuova versione di 0)
    - forse va fatto a mano la prima volta
    - modificare il lavoro gia' fatto per usare olivetin
4.- PROSEGUIRE alla grande !




                                                                                 GoThings QuickStart  |
=====================================================================================================/

                                                                                  OliveTin quickstart
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@






@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2021-10-26
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                                     *** web-bash ***

=====================================================================================================\
                                                                                interfaccia web-bash  |
@@@
@@@ <-- ricerca di una interfaccia tra browser e bash script
@@@
@@@ --> risultato:  provare 'scriptserver'
@@@       <-- https://github.com/bugy/script-server
@@@

Vecchie ricerche:  .../gothings-scratchpad/README.gothings.cloud
    <-- cerca:    --  Roba correlata: websocket & bash


DA PROVARE:
http://websocketd.com/
  <-- wss://....   <-- usare i websocket con bash
  Esempi:
    https://www.bitkistl.com/2016/01/websockets-with-interactive-bash-script.html
    https://stackoverflow.com/questions/40907888/linux-bash-how-to-open-a-websocket-connection-as-client
      <-- vari esempi ...


http://web-console.org/
  <-- da vedere meglio


https://pypi.org/project/webssh/
  <-- da vedere meglio



https://github.com/websockets/wscat
  <-- ??
https://github.com/vi/websocat
  <-- esempi & un po' di doc

https://github.com/progrium/wssh
http://progrium.viewdocs.io/duplex/getting-started/python/
  <-- interessante
https://github.com/progrium/bashstyle
  <-- best pattern to bash

--- sono qui

https://github.com/stuicey/SSHy
  <-- SSH terminal  <-- da vedere meglio ...


--------------- ipotesi di sviluppo futuro
--- interazione con raspi-base
- pagina di accesso su raspi
  - server http che esegue comandi locali
    ?-> aprire shell di controllo sul proprio PC
    ?-> futuro 'http control panel'
- Pagina WP con raspi-key (da current-user)
- un iframe che chiama la pagina di accesso


------- iframe refs:
https://www.dyn-web.com/tutorials/iframes/postmessage/
  <-- tutorial js cross-origin
https://www.dyn-web.com/tutorials/iframes/refs/parent.php
  <-- tutorial js same-origin

https://www.templatemonster.com/blog/best-wordpress-iframe-plugins/




                                                                                interfaccia web-bash  |
=====================================================================================================/



                                                                                     *** web-bash ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  FINE STORIA
