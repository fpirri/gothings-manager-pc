****************************************************************************************************
                                                                                      GoThings CLOUD
****************************************************************************************************
Versione attuale:
  ~/NetBeansProjects/github-gothings/README.gothings.cloud
Versione precedente:
  ~/NetBeansProjects/WP-Sviluppi/gothings/README.gothings.cloud.2021-05-31      <-- 2019-11-28
---------------------------------------------------------------------------------------------------- 2021-05-31
Nuova versione:
  ~/NetBeansProjects/github-gothings/gothings-app-nginx-aux/README.gothings-app-nginx-aux
---------------------------------------------------------------------------------------------------- 2021-06-13

Scopo: 
  - Generazione veloce della parte cloud del sistema GOTHINGS
    <-- procedura guidata per la generazione veloce di una droplet
  - Installazione & setup della droplet gothings
    contenuti:
      - download da github
      - dir necessari per inizializzare l'ambiente gothings (versione cloud)

Note:
  --> dovrebbe essere la parte di controllo internet di gothings-raspi
  --> si potranno aggiungere altre apps ...
      - nginx reverse proxy
      - php
      - mariadb (X Wordpress)

DA VEDERE ASSOLUTAMENTE:
  https://www.home-assistant.io/docs/

******************************************************** DA FARE AL PIU' PRESTO:
  - eliminare/aggiustare wp-signup.php
      <-- https://www.tosolini.info/2014/08/wp-signup-php-redirect-su-wp-multi-site/
  - prefisso "work-in-standby" per i vari README.md su github
  - prefisso "work-in-progress" per i vari README.md su github
  - aggiustare la parte gothings

EMAIL:
  https://www.hostinger.com/tutorials/email/how-to-set-up-gmail-for-your-own-domain
    <-- per usare gmail per ricevere/INVIARE TUTTA la posta
    <-- cerca anche:  Gmail custom domain free

DA STUDIARE:
  - Replicare TUTTO il wordpress singolarmente per ogni sito
    --> TUTTI i plugin funzionano
    --> pro & con:  ogni sito va gestito da solo !
    ==> ~ 170 MB / sito in piu'


****************************************************************************************************

****************************************************************************************************

----------------------------------------------------------------------------------------------------
                                                                                       History Index

         per la storia precedente, cerca:     *** STORIA ***                            linea: ~3000
  Porting della BASE raspberry sul cloud:     *** 2.a stesura CLOUD droplet ***
                               strategia:     *** Strategie - cloud v02 ***
                   installazione droplet:     *** 1.a stesura di BASE + WPMULTI in droplet singola ***

                             ALWAYS OPEN:
                                              *** Ideas to try ***
                                              Dati UTILI  |

                                IN CORSO:     *** Service NGINX - v0.01.03 ***
                                              *** Service WP - v0.01.07 ***

                         Il nuovo helper:     
                                              *** PHP Service - v0.00.3 ***
                                              *** WPMulti v0.01.05 *** 
                                              *** GOTHINGS cloud v04 ***
                                              *** NODE Service - v0.00.1 ***

                                     OLD ---------------------------------------
                                              *** Service WP - v0.01.06 ***
                                              *** WP Service - v0.01.03  ***
                                              *** DB service - v0.01.05  ***
                                              *** Cloud v03 - droplet base  + db separato ***
                                              *** Cloud v03 - gocloud v0.01.00 ***
                                              *** PhpMyAdmin service - v0.01.02  ***
                                              *** Helper container - v01 ***
                                              -- 3.o sviluppo: init MariaDB con bash

                                                          --- Roba utile, non presente in STORIA ---
                                                                         ===> mysql da terminale ...
                                              
                                              *** Gocloud - Program strategy ***
                                              *** lista REFERENCES ***


                  Per cut & paste interessanti:     CUT & PASTE library  -  INIT
                                      ref vari:


last commit from pala:
    GOTHINGS cloud - v03 - wp : NODE service iniz work - 0.24

On vmatic:
    LOCAL commit only



****************************************************************************************************
----------------------------------------------------------------------------------------------------
                                                                                        DA RICORDARE

ref.:  https://www.linuxjournal.com/content/search-gui-docker
Don't get me wrong, I'm familiar with Docker. I use it for most of my server needs. 
It's my first go-to when testing a new app. Heck, I taught an entire course on Docker for CBT Nuggets (my day job). 
The problem is, Docker works so well, I rarely need to interact with it. 
So, my FIFO buffer fills up, and I forget the simple command-line options to make Docker work. 
Also, because I like charts and graphs, I decided to install a Docker GUI. 
It was a bit of an adventure, so I thought I'd share the ins and outs of my experience. 

...
  LEGGERE il  seguito, ci si trovano suggerimenti utili per gothimgs
...

AGGIUNTE:
  https://github.com/picluster/picluster
  https://www.linux.com/topic/desktop/make-container-management-easy-cockpit/


https://www.youcanwp.com/four-essential-wordpress-pages-for-any-new-website/
  <-- consigli di base, da verificare


****************************************************************************************************
----------------------------------------------------------------------------------------------------
                                                                                       Comandi utili

docker logs -f --tail 100 nginx

tree -d -L 5 <dir>               solo dirs, 5 livelli

spazio disco:
  du -h --max-depth=1 /path/to/directory
  du -hsc *                                          <-- spazio occupato nel dir



****************************************************************************************************
----------------------------------------------------------------------------------------------------
                                                                                   SPAM IP addresses
Siti per controllare:
  https://ipremoval.sms.symantec.com/ipr/lookup
    <-- SYMANTEC
  https://www.ipqualityscore.com/ip-reputation-check
    <-- sembra piuttosto buono

Cattivi:
  128.14.211.186      proxy - score 99
  38.143.66.253       proxy - score 100


Buoni (forse):
  66.249.75.23            Google Bot - score 23


Articoli da vedere:
  https://www.f-secure.com/gb-en/home/articles/can-my-home-wi-fi-be-hacked

  https://zeltser.com/lookup-malicious-websites/


****************************************************************************************************
****************************************************************************************************


------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-08-31
                                                                                *** Ideas to try ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                          *** Trying ideas 0.01 ***


=====================================================================================================\
                                                                                        Trying ideas  |
                                                                                      Control raspi   |
Funzioni utili:
  - send local IP from raspi to WP
  - exchange keys between raspi and WP

------------ command raspi from PC
- use gothings-pc (to-be-adjusted)

------------ TX data from raspi to WP
HTTP-Client su raspi:
- call specific page
    --> send parameters?
strategy:
  --> experiment using curl
  --> automate with bash
      --> start program at boot
  --> work using http-client in nodejs


------------ RX data from WP to raspi
- response to http request (raspi to WP)
- websocket su raspi
  - start con http-client & upgrade to websocket


------------ security handshake
1.- WP ask raspi to start handshake
    ---> user push a button in the page
    - WP chooses a random key-w
    - from now on WP inserts key-w in every request
2.- Raspi responds asking for pwd
    - raspi inserts key-w in response
3.- WP respond correct password
4.- Raspi send back OK
    - Raspi chooses a random key-r
    - from now on raspi inserts key-r in every request
5.- WP send back OK
in sostanza:
  - key-w identifica WP come interlocutore corretto
  - key-r identifica raspi come interlocutore corretto
  - si posoono/devono aggiungere controlli IP e quant'altro ..
la comunicazione e' (probabilmente) sicura ...


                                                                                Control raspi - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                        Trying ideas  |
                                                                                      Control raspi   |
Funzioni utili:
  - send local IP from raspi to WP
  - exchange keys between raspi and WP

------------ command raspi from PC
- use gothings-pc (to-be-adjusted)

------------ TX data from raspi to WP
HTTP-Client su raspi:
- call specific page
    --> send parameters?
strategy:
  --> experiment using curl
  --> automate with bash
      --> start program at boot
  --> work using http-client in nodejs


------------ RX data from WP to raspi
- response to http request (raspi to WP)
- websocket su raspi
  - start con http-client & upgrade to websocket


------------ security handshake
1.- WP ask raspi to start handshake
    ---> user push a button in the page
    - WP chooses a random key-w
    - from now on WP inserts key-w in every request
2.- Raspi responds asking for pwd
    - raspi inserts key-w in response
3.- WP respond correct password
4.- Raspi send back OK
    - Raspi chooses a random key-r
    - from now on raspi inserts key-r in every request
5.- WP send back OK
in sostanza:
  - key-w identifica WP come interlocutore corretto
  - key-r identifica raspi come interlocutore corretto
  - si posoono/devono aggiungere controlli IP e quant'altro ..
la comunicazione e' (probabilmente) sicura ...


                                                                                Control raspi - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                        Trying ideas  |
                                                                                      Huginn - IFTTT  |
Scopo: realizzare un IFTTT privato

refs:
https://hub.docker.com/r/huginn/huginn
  <-- docker image
https://medium.com/better-programming/huginn-an-open-source-self-hosted-ifttt-b8327fb2732a
  <-- tutorial
https://docs.bytemark.co.uk/article/how-to-deploy-huginn-on-your-own-server-using-docker/
  <-- tutorial

- Versione docker
  - container da installare insieme al DB
  - ?


                                                                               Huginn - IFTTT - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                        Trying ideas  |
                                                                                           WOOThings  |
Scopo: trasformare WooCommerce nel sito personale delle cose

refs:
https://subscription.packtpub.com/book/web_development/9781789532012/13/ch13lvl1sec82/e-commerce-stores
  <-- ebook su come fare i siti



                                                                                    WOOThings - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                        Trying ideas  |
                                                                                          Prove CF7   |
Dopo i ref in WP exchange data si prova CF7
- si installa CF7
    <-- network activate: NO
    <-- attivato su :  www  things  (no: cloud   wpwork)

-------------------------------------------------------------------------  PROVE
1.- chiamare una pagina CF7 da PC bash (curl)
  - vedere cosa torna sul terminale
  - vedere cosa c'e' nella emai spedita
  - memorizzare i dati con CF7 getting-default-values (vedi ref. sotto)
====> prova con curl/bash:
      --> la pagina WP e' raggiunta ed i campi sono aggiornati
2.- tentativo curl-->POST
  - costrire un form con dati di esempio
  - messi i dati 'giusti' nello script cf7_test
    --> alla prima: NON FUNZIONA!
                                                                                SONO QUI

ref.s:
https://hub.packtpub.com/working-forms-using-rest-api/
  <-- form editor using WP REST API
  <-- non e' chiaro se fa davvero quello che ci serve

https://www.sitepoint.com/build-your-own-wordpress-contact-form-plugin-in-5-minutes/
  <-- esempio INTERESSANTE per costruire un tuo plugin form+email
  <--

https://stackoverflow.com/questions/34723740/contact-form-7-call-submit-event-in-jquery
  <-- jquery intercetta il click sul submit <-- puoi eseguire un js
  <-- forse puoi anche cercare (nel DB o in custom field) se la raspi ha chiamato ...
                                                                ?--> VA STUDIATO MEGLIO!
  <-- vedi anche:  https://contactform7.com/dom-events/

https://stackoverflow.com/questions/40000543/modify-contact-form-7-submission-data
  <-- la modifica potrebbe inserire un valore dal DB

https://stackoverflow.com/questions/59878327/how-to-submit-contact-form-7-programmatically
  <-- 

https://stackoverflow.com/questions/27798264/contact-form-7-ajax-callback
  <-- per capiore meglio come funziona ajax in WP

https://wordpress.org/support/topic/contact-form-7-rest-api-for-native-mobile-app/#post-12130487
  <-- sembra faccia esattamente quello che ci serve!

idea (se possibile):
- crea e aggiungi un custom field contenente la key della tua raspi
  alternativa: inserisci nel DB un record distintivo:  key, myIP, data di inserzione
- fai un CF7 con un campo nel quale l'utente scrive la chiave del suo raspi
- fai un plugin, richiamabile come shortcode, che cerca nel DB la key di cui sopra
- oppure fai uno script js che cerca nel DB (o tra i custom field) la key di cui sopra
  <-- script js chiamato dall'evento submit
  <-- segnala se la chiave e' trovata?
- condiziona il cf7 a fare il submit solo se se la chiave viene trovata
- cancella i record vecchi



=============================
-----------------------------
  si mettono i form compilati nel DB con Contact Form 7 Database Addon – CFDB7

- call contact page from PC bash 
  --> experiment using curl

  --> automate with bash
      --> start program at boot ?


- si usano i dati del contesto con contact-form-7-dynamic-text-extension/
    ed anche con CF7 getting-default-values (sotto)
  si mettono i form compilati nel DB con Contact Form 7 Database Addon – CFDB7





--------------------------------------------------------------  references usate
https://contactform7.com/docs/
  <-- doc base

https://wordpress.org/plugins/contact-form-cfdb7/
  <-- mette i dati nel WP DB

https://contactform7.com/getting-default-values-from-the-context/
  <-- personalizziamo la chiamata pre-compilato dei campi



-------------------------------------------------------  references interessanti

https://www.sitepoint.com/build-your-own-wordpress-contact-form-plugin-in-5-minutes/
  <-- esempio INTERESSANTE per costruire un tuo plugin form+email





================================================================ Da QUI in POI : AGGIUSTARE

PROVE da fare

============================
riassumendo dai ref. sotto:
  si usa CF7
  si usano i dati del contesto con contact-form-7-dynamic-text-extension/
    ed anche con CF7 getting-default-values (sotto)
  si mettono i form compilati nel DB con Contact Form 7 Database Addon – CFDB7

ulteriori prove:
  usare il js nel form per costruire variabili
  cf7-conditional-fields per estendere ulteriormente il form

  DA VEDERE: i nonce di WP

------ uso di FORMS

https://contactform7.com/
  <-- verificare come si usano i WP nonce
  <-- e' possibile mettere dati nel WP DB : https://wordpress.org/plugins/contact-form-cfdb7/
  <-- add-on utile:  ??

https://contactform7.com/getting-default-values-from-the-context/
  <-- mettere in un campo un valore preso dal contesto
  <==== possiamo usare questo per far vedere l'IP !!!!

https://wordpress.org/plugins/contact-form-7-dynamic-text-extension/
https://sevenspark.com/docs/contact-form-7-dynamic-text-extension
  <-- doc per dynamic
https://support.advancedcustomfields.com/forums/topic/connection-with-contact-form-7/
  <-- esempio per dynamic (sopra)
  <-- credo possa essere usato in connessione con pagine private

https://zemez.io/wordpress/support/how-to/add-new-fields-contact-form-7/
  <-- tutorial per aggiungere nuovi campi

https://premium.wpmudev.org/blog/extending-contact-form-7-with-plugins/
  <-- free plugin interessanti per CF7 - vedere:
        honeypot
        elenco dei forms in admin durante il test - da provare?

Altri plugin forse utili:
https://wordpress.org/plugins/cf7-conditional-fields/
  <-- estende il form su condizioni dinamiche

https://contactform7.com/getting-default-values-from-shortcode-attributes/
  <-- prende attributi dal contact form (riciede PHP)

provare anche a partire da ACF:
https://contactform7.com/getting-default-values-from-shortcode-attributes/

https://wordpress.org/plugins/advanced-cf7-db/
  <-- alternativa a CFDB7

==============> possono essere utili:
----- WPForms: sembra servano estensioni premium
https://wpforms.com/how-to-use-custom-fields-in-user-submitted-posts/
  <-- tutorial wpform + custom fields

https://stackoverflow.com/questions/34186926/is-it-possible-to-place-a-http-post-and-get-request-for-a-specific-button-click
  <-- esempio di HTTP-CLIENT che 'riempe' un form

ulteriori prove:
  usare il js nel form per costruire variabili
  cf7-conditional-fields per estendere ulteriormente il form

  DA VEDERE: i nonce di WP



                                                                                    Prove CF7 - fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                        Trying ideas  |
                                                                                       Child themes   |
ref.:
https://www.smashingmagazine.com/2016/01/create-customize-wordpress-child-theme/
  <-- creazione di child themes
  - segui il tutorial ...   <-- FUNZIONA!

https://www.smashingmagazine.com/2015/06/wordpress-custom-page-templates/
  - seguiamo il tutorial ...
                                                                                SONO QUI
*** il livello di programmazione richiesto e' eccessivo
    la doc e' scarsa, l'apprendimento rischia di essere troppo lungo ...


altre ref:

https://www.smashingmagazine.com/2015/04/building-custom-wordpress-archive-page/
https://www.smashingmagazine.com/2011/10/definitive-guide-wordpress-hooks/

                                                                                 Child themes - fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                        Trying ideas  |
                                                                                     acf on frontend  |

Strategia prevista per l'uso dei custom fields acf:
- uno user x inizializza un custompost che contiene la key della raspi (+ altra roba)
- si costruisce una form opportuna con CF7, per avere un endpoint su WP REST API 
    <-- necessario?
- curl from raspi scrive su quel custom-post + key il proprio IP (+ altra roba)
    <-- scrittura condizionata al valore della key
    <-- autorizzazione per scrivere?
    <-- la key funziona come un nonce?
    <-- inizialmente va bene anche se ci possono scrivere tutti ...
- inizio: fare il minimo necessario ...

eventualmente:  ======>  abbiamo un canale di comunicazione raspi-->WP  !


--------------------------------------------------------------------------------
-------------------------------------------- Funzionamento possibile per le COSE
- Considerazioni dedotte guardando  post & postmeta
    <-- NON E' CHIARO come funziona WP
- non sembra ci sia un legame diretto tra un autore ed i postmeta della COSA
- si sono costruite pagine per creare ed aggiornare una cosa
                                                           con un nuovo utente: RIFARE LA PROVA 
---- create-things
  crea un post con i valori iniziali
    <-- MANCANO controlli prima della creazione ...
  

---- add-new-post
  modifica i valori dei campi del gruppo thing-data
    <-- anche qui NESSUN CONTROLLO
  vengono CREATI post con i nuovi valori
    <-- post_id          619, 620  (valori sotto uguali)
        post_title       New Post
        post_status      inherit
        comment_status   closed
        ping_status      closed
        post_name        618-revision-v1
    <-- questi post NON HANNO postmeta

                                                                                DA FARE
                                                                                IN CORSO

--------------------------------------------------------------------------------
Prove:
----- generazione custom post
- costruito custom post type 'Thing'
- costruita una 'template archive page' per 'Things'
?  ref.   https://www.wpbeginner.com/wp-tutorials/how-to-create-a-custom-post-types-archive-page-in-wordpress/


------------------------------- debug things                              fase 0
- si vuole mostrare la lista dei gruppi acf
---- vedi la pagina:  https://things.gothings.org/test-pages/debug-things/
refs:
  https://www.smashingmagazine.com/2015/06/wordpress-custom-page-templates/

======> si leggono tutti gli acf-fields-group
          --> si leggono i relativi acf-fields
          --> si mostrano tutti i nomi sul front-end


--------------------------------------------------------------------------------
------------------------------- debug things                              fase 1
- si definisce il template listing-things.php
- si vuole mostrare, per ogni gruppo, righe nome-valore per tutti gli acf-fields
    <-- in realta' i valori NON li abbiamo ancora trovati ...

------------- template per prova-1 : array definiti
--- $field_groups (2):
array(14) {
        ["ID"]=>    int(117)
       ["key"]=>    string(19) "group_5f54ab8f8de3e"
     ["title"]=>    string(10) "Thing-data"
    ["fields"]=>    array(0) {}    ... in realta' non ci sono
    ["location"]=>  ... regole di display
    ...

--- $fields :
array(5) {
  [0]=>  object(WP_Post)#2056 (24) {
                     ["ID"]=>  int(118)                   <-- ID del campo
            ["post_parent"]=>  int(117)                   <-- ID del gruppo
            ["post_author"]=>  "3"                        <-- autore della definizione
             ["post_title"]=>  "Thing Name"               <-- label
           ["post_excerpt"]=>  "thing_name"               <-- name
              ["post_name"]=>  "field_5f54abcc7cabd"      <-- field key
              ["post_type"]=>  "acf-field"                <-- tipo assegnato ai campi
           ["post_content"]=>  "a:10:{s:4:"type";s:4:"text";s:12:"instructions";s:19:"Name given to thing";s:8:"required";i:1;s:17:"conditional_logic";i:0;s:7:"wrapper";a:3:{s:5:"width";s:0:"";s:5:"class";s:0:"";s:2:"id";s:0:"";}s:13:"default_value";s:0:"";s:11:"placeholder";s:26:"name assigned to the thing";s:7:"prepend";s:0:"";s:6:"append";s:0:"";s:9:"maxlength";s:0:"";}"
                                                          <-- valori per la definizione del campo
--- ininfluenti? :
            ["post_status"]=>  "publish"                  <-- ??
              ["post_date"]=>  "2020-09-06 10:09:13"
          ["post_date_gmt"]=>  "2020-09-06 10:09:13"
         ["comment_status"]=>  "closed"                   <-- ??
            ["ping_status"]=>  "closed"                   <-- ??
          ["post_password"]=>  ""                         <-- ??
                ["to_ping"]=>  ""
                 ["pinged"]=>  ""
           ["post_modifed"]=>  "2020-09-24 20:42:13"
      ["post_modified_gmt"]=>  "2020-09-24 20:42:13"
  ["post_content_filtered"]=>  ""
                   ["guid"]=>  "http://things.gothings.org/?post_type=acf-field&p=118"
             ["menu_order"]=>  int(0)
         ["post_mime_type"]=>  ""
          ["comment_count"]=>  "0"
                 ["filter"]=>  "raw"
  }
  [1]=>  ...

$display_fields   <-- per la visualizzazione
 ...

Risultato:
  Thing-data :   Thing Name   Thing Key   Thing IP address   Thing Secret   Thing User
  Thing-main :   Thing Category   Thing Genre   Thing operation   Thing Main User

--------------------------------------------------------------------------------
------------------------------- debug things                              fase 2
- si aggiorna il template listing-things.php
- si vuole mostrare, per ogni gruppo, righe nome-valore per tutti gli acf-fields
refs:
https://studio.bio/making-advanced-custom-fields-acf-work-for-you-and-your-clients/
  <-- esempio di template che fa quello che ci serve
https://wordpress.stackexchange.com/questions/47031/display-all-values-of-custom-a-field-created-with-acf-on-a-page
  <-- altro esempio ...
https://denverdata.com/blog/how-use-wpquery-display-custom-post-type
  <-- come usare WP_Query
https://www.billerickson.net/code/wp_query-arguments/
  <-- elenco dei parametri usabili in WP_Query
https://wordpress.stackexchange.com/questions/47031/display-all-values-of-custom-a-field-created-with-acf-on-a-page
  <-- idea base per leggere i valori
https://www.advancedcustomfields.com/resources/get_field_object/
  <-- funzione acf per leggere i valori


------------- tentativo prova-2 :
- prove di ricerca (anche per imparare i WP template)
- sono definiti gli array come sopra

$display_groups: {
  array( 'ID' => 0,           <-- ID del gruppo     117
         'key'=>'',           <-- chiave            group_5f54ab8f8de3e
       'title'=>''            <-- label             Thing-data
  )
}

Vogliamo aggiungere i campi associati:
array(n) {
    [0]=>   object(WP_Post)#2056 (24) {
                        ["ID"]=>  int(118)                   <-- ID del campo
               ["post_parent"]=>  int(117)                   <-- ID del gruppo
               ["post_author"]=>  "3"                        <-- autore della definizione
                ["post_title"]=>  "Thing Name"               <-- label
              ["post_excerpt"]=>  "thing_name"               <-- name
                 ["post_name"]=>  "field_5f54abcc7cabd"      <-- field key
                 ["post_type"]=>  "acf-field"                <-- tipo assegnato ai campi
              ["post_content"]=>  "a:10:{s:4:"type";s:4:"text";s:12:"instructions";s:19:"Name given to thing";s:8:"required";i:1;s:17:"conditional_logic";i:0;s:7:"wrapper";a:3:{s:5:"width";s:0:"";s:5:"class";s:0:"";s:2:"id";s:0:"";}s:13:"default_value";s:0:"";s:11:"placeholder";s:26:"name assigned to the thing";s:7:"prepend";s:0:"";s:6:"append";s:0:"";s:9:"maxlength";s:0:"";}"
                                                            <-- valori per la definizione del campo
            }
    [..]=>  object ...
              ...
            }
          }

Funzione da usare:
get_field_object($selector, [$post_id = false], [$format_value = true], [$load_value = true]);
get_field_object(field key, ? , ?, 'true');
get_field_object($field-> post_name);

??? values ???
string(471) "a:16:{s:4:"type";s:4:"text";s:12:"instructions";s:22:"The user of this thing";s:8:"required";i:0;s:17:"conditional_logic";i:0;s:7:"wrapper";a:3:{s:5:"width";s:0:"";s:5:"class";s:0:"";s:2:"id";s:0:"";}s:10:"only_front";i:0;s:13:"default_value";s:0:"";s:11:"placeholder";s:14:"logged in user";s:7:"prepend";s:0:"";s:6:"append";s:0:"";s:9:"maxlength";s:0:"";s:12:"custom_title";i:0;s:11:"custom_slug";i:0;s:15:"custom_username";i:1;s:10:"custom_sku";i:0;s:8:"readonly";i:1;}"
   
===> NON si riesce a leggere valori !!

----------------------------------- altra prova:
- fatte molte altre ricerche ... il risultato:
  - la cosa migliore sembra sia adattare il ref :
      ref. 1) https://studio.bio/making-advanced-custom-fields-acf-work-for-you-and-your-clients/
----- svolgimento:
- da prova 1 sopra si ottiene il post_id del gruppo e da quello l'array $fields
- dall'array $fields si cercano i valori (meta) come fa il ref ...

====> si arriva al template .../auxfiles/2020-11-04 listing-things.php
      - sembra la traccia giusta per mostrare lo stato degli acf

--------------------------------------------------------------------------------
------------------------------- debug things                              fase 3
- si aggiorna il template listing-things.php per mostrare i valori di tutti i campi

tentiamo:
https://www.advancedcustomfields.com/resources/get_field_object/

  get_field_object($selector, [$post_id = false], [$format_value = true], [$load_value = true]);
==>
  get_field_object($selector, [$post_id = false], [$format_value = true], [$load_value = true]);

    $selector (string) (Required) The field name or field key.
    $post_id (mixed) (Optional) The post ID where the value is saved. Defaults to the current post.
    $format_value (bool) (Optional) Whether to apply formatting logic. Defaults to true.
    $load_value (bool) (Optional) Whether to load the field’s value. Defaults to true.

    get_field_object($field->post_excerpt, $field->ID , 'false', 'true');
==>
    get_field_object($field->post_excerpt, $field->ID , 'false', 'true');

=====================================================>  ri-definizione dei campi
---> utile per capire cosa succede davvero in WP

                                                                                SONO QUI

@@@@@  ::==>  NON FUNZIONA !!!!
              acf free non ammette valori multipli per un campo
              e' necessario il 'repeater' disponible sono nel PRO (da 40 249 eur/anno)

@@@@@  ::==>  cambiamo approccio:   usiamo:    DB custom tables  |


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
----------------------------------- altra prova ancora:
- fatte molte altre ricerche ... sembra interessante la funzione:
    get_post_custom( int $post_id )
- vediamo i refs :
  ref. 2) https://developer.wordpress.org/reference/functions/get_post_custom/
    <-- sembra interessante la funzione:  get_post_custom( int $post_id )
  ref. 3) https://developer.wordpress.org/reference/functions/get_post_meta/
    - call:  get_post_meta( int $post_id, string $key = '', bool $single = false )
    - questa chiamata dovrebbe ritornare tutti i post-meta:
        get_post_meta( ID, '', false)
NON FUNZIONA!!!

    get_post_meta( int $post_id, string $key = '', bool $single = false )
    get_post_meta( $field->ID, '', 'false' )


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

https://www.advancedcustomfields.com/resources/get_field_object/

get_field_object($selector, [$post_id = false], [$format_value = true], [$load_value = true]);

    $selector (string) (Required) The field name or field key.
    $post_id (mixed) (Optional) The post ID where the value is saved. Defaults to the current post.
    $format_value (bool) (Optional) Whether to apply formatting logic. Defaults to true.
    $load_value (bool) (Optional) Whether to load the field’s value. Defaults to true.

    get_field_object($field->post_excerpt, $field->ID , 'false', 'true');



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

vediamo:
  nel $field  troviamo:
    ...
    string(14) "Thing Category"
    ["post_excerpt"]=>
    string(14) "thing_category"
    ["post_status"]=>
    string(7) "publish"
    ...
    ["post_type"]=>
    string(9) "acf-field"
    ...
- quindi, per ref. 1) dovremmo fare:
    $args = array (
        'post_type'         => array( 'acf-field' ),
        'post_status'       => array( 'publish' ),
        'meta_query' => array(
            array(
                'key' => field->post_excerpt,
//                'value' => 'leadership'
            ),
        )
    );

@@@@@@@@@@@@@@@@@@@@@@@@@@@@



--------------- plugin DA RICORDARE ...
https://wordpress.org/plugins/advanced-access-manager/
https://aamplugin.com/
  <-- molte features interessanti per user management & ...

---------------
ref:
https://since1979.dev/add-custom-acf-fields-to-the-wp-rest-api/




Esempio in:
https://stackoverflow.com/questions/48787127/wp-rest-api-update-post-meta-using-curl
  <-- non e' chiaro se fa davvero quello che ci serve
https://developer.wordpress.org/rest-api/extending-the-rest-api/modifying-responses/
  <-- doc per sopra ...
https://developer.wordpress.org/rest-api/reference/posts/#update-a-post
  <-- doc per sopra ...

es. correlati:
https://stackoverflow.com/questions/44409430/insert-custom-post-type-with-custom-field-by-using-wp-rest-api
  --> segui i vari ref. presenti ...
      https://stackoverflow.com/questions/35519680/how-to-correctly-create-custom-post-type-with-custom-fields-through-wp-rest-api
        <-- soprattutto questo






                                                                              acf on frontend - fine  |
=====================================================================================================/






=====================================================================================================\
                                                                                        Trying ideas  |
                                                                                      Private pages   |


------- Ref.s:
https://blog.templatetoaster.com/make-wordpress-site-private-best-5-plugins/
  -->
    https://it.wordpress.org/plugins/jonradio-private-site/#description
    https://it.wordpress.org/plugins/wp-private-content-plus/

https://usersinsights.com/wordpress-private-page/

https://www.hostinger.com/tutorials/wordpress-private-page



                                                                                Private pages - fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                        Trying ideas  |
                                                                                                  ?   |


                                                                                            ? - fine  |
=====================================================================================================/


                                                                          *** Trying ideas 0.01 ***
---------------------------------------------------------------------------------------------------\
                                                                                *** Ideas to try ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------




---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-03-16
                                                                             *** Cloud resources ***/----------
---------------------------------------------------------------------------------------------------/
                                                                                   *** DROPLETS ***      



=====================================================================================================\
                                                                                            DROPLETS  |
                                                                                      START droplets  |

                                                                                      droplets fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                            DROPLETS  |
                                                                                        gothings-v09  |

user: yesfi

Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-88-generic x86_64)

  System information as of Wed Mar 24 11:12:09 UTC 2021

  System load:                    0.0
  Usage of /:                     40.3% of 24.06GB
  Memory usage:                   57%
  Swap usage:                     0%
  Processes:                      93
  Users logged in:                1
  IP address for eth0:            104.248.95.29
  IP address for eth1:            10.133.94.60
  IP address for docker0:         172.17.0.1
  IP address for br-004bfb568080: 172.29.195.1
  IP address for br-17ecfb12cdd8: 192.168.112.1
  IP address for br-4b6c24f61c21: 172.29.196.1
  IP address for br-dc4a9de6df66: 172.23.0.1


--------------------------------------------------------------------------------
 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

                                                                                 gothings-v09 - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                            DROPLETS  |
                                                                                   gothings-v09 dirs  |

----------------------------------------------------------------------- old dirs
2021-04-30: make backup archive 
  #  tar target_path/file.tar.gz source_dir
  cd ~      <-- /home/yesfi/
  sudo tar -czvpf 2021-04-30_dockrepo.tar.gz dockrepo  > tar.txt
    <-- .../NetBeansProjects/github-gothings/droplet-v09/ :
             2021-04-30_dockrepo.tar.gz       archivio
             2021-04-30_dockrepo.tar.txt      tar log
             2021-04-30_dockrepo_tree         lista dirs


-----------------------------------------------------------------  dockrepo_tree
2021-04-30_dockrepo_tree

------------------------------------------------------- dockimages
------ Spostati in 2021-04-30_dockrepo/dockimages/:
─ dockrepo
    ├── dockimages
    │   ├── cloud                                  <-- ELIMINARE
    │   ├── dirs                                   <-- ELIMINARE
    │   ├── helper                                 <-- ELIMINARE
    │   ├── myadmin                                <-- ELIMINARE
    │   │   └── var_www_html                       <-- ELIMINARE
    │   ├── redis                                  <-- ELIMINARE
    │   └── wp                                     <-- ELIMINARE
    │       └── var_www_html                       <-- ELIMINARE
    │   ├── htdocs                          <-- ELIMINATO
    │   ├── var_www_html                    <-- ELIMINATO

------- Da Vedere:
    ├── sysconfig
    │   ├── nginx                           <-- ??
    │   └── servicewp                       <-- Versione provvisoria, da copiare

------- Mantenuti:
─ dockrepo
    ├── dockimages
    │   ├── db                   <-- OK
    │   ├── nginx                <-- OK
    │   ├── servicewp            <-- OK


------ Spostati in 2021-04-30_dockrepo/sysdata/:
─ dockrepo
  └── sysdata/
      ├── cloud                           <-- ELIMINATO
      ├── helper                          <-- ELIMINATO
      ├── helperdata                      <-- ELIMINATO
      ├── myadmin                         <-- ELIMINATO
      ├── php                             <-- ELIMINATO
      ├── redisdata                       <-- ELIMINATO


------ Da Vedere:
─ dockrepo
  └── sysdata/
      ├── htdocs
      └── var_www

      ├── htdocs
      │   ├── consumi
      │   ├── myadmin
      │   ├── services
      │   ├── static
      │   ├── test
      │   └── vuejs
      └── var_www
          ├── html
          ├── servicewp
          └── test

------ In Funzione:

─ dockrepo
  └── sysdata/
      ├── db
      ├── dbdata
      ├── nginx
      ├── nginxdata
      ├── servicewp


      ├── db
      │   └── dbconfig
      ├── dbdata
      │   ├── gtlite
      │   ├── gtlite_bk
      │   ├── gtthings
      │   ├── mysql
      │   └── performance_schema
      ├── nginx
      │   ├── data
      │   ├── htdocs
      │   └── nginxdata
      ├── nginxdata
      │   ├── certbot_etc
      │   ├── conf.d
      │   ├── pwd_pma_pass
      │   ├── sites-enabled
      │   └── ssl
      ├── servicewp
      │   ├── nginxdata
      │   └── var_www
  






                                                                            gothings-v09 dirs - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                            DROPLETS  |
                                                                                     gothings-v01-03  |

user: yesfi


Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-88-generic x86_64)

  System information as of Wed Mar 24 12:08:16 UTC 2021

  System load:                    0.0
  Usage of /:                     34.5% of 24.06GB
  Memory usage:                   48%
  Swap usage:                     0%
  Processes:                      128
  Users logged in:                0
  IP address for eth0:            188.166.70.203
  IP address for eth1:            10.133.3.65
  IP address for docker0:         172.17.0.1
  IP address for br-4b6c24f61c21: 172.29.196.1
  IP address for br-9d8ea591450f: 172.21.0.1
  IP address for br-dedf786dcb34: 172.18.0.1
  IP address for br-004bfb568080: 172.29.195.1
  IP address for br-f53bc45b8563: 172.19.0.1





--------------------------------------------------------------------------------
 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

                                                                              gothings-v01-03 - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                            DROPLETS  |
                                                                                                  ??  |


                                                                                  fine  |
=====================================================================================================/




                                                                                   *** DROPLETS ***      
---------------------------------------------------------------------------------------------------\
                                                                             *** Cloud resources ***\----------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------




---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-03-16
                                                                               *** GOTHINGS tech ***/----------
---------------------------------------------------------------------------------------------------/
                                                                 *** Gocloud - Program strategy ***


=====================================================================================================\
                                                                                       Gothings Tech  |
                                                                                       Concetti base  |

Premessa:
  Per l' "Internet delle Cose" Gothings e' l'analogo del sistema operativo per un computer
  Gothings consente all'utente di usare una astrazione di livello superiore per le sue 'cose'

Obiettivo:
1.- Ridurre al minimo le conoscenze tecniche necessarie ad un utente per usare gothings
    su un insieme di schede collegate su una LAN
      <-- il target ideale e' la facilita' di uso delle app di un telefonino
      <-- in pratica si accetta che le conoscenze dell'utente gli consentano di usare
          una raspberry per progetti fai-da-te
2.- Si parte da schede raspberry, concettualmente e' estendibilea tutte le schede che che
    usino una distribuzione debian-like
3.- ?

Caso Cloud:

costruire un cloud di supporto

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  VERIFICARE & AGGIORNARE la struttura delle app
problema:
  - il software di sviluppo della app deve stare tutto in un .tar.gz
  - per mantenerlo separato da tutto il resto su github lo si mette in:
      .../gothings-app/<app>/<app>dirs.tar.gz
  - le droplet interessate alla app sono 2:
      nginx-http-proxy            attualmente gothings-v01-03
      <droplet-app>               attualmente gothings-v09
  - ne consegue che sia expand che init & forse anche install devono essere cambiate !
      <-- come si generalizzano ???
      <-- mettiamo un bash script su tutti?       <-- direi di si
  - da vedere soprattutto la parte sulla droplet nginx

                                                                                                fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                       Gothings Tech  |
                                                                                       START droplet  |
- si parte da una droplet creata con gli 'user data':
               .../gothings/wpmulti-dev/gothingsserverinit.sh
  - la droplet e' stata creata con:
    - OS:  Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-72-generic x86_64)
    - admin ssh con certificato
    - installazione docker-ce & docker-compose   (Docker version 19.03.5, build 633a0ea838)
    - lettura del bootstrap 'c' da:
        https://github.com/fpirri/gothings-install/raw/master/c
- si gira ./c per fare il download di gocloud da:
        https://github.com/fpirri/gothings-cloud/raw/master/gocloud
- viene lanciato gocloud che gestira' automaticamente la costruzione del sistema gothings


                                                                                                fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                       Gothings Tech  |
                                                                     gocloud: strategia di bootstrap  |

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ DA INTEGRARE QUI:

  strategia di bootstrap in:    GOTHINGS cloud v04     strategia di bootstrap

e anche:
  strategia di bootstrap in:    *** WPMulti v0.01.03 ***

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


Nota:   <appname>        nome dell'applicazione, es. 'wp'
        <gothings-apps>  repository github: https://github.com/fpirri/gothings-apps/blob/master/
                          
- il bootstrap avviene, in accordo a file di configurazione .json, in piu' fasi:

    - expand        assicura la presenza nella droplet dell'archivio '<appname>dirs.tar.gz'
                    in mancanza lo scarica da:
                      <gothings-app>/<appname>/<appname>dirs.tar.gz
                    verifica l'esistenza del file di configurazione json:
                      ~/dockrepo/dockimages/<appname>/<appname>expand.json
                    se non e' presente lo scarica da github:
                      <gothings-app>/<appname>/dockrepo/dockimages/<appname>/<appname>expand.json

    - init          esecuzione di una fase di inizializzazione, prima dell'installazione
                    verifica l'esistenza del file di configurazione json:
                      ~/dockrepo/dockimages/<appname>/<appname>init.json
                    se non e' presente lo scarica da github:
                      <gothings-app>/<appname>/dockrepo/dockimages/<appname>/<appname>init.json
                    eventualmente, si richiama il bash script indicato nel .json
    - install       installazione definitiva dei programmi necessari a gocloud
                    *** fase non ancora ben definita & dipendente dall'aspplicazione ***

- i file di configurazione contengono la chiave 'status' con valori:  'todo' e 'done'
    - todo          viene eseguita la fase specificata
                    se il risultato e' corretto (retvalue=0) lo status passa a 'done'
    - done          si prosegue senza fare niente
  - lo status e' automaticamente aggiornato dallo script gocloud-appname
    
  - essi fanno eseguire uno specifico script bash
- durante lo sviluppo:
  - si puo' aggiornare localmente 'clouddirs.tar.gz', che non verra' sostituito dalla
    versione ufficiale su github
  - si possono modificare manualmente i .json locali per ri-eseguire una fase


vecchie note sulla strategia:
Scopo:
  - gestire il ciclo di vita del sistema gocloud con l'aiuto di un menu
  - devono essere NON NECESSARIE conoscenze su docker, cloud, etc. 

Svolgimento:
- si creano su digitalocean tutte le droplet che servono
- si mette sul PC uno script che consente di andare a gestirle una a una
- si esegue una sequenza di controllo su ogni droplet ...
- FATTO!


                                                                                                fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                       Gothings Tech  |
                                                                    Struttura del progetto su github  |

repository:
  https://github.com/fpirri/gothings-apps/blob/master/

contenuto:
  /                               file standard come LICENSE, .gitignore, README.md, etc.
  /<appname>/                     sezione dedicataalla applicazione <appname>
    gocloud-<appname>             programma di gestione dell'applicazione
    <appname>dirs.tar.gz          archivio della parte 'sysdata'dell'applicazione
    dockrepo/                     dir base per tutte le applicazioni nella droplet
      dockimages/                 dir per le configurazioni
        <appname>/                dir per i file .json della configurazione
          <appname>expand.json    configurazione per la fase expand
          <appname>init.json      configurazione per la fase expand
          <appname>install.json   configurazione per la fase expand

note:
  - in pratica, se i file di cui sopra sono presenti nella droplet,
    tutto funziona anche senza github

  - i file *dirs.tar.gz contengono:
      dockrepo/                       dir base per ogni applicazione gothings
        sysdata/                      sezione dati per <appname>
          <appname>/                  dir base per la particolare applicazione
            gothings<appname>.yml     docker-compose configuration file
            .env-<appname>            environment value per docker-compose
            <appname>config/          dir per la configurazione dell'applicazione
              ./*                     .json & .sh files per la configurazione
          <*>/                        eventuali altri dir necessari, es.: 'htdocs'
            ./*                       file utili all'applicazione

---------------------
- esempio per l'applicazione 'wp'

  master/wp
    ├── dockrepo
    │   ├── dockimages
    │   │   ├── placeholder
    │   │   └── wp
    │   │       ├── wpexpand.json
    │   │       ├── wpinit.json
    │   │       └── wpinstall.json
    │   └── sysdata
    │       ├── htdocs
    │       │   └── wpmulti
    │       │       ├── index.html
    │       │       └── index.lua
    │       ├── nginxdata
    │       │   └── sites-enabled
    │       │       └── wpmulti
    │       ├── var_www
    │       │   ├── html
    │       │   │   ├── index.html
    │       │   │   ├── index.lua
    │       │   │   └── wp-config.beans.php
    │       │   └── test
    │       │       ├── custom_404.html
    │       │       ├── favicon.ico
    │       │       ├── file.html
    │       │       ├── home.lua
    │       │       ├── index.html
    │       │       ├── pippo.html
    │       │       ├── test
    │       │       ├── test.html
    │       │       └── test.txt
    │       └── wp
    │           ├── gothingswp.yml
    │           └── wpconfig
    │               ├── wpconfig.json
    │               ├── wpinit.sh
    │               └── wpinstall.sh
    ├── gocloud-wp
    └── wpdirs.tar.gz

                                                             Struttura del progetto su github - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                       Gothings Tech  |
                                                                                Gestione dei segreti  |
                                                                                                   
Nella fase init:
1.- copiare su .env un file NON disponibile su github
  - usare il file dentro il .yml
2.- passare a swarm e risolvere insieme un monte di problemi di comunicazione
<== la 2 e' preferita, ma richiede troppo lavoro, la applicheremo succerrivamente

ref.:
  https://diogomonica.com/2017/03/27/why-you-shouldnt-use-env-variables-for-secret-data/
    <-- a favore di docker swarm
  https://stackoverflow.com/questions/48141233/why-are-docker-secrets-considered-safe
    <-- preoccupante: dobbiamo evitare 'docker exec ...' !!

                                                                         Gestione dei segreti - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                       Gothings Tech  |
                                                                           Creazione droplet - START  |

vedi:  ??? doc base ???                                                               CERCA E VERICA

Creazione standard di una droplet su DigitalOcean (DO)

Procedimento testato con le droplet piu' piccole, secondo DO uguale per tutte

Nel menu' di creazione:
  - scegli l'immagine Ubuntu 18.04
  - scegli l'opzione: ssh con certificato
      <-- metti il tuo certificato (anche piu' di uno)
  - inserisci il file ...                                                                           DA AGGIUSTARE
  - scegli il taglio della droplet
  - aggiusta il nome
  - VAI !
--> viene creata la droplet con le opzioni scelte
--> viene eseguito lo script caricato, che:
    --> installa docker e docker-compose
    --> carica alcuni programmi necessari:
          - jq                  funzioni json per bash script
          - ??                                                                                      DA AGGIUSTARE
--> legge su github lo script c, lo rende eseguibile e lo esegue                                    DA AGGIUSTARE ?
--> c scarica il menu 'gocloud'

                                                                    MENU GOCLOUD                    DA FARE


                                                                            Creazione droplet - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                       Gothings Tech  |
                                                                            How to make apps - start  |
                                                                                                         DA FARE
-descrizione del processo di costruzione
    ==> riprendere da NODE, guardare anche wp e php service

                                                                             How to make apps - fine  |
=====================================================================================================/



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ seguito DA AGGIUSTARE

=====================================================================================================\
                                                                                       Gothings Tech  |
                                                                                               START  |

                                                                                                fine  |
=====================================================================================================/


------------------------------------------------------------------------------------------  Droplets

ssh yesfi@104.248.95.29                                                       gothings-v09

Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-76-generic x86_64)
  IP address for eth0:            104.248.95.29
  IP address for eth1:            10.133.94.60
  IP address for docker0:         172.17.0.1
  IP address for br-4b6c24f61c21: 172.29.196.1
  IP address for br-004bfb568080: 172.29.195.1
  IP address for br-17ecfb12cdd8: 192.168.112.1


ssh yesfi@188.166.70.203                                                      gothings-v09-base
  IP address for eth0:            188.166.70.203
  IP address for eth1:            10.133.3.65
  IP address for br-4b6c24f61c21: 172.29.196.1
  IP address for docker0:         172.17.0.1
  IP address for br-dedf786dcb34: 172.18.0.1
  IP address for br-004bfb568080: 172.29.195.1


----------------------------------------------------------------------------------------------  WORK
                                                                          aggiornamento di 'gocloud'

                                                                                                    IN CORSO
---------- lavoro sulla droplet:    ssh yesfi@188.166.70.203     --> BASE
1.- Inserire la droplet nella lista 'gothings'
2.- personalizzare il gocloud-base:
      - show containers
      - sostituire al menu '2. BASE    manage gothings BASE containers' le funzioni
        che sono ora in un sottomenu:
           " 2) START    gothings CLOUD containers"
           " 3) PAUSE    gothings CLOUD containers"
           " 4) DESTROY  gothings CLOUD containers"
                                                                                                    DA FARE
Futuro:
  - trasportare lo script bash su una GUI web

  - esaminare powershell menu - ricerca: "powershell terminal menu"
      https://www.reddit.com/r/PowerShell/comments/9plt0b/easy_tool_menu/
      https://4sysops.com/archives/how-to-build-an-interactive-menu-with-powershell/
      https://adamtheautomator.com/build-powershell-menu/



                                                                 *** Gocloud - Program strategy ***
---------------------------------------------------------------------------------------------------\
                                                                               *** GOTHINGS tech ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-04-07
                                                                                *** NODE Service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                     *** NODE Service - v0.00.1 ***

Scopo:
- risorsa HTTP che esegue una funzione predefinita, realizzata in nodejs
  - la risorsa calcola una risposta in base ai parametri che riceve
  - in linea di principio la risposta dovrebbe essere usabile da uno script bash
  - la risposta dovrebbe anche essere facilmente usabile da un umano con un browser

Struttura del progetto
*** vedi sopra:   Struttura del progetto su github

Dettagli:
- uno script bash puo' chiamare la risorsa usando curl
- richiamabile da browser, con interpretazione umana
  (vedi anche PHP service & TEMPLATE per idea di base)
- con accesso al MariaDB (stessa droplet ?)
- header 'sicuro': risponde SOLO alle chiamate CURL dalle droplet                                   DA FARE
    <-- per ora si affida alla presenza di headers ed alla condivisione di un segreto
    <-- nginx proxy aggiunge un proprio header (sovrascrivendo eventuali header esterni)
    <-- uno o piu' header ricavati da file (ritenuti sicuri)
- restituisce valori usabili in bash                                                                DA FARE
- realizzato anche tramite inclusione di file nodejs da includere nel sorgente



=====================================================================================================\
                                                                                        NODE Service  |
                                                                                   Bootstrap - START  |
Strategia:
1.- esegui ./gocloud
2.- scegli 'node' dal menu
3.- nel 'Node main menu' scegli 'start'

gocloud
- e' aggiornato a livello globale, dovrebbe consentire di scegliere una qualunque di
  tutte le applicazioni disponibili
- se non fosse aggiornato, puo' autoaggiornarsi su comando dell'utente
- con le azioni di cui sopra, viene eseguito lo script gocloud-node

gocloud-node
- presenta un menu di gestione con varie opzioni:
    show     (containers)   mostra i containers definiti sulla droplet
    start    (node)         crea e lancia il contenitore node
    stop     (node)         ferma il contenitore node
    destroy  (node)         elimina il contenitore node dal sistema
nota: i dati permanenti dell'appplicazione NON vengono alterati

Bootstrap
Il bootstrap del sistema, per quanto riguarda l'applicazione node, viene eseguito
automaticamente alla prima chiamata, seguendo le fasi: 
    expand
    init
    install
in modo analogo a tutte le altre applicazioni.
Ognuna delle fasi e' descritta piu' sotto.






----------------------------------------------------------------------------------------------------
                                                                                       DA AGGIUSTARE
- prendere l'attuale 'base' in github-gothings/gothings-base-dev e separare lo sola parte node
- fare un test rapido si funzionalita' con start-node e down-node
- riaggiustare tenendo conto di gocloud-php (ultimo tentativo di generalizzazione)

--------------- 
- costruita una base, a partire da: 
    .../github-gothings/gothings-cloud/       <-- il vecchio 'cloud' diventa il nuovo 'node'
    .../WP-Sviluppi/gothings/wp/              <-- struttura 'dockimages' e 'docksecrets' e sysdata
    .../WP-Sviluppi/gothings/php/             <-- come wp

- la app consiste in una serie di 

- aggiustato make-nodedirs                    <-- copiato da make-wpdirs
                                              <-- corretta SOLO la riga 5:    appname="node"
    <-- l'albero .../<app>/sysdata verra' ricostruito nella droplet

- aggiustamento docksecrets
    <-- messo .env di wp

- Aggiustamento dockimages/node
    <-- nodeinit verifica soltanto l'esistenza dei network
====>   SPOSTARE l'inizializzazione della rete nella parte generala                                 DA FARE assolutamente
    
                                                                                                    <-- IN CORSO


--------------------------------------------------------------------------------------  DA BUTTARE ?
Primo tentativo, per tastare il terreno ...

Ref. da usare:
  1.
  https://www.howtoforge.com/tutorial/docker-guide-dockerizing-nodejs-express-application/
    <-- sembra semplice ed efficace
  2.
  https://www.sitepoint.com/create-new-express-js-apps-with-express-generator/
    <-- usa handlebars, esempio un po' piu ricco
  3.
  https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website
    <-- docs per express di mozilla developer, sembra molto completa

Strategia:
- build:        ref 1.: si fa rapidamente una immagine debian da usare successivamente
- base image:   ref. 2: si costruisce una applicazione minima, ma completa
- gothings:     si aggiusta con il 'doppio server' dall'esempio gothings-base-dev
                (vedi  github-gothings --> server nodelog + server express
----------------------------------------------------------------------------------------------------


                                                                                    Bootstrap - FINE  |
=====================================================================================================/



                                                                                         ELIMINARE ?
=====================================================================================================\
                                                                                        NODE Service  |
                                                                                    Sviluppo - START  |
Pacchetti utili per il debug in una droplet:
                                                                                                    DA VERIFICARE
<== la droplet ha gia' i servizi di BASE?
  altri paccetti utili:
  make inetutils-ping dnsutils wget bzip2 locales perl unzip tree adduser

                                                                                                    DA VERIFICARE
<== e' possibile installare pacchetti nella droplet ?
  apt -y update
  apt -o Dpkg::Options::=--force-confdef -y install nano curl netcat net-tools telnet



                                                                                                    DA VERIFICARE
-------------------------------------------------------------------- prove di funzionamento iniziale
curl nel container node:
  curl --verbose localhost

curl da host nella stessa droplet
  curl --verbose localhost                <-- OK

curl da droplet qualunque nella rete privata DO
  curl --verbose 'http://10.133.94.60'     <-- OK


                                                                                   --- VEDI DOPO ---
------------------------------------------------------ Richiesta di servizio NODEJS da altra droplet
------ Realizzazione di un template nodejs

                                                                                                    DA FARE
node-testata.js
  <-- headers html per la risposta

node-secure.js
  <-- verifiche per decidere se si risponde
  <-- definizione dei valori per la risposta bash

node-footer.js

node-content.js

===========================> rivedere dopo il TEMPLATE.js

                                                                                     Sviluppo - FINE  |
=====================================================================================================/



=====================================================================================================\
                                                                                        NODE Service  |
                                                                                         Fase EXPAND  |
Struttura sezione .../dockrepo/dockimages
  --> https://github.com/fpirri/gothings-cloud-apps/tree/master/node

  node
    ├── gocloud-node
    ├── nodedirs.tar.gz
    ├── dockrepo
    │   ├── dockimages
    │   │   ├── placeholder
    │   │   └── node
    │   │       ├── nodeexpand.json
    │   │       ├── nodeinit.json
    │   │       └── nodeinstall.json
 
scopo della fase expand:  bootstrap dell'applicazione, ovvero lettura dei file da github

svolgimento:
  --> verifica l'esistenza del file nodeexpand.json
      --> se gia' esiste, vai avanti
            <-- cosi' non si perde tempo a fare cose gia' fatte
            <-- durante lo sviluppo consente di modificare il file locale e lavorare
            <-- cancellare il file locale condurra' all'aggiornamento da github
      --> se non esiste, lo carica da github
      ==> stato finale: abbiamo il file, oppure ERRORE
  --> si verifica il valore di json.status:
        status: done       expand gia' eseguito, vai al passo successivo
        status: todo       expand da eseguire:
          --> verifica l'esistenza del file nodedirs.tar.gz
            --> se gia' esiste, vai avanti
          --> se non esiste, scarica nodedirs.tar.gz da github
          --> stato finale: abbiamo il file, oppure ERRORE
          --> si espande il file nodedirs.tar.gz
          --> si aggiorna nodeexpand.json.status ==> done
      --> stato finale: il dir ~/dockrepo/sysdata/node/ e' aggiornato
  --> se qualcosa e' andato male: ERRORE

==> stato finale: 


---------------------- vecchia versione:
- verifyexpand
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}expand.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'espansione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
    <-- per l'espansione e' richiesta la sudo password di yesfi
    <-- errori nella fase di espansione NON CONSENTONO di andare avanti
                                                                                                    DA FARE
- NOTA di sicurezza:
    - il file di configurazione .env-wp contiene valori NON VALIDI
    - nella fase init .env-wp verra' sostituito con una versione VALIDA e piu' SICURA

======> verifyexpand e' a posto


                                                                                  Fase EXPAND - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                        NODE Service  |
                                                                                          WP Service  | DA AGGIUSTARE
                                                                                           Fase INIT  |

                                                                                                    IN CORSO
- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'inizializzazione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
- il dir dockrepo/sysdata/wp/ DEVE contenere il file di configurazione gothingswp.yml
    <-- se non esiste:  ERRORE 4
- il dir .../docksecrets/${APPNAME} DEVE contenere il file di configurazione .env-${APPNAME}
    <-- VERIFICA:                                                                                   DA FARE
    <-- questo file sara' quello effettivamente usato per la creazione del container
    <-- il file NON E' scaricabile da github per motivi di sicurezza
    <-- il file sara' generato 'in loco' da una apposita app
    <-- per ora, il file e' inserito manualmente

                                                                                                    DA FARE
- aggiustare wpinit.sh:     leggere da wpconfig.json i valori "veri"
                            mettere i valori in wp-config.php
- procedura di lettura valori da tastiera per cambio pwd etc.
- AGGIUSTARE dbsecure.sh    aggiungere una opzione "vai avanti anche se ci sono stati errori"
                              <-- potrebbe servire quando viene eseguita piu' volte
- aggiustare nome container phpmyadmin --> myadminlocal ?  myadmin_l(ocal) ?  myadmin_g(eneric) ?



                                                                                    Fase INIT - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                        NODE Service  |
                                                                                          WP Service  | DA AGGIUSTARE
                                                                                      Funzione CLEAR  |
*** funzione specifica per wordpress ***
  wpclear.sh
Ogni applicazione avra' una <appname>clear.sh, richiamata dall'applicativo principale
****************************************

-------- funzione CLEAR
obiettivo:
  tornare alla situazione iniziale nei dir e nel database

realizzazione:
  - si esegue una copia del db gtlite su gtlite_bk
  - si eliminano TUTTI i file generati da wordpress
      <-- files di nome wp-*
      <-- altri files: index.php, license.txt, xmlrpc.php, readme.html, .htaccess
      <-- dirs: wp-admin, wp-includes, wp-content
  - si eliminano TUTTE le tabelle wordpress in gtlite
  - si rileggono i file di configurazione wpinit.json e wpinstall.json da github
      <-- per il momento NON si legge wpexpand.json per non usare wpdirs.tar.gz
          in fase di sviluppo

Problema:
  dare ALL GRANTS a wpuser sul db gtlite_bk        <--    fare in verifyinit ??                     DA FARE


----------------------------------------------------------------------------------------------------

ref. usati:
  https://www.supportsages.com/php-script-to-change-mysql-table-prefix/
    <-- script MOLTO interessante
    <-- HTML per leggere le pwd etc.         <-- usare .env ? 

  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
    <-- usata versione cli come template 
    <--  (thanks to Richard Maurer)

  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- questo NON HA FUNZIONATO

  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <-- myscli version per copytables
    <-- anche questo SEMBRA NON FUNZIONARE


altri ref.:
--------------  RENAME  DUMP  database
ref.:
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- rename database
    <-- dump database
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- altro script, in bash
  https://stackoverflow.com/questions/12190000/rename-mysql-database
    <-- alcuni suggerimenti utili ...

automysqlbackup
  https://sourceforge.net/projects/automysqlbackup/files/latest/download
    <-- Automatic MySQL Backup
    <-- bash script da vedere: backup schedulato ...
  http://www.ducea.com/2006/05/27/backup-your-mysql-databases-automatically-with-automysqlbackup/
    <-- tutorial

use PHP to alter the db ref.:
  https://www.supportsages.com/php-script-to-change-mysql-table-prefix/
    <-- script MOLTO interessante
    <-- HTML per leggere le pwd etc.         <-- usare .env ? 

  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <--mysqlcli version for 'copytables'

  https://helloacm.com/duplicate-a-mysql-table-copy-table-duplicate-database-php-script/
    <--  insert --> select  

-----
  http://www.learningaboutelectronics.com/Articles/How-to-rename-a-MySQL-table-using-PHP.php
    <-- PHP script
  https://gist.github.com/yireo/5919293
    <-- gist ~~= al php visto sopra

  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- sembra buono ...


--------------  RENAME  DUMP  database
ref.: https://phoenixnap.com/kb/how-to-rename-a-mysql-database
        <-- rename database
        <-- dump database

  https://stackoverflow.com/questions/22199557/assign-an-existing-user-to-mysql-databases/22199886
    <-- mysql query to grant privileges to user


--------------------------------------------------------------------------- comandi utili:

mysql -u root -pGTH2020_quattro_marzo

10.133.94.60/gtlite_bk/  http://phpmyadmin.gothings.org/db_sql.php?db=gtlite_bk
Your SQL query has been executed successfully.

show grants for 'wpuser'@'10.133.%';

GRANT USAGE ON *.* TO 'wpuser'@'10.133.%' IDENTIFI... 
GRANT ALL PRIVILEGES ON `gtlite`.* TO 'wpuser'@'10... 
GRANT ALL PRIVILEGES ON `gtlite_bk`.* TO 'wpuser'@... 

-------------------------------------------------------------------------------------------


                                                                               Funzione CLEAR - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                        NODE Service  |
                                                                             NODEJS TEMPLATE - START  |
                                                                                                    IN CORSO
Scopo del template e' fornire un punto di partenza per la realizzazione di servizi NODEJS
- Vengono realizzate in maniera univoca tutte le funzioni comuni ad ogni applicazione
- il template usa tre file .js che vengono inclusi nell'applicazion template:
    node-testata.js    <-- testata HTTP: title, start body, php functions declaration
                           <-- contiene le funzioni PHP:
                                 print_r2($val)   stampa 'carina' della variabile $val
    node-secure.js     <-- controllo della chiamata, eventuale terminazione
                           <-- eventualmente, TRY_X consente di bypassare i controlli
                               durante lo sviluppo
                           <-- assicurarsi che TRY_X sia 'false' in produzione
                           <-- NON dovrebbe essere variato nelle varie applicazioni
    node-content.js    <-- body del programma, specifico per ogni servizio
                           <-- possibilmente, emettere uscita facilmente interpretabile
                               da una chiamata da terminale 
    node-footer.js     <-- terminazione del programma
                           <-- print X_DEBUG ed esci dal programma
                           <-- il valore di EXIT_CODE viene stampato sull'uscita
                               ed e' disponibile come exit code a bash nel terminale

Come usare i templates:
- vai nel dir .../sysdata/php/var_www/html/
- esegui una copia di template.js ed assegna un nome, es.: myservice.js
  - edit il file myservice.js ed esegui la sostituzione:
       require 'php-content.js';   ==>   require 'myservice-content.js';
- esegui una copia di content.js ed assegna il nome: myservice-content.js
  - modifica myservice-content.js per eseguire il servizio che credi
- esegui le prove necessarie dal terminale e/o dal browser:
      curl -v 'http://10.133.94.60/template.js?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
      http://php.gothings.org/template.js?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  



===> mysql da terminale ...
      mysql -u root -pGTH2020_quattro_marzo
      show databases;
      select host, user from mysql.user;
      mysql -u wpuser -ppenna_matita_gomma

      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      CREATE USER 'wpuser'@'172.29.%';
      CREATE USER 'root'@'172.29.%';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.%';
      show grants for 'wpuser'@'10.133.%';





                                                                              NODEJS TEMPLATE - FINE  |
=====================================================================================================/



=====================================================================================================\
                                                                                        NODE Service  |
                                                                                  references - START  |


  https://stackoverflow.com/questions/36399848/install-node-in-dockerfile
    <-- pre install node, then PHP

  https://www.howtoforge.com/tutorial/docker-guide-dockerizing-nodejs-express-application/
    <-- sembra semplice ed efficace

  https://www.sitepoint.com/create-new-express-js-apps-with-express-generator/
    <-- non c'e' docker, ma il resto sembra buono ...

                                                                                   references - FINE  |
=====================================================================================================/


----------------------------------------------------------------------------------------------------

=====================================================================================================\
                                                                                        NODE Service  |
                                                                                       topic - START  |

                                                                                        topic - FINE  |
=====================================================================================================/


                                                                     *** NODE Service - v0.00.1 ***
---------------------------------------------------------------------------------------------------\
                                                                                *** NODE Service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------/ 2021-03-01
                                                                                *** Service NGINX ***/------------
----------------------------------------------------------------------------------------------------/
                                                                    *** Service NGINX - v0.01.03 ***
*** in aggiornamento come nuova APP ***

=====================================================================================================\
                                                                                           NGINX APP  |
                                                                         installazione NGINX - START  |

Struttura archivio su github:

  https://github.com/fpirri/gothings-cloud-apps/          <-- repository delle gothings apps for the cloud
      nginx/                                              <-- sezione per la app: nginx
          dockrepo/dockimages/nginx/                      <-- file della app nginx
              nginxdirs.tar.gz                            <-- archivio file della app nginx
              nginxexpand.json                            <-- espansione dei file
              nginxconfig.json                            <-- configurazione della app
              nginxinit.json                              <-- inizializzazione della app
          nginx-go                                        <-- script di gestione della app

- nginx-go e' abbastanza generalizzato, nel senso che molte funzioni dovrebbero
  funzionare anche per altre app, semplicemente aggiustando i valori della variabile
  bash 'AppName' ed altre, riportate nella testata dello script


---------------------------------------------------------------------------- Lavoro precedente
Versione 3 del processo di installazione di una app

- ripreso da gocloud-db
- doc precedente in:     *** Service WP - v0.01.06 ***
              cerca:     == SVILUPPO NGINX App

-----------------------------------------------------------------------------------------------

                                                                          installazione NGINX - FINE  |
=====================================================================================================/




-----------------------------------------------------------------------------------------------------

=====================================================================================================\
                                                                                           NGINX APP  |
                                                                                          ?? - START  |

                                                                                           ?? - FINE  |
=====================================================================================================/


                                                                                     

                                                                    *** Service NGINX - v0.01.03 ***
----------------------------------------------------------------------------------------------------\
                                                                                *** Service NGINX ***\------------
------------------------------------------------------------------------------------------------------\    FINE
-------------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------/ 2021-04-08
                                                                                   *** Service WP ***/------------
----------------------------------------------------------------------------------------------------/
                                                                       *** Service WP - v0.01.07 ***
====>  adesso sono a:       ... tentativo 3

====>  vedi:                --- make-nginxdirs

--------------------------------------------------------------------------------
*** Generalizzazione delle App ***

Dopo gli sviluppi precedenti:
    *** Service WP - v0.01.06 ***             in STORIA
    *** Service NGINX - v0.01.03 ***          non ancora completamente generalizzato


Scopo: 
- un servizio per eseguire funzioni PHP predeterminate
- usare wordpress come ambiente amministrativo
    <-- ~ ZERO contenuto pubblico
    <-- usare SOLO la parte amministrazione
    <-- usare tabelle custom nel DB per i dati delle COSE
- utilizzare la REST API di wordpress per svolgere il lavoro

--------------------------------------------------------------------------------
                                                        installazione WP Service

Struttura archivio su github:

  https://github.com/fpirri/gothings-app-servicewp/   <-- repository di servicewp (a gothings app for the cloud)
      dockrepo/dockimages/servicewp/                  <-- file della app service
          serviceexpand.json                          <-- espansione dei file
          serviceconfig.json                          <-- configurazione della app
          serviceinit.json                            <-- inizializzazione della app
      servicewpdirs.tar.gz                            <-- archivio file della app service
      app-go                                          <-- script di gestione della app
      APPNAME                                         <-- dati di configurazione per servicewp

- app-go e' abbastanza generalizzato, nel senso che molte funzioni dovrebbero   <-- IN AGGIUSTAMENTO ...
  funzionare anche per altre app, semplicemente aggiustando i valori della variabile
  bash 'AppName' ed altre, riportate nella testata dello script


------------------------------------------------ per i lavori precedenti vedere:
- doc precedente in:     *** Service WP - v0.01.06 *** bis
              nella:     *** STORIA ***
--------------------------------------------------------------------------------

- si e' aggiunta la fase 'verify environment' che dovrebbe consentire l'inserzione
  delle variabili di configurazione, creazione del db etc.
- configure environment:
    <-- vedi commenti in servicewp-go

- procedura di aggiornamento file servicewpdirs.tar.gz on github
  --> sequenza da GUI sul PC:                             <== da GUI lo script NON PARTE !!
    - edit la copia locale nella droplet finche' non ottieni il risultato voluto
        <-- se servicewpexpand.json esiste gia' esso NON viene ri-caricato sda github
    - rifai l'archivio .tar.gz del progetto :
      - sul PC, vai a:  .../NetBeansProjects/github-gothings/gothings-app-servicewp-aux/
        esegui:  ServicewpDirs        (icona terminal)
          <-- viene creato il nuovo servicewpdirs.tar.gz
      - commit local repo project gothings-app-servicewp:
              app-servicewp - 0.11 - commit & push to remote (new .tar.gz in github)
- rimandato a dopo:                        <-- roba fatta a mano (per ora)
  - copy sites-enabled ...  (fase config)
  - restart nginx dopo aggiunta dei servizi

------ generalizzazione nginx
- ref per certbot:
    1.  https://certbot.eff.org/docs/using.html#where-are-my-certificates
    2.  https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
    3.  https://www.cloudbooklet.com/how-to-install-nginx-and-lets-encrypt-with-docker-ubuntu-20-04/
- tentativo 1
  <-- assegnare alla droplet un dominio base (pirri.me ?)
  - definire il dir per i certificati
  - aggiungere una sezione a nginx per il certbot ??
      <-- provo questa ...
      <-- portato nginx-go in .../github-gothings/gothings-app-servicewp-aux/nginx-new/nginx-go
  - chmod 755 da ref.1

.................................................................... tentativo 2
- Per aggiungere un certificato con l'opzione webroot serve un nginx che funzioni
  sulla porta 80
- la configurazione nginx deve vedere i files:
          options-ssl-nginx.conf        <-- TLS config per nginx
          ssl-dhparams.pem              <-- rendi compatibile la struttura dei dir
  che vengono forniti da certbot:
      https://github.com/certbot/certbot/raw/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf
      https://github.com/certbot/certbot/raw/master/certbot/certbot/ssl-dhparams.pem
- si usano i volumi docker:
          ~/dockrepo/sysdata/nginx/data/certbot/conf   :  /etc/letsencrypt
          ~/dockrepo/sysdata/nginx/data/certbot/www    :  /var/www/certbot
- in definitiva, si prendono da github i file: 
          ~/dockrepo/sysdata/nginx/data/certbot/conf/options-ssl-nginx.conf
                                                 .../ssl-dhparams.pem
- il root dir del sito per certbot e':
          ~/dockrepo/sysdata/nginx/data/certbot/www    :  /var/www/certbot
- il certificato del sito $domain e' nel file:
          /etc/letsencrypt/live/$domain
  che corrisponde (nella droplet) a:
          ~/dockrepo/sysdata/nginx/data/certbot/conf/live/
  --> permessi originali 700, cambiabili in 0755
  --> ref 1. :  ... fix this using chmod 0755 /etc/letsencrypt/{live,archive}

................. tentativo 2.a
===> vediamo come ref 2. crea il certificato: openssl req -x509
       --> quale .yml usa?

................. tentativo 2.b
===> facciamo un certbot-go per la gestione dei certificati

================================> possibile strada
- girare la creazione nginx & certbot per il caso "test"
    <-- dividere in due, con nginx & certbot azionati separatamente ...?
- aggiungere un certbot specifico per ogni servizio aggiuntivo
    <-- sezione 'certbot' all'interno di nginx-go ?                             DA RIVEDERE
    <-- file json quando si configura un nuovo servizio ?                       DA RIVEDERE
    <-- sezione 'https' in ogni nuovo servizio ?                                DA RIVEDERE

------------------------------------------------------------ NOTE su letsencript
dir creati da certbot in /etc/letsencript/:
drwx------ 3 root  root  4096 Aug 17  2020 accounts
drwx------ 3 root  root  4096 Aug 17  2020 archive
drwxr-xr-x 2 root  root  4096 Nov 23 23:26 csr
drwx------ 2 root  root  4096 Nov 23 23:26 keys
drwx------ 3 root  root  4096 Aug 17  2020 live
drwxr-xr-x 2 root  root  4096 Aug 17  2020 renewal
drwxr-xr-x 5 root  root  4096 Aug 17  2020 renewal-hooks

README:
--> sudo cat dockrepo/sysdata/nginxdata/certbot_etc/live/gothings.org/README
This directory contains your keys and certificates.

`privkey.pem`  : the private key for your certificate.
`fullchain.pem`: the certificate file used in most server software.
`chain.pem`    : used for OCSP stapling in Nginx >=1.3.7.
`cert.pem`     : will break many server configurations, and should not be used
                 without reading further documentation (see link below).

WARNING: DO NOT MOVE OR RENAME THESE FILES!
         Certbot expects these files to remain in this location in order
         to function properly!

We recommend not moving these files. For more information, see the Certbot
User Guide at https://certbot.eff.org/docs/using.html#where-are-my-certificates.

--------------------------------------------------------------------------------

---------------------------------------------------------------- remove-nginx.sh
scopo: 

@@@ spiegare cosa fa
==> remove-nginx.sh     SEMBRA funzionare !
--------------------------------------------------------------------------------

.................................................................... tentativo 3
- script ausiliario per CANCELLARE completamete una app nella droplet
    <-- ~/remove-nginx.sh
    - prova nella app fittizia 'temp'




----------------------------------------------------------------- make-nginxdirs
Scopo:
Generare l'archivio nginxdirs.tar.gz da archiviare nel repository github
- Script da girare sul PC (nel dir .../gothings-app-nginx-aux/) con un
  semplice doppio click

@@@ spiegare come funziona ...
CORREGGERE make-nginxdirs                                                       DA FARE
- il file .tar.gz, benche' ignorato, disturba il remote push (upload)

--------------------------------------------------------------------------------


IN CORSO:
- rivedendo ref 2. :
  - girare una versione adattata di .../init-letsencrypt.sh nella fase verify-x?  DA AGGIUSTARE
  - permessi per certbot:
????/conf/
    data_path="./data/certbot"
      $data_path/conf/options-ssl-nginx.conf"
     "$data_path/conf/ssl-dhparams.pem"

...../etc/letsencrypt/        yesfi:yesfi   775
    .../keys                  root:root     700
    .../live                  root:root     700
      .../gothings.org        root:root     755
    
                                                                           <====  CI STO LAVORANDO
  - aggiungere una sezione certbot al menu' di nginx


----------------------------------------------------------------------- nginx-go
- adattare nginx-go separando nginx da certbot
    <-- mantenere la coerenza dei volumi
  - si arriva correttamente ad eseguire nginxconfig.sh
      <-- lo script propone un errore
      <-- il menu' viene eseguito lo stesso                                     DA CORREGGERE
  - dobbiamo preparare i file che saranno necessari a certbot+nginx
    - si fa in nginxconfig.sh
      <-- problema di esecuzione config con privilegi root
-                                                                               SONO QUI


--------------------------------------------------------------------------------


................................................................................

-                                                                               SONO QUI

Upload project to github:
  https://javawithumer.com/2019/07/how-to-upload-netbeans-project-to-github.html

--> commit:
              app-nginx - 0.27 - nginx-go: verify config - 13
              app-servicewp - 0.16 - coordinamento con nginx

--------------------------------------------------------------------------------
-------------------------------------------------------                         DA FARE appena possibile
--> aggiustare l'aggiunta a nginx
  - copy sites-enabled ...  (fase config)
  - restart nginx  (per ora: MANUALE)                                   IN CORSO ??
--> aggiustare i segreti:
- aggiustare le location dei siti 'multisite'
    <-- vanno TUTTI nello stesso index.php !!!
    <-- cosa succede per i siti 'non wordpress'?  <-- vanno aggiustati ???
    <-- controllare con telemat.pirri.me
- script per la creazione del db con mysql
    <-- aggiustare user, pwd etc ..
- aggiornare docksecrets con i nuovi valori
    <-- bene per i primi sviluppi, per ora si fa solo una copia ...
- creare una fase 'secret environment' che funzioni ...
                                                                                DA FARE fine


APPUNTI per sopra ... ==========================================================
-- lavoro precedente in:    *** Service WP - v0.01.06 *** bis
                  cerca:    == SVILUPPO NGINX App
================================================================================





-----------------------------------------------------------------------------------------------------

=====================================================================================================\
                                                                                          Service WP  |
                                                                                          ?? - START  |

                                                                                           ?? - FINE  |
=====================================================================================================/


                                                                                     

                                                                       *** Service WP - v0.01.07 ***
----------------------------------------------------------------------------------------------------\
                                                                                   *** Service WP ***\------------
------------------------------------------------------------------------------------------------------\    FINE
-------------------------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------/ 2020-03-01
                                                                                  *** PHP Service ***/------------
------------------------------------------------------ ---------------------------------------------/
                                                                       *** PHP Service - v0.00.3 ***

Scopo: 
- un servizio per eseguire funzioni PHP predeterminate

Dettagli:
- chiamabile da bash script, usando CURL
- con accesso al MariaDB (stessa droplet)
- header 'sicuro': risponde SOLO alle chiamate CURL dalle droplet                                   DA FARE
    <-- per ora si affida alla presenza di headers ed alla condivisione di un segreto
    <-- nginx proxy aggiunge un proprio header (sovrascrivendo eventuali header esterni)
    <-- uno o piu' header ricavati da file (ritenuti sicuri)
- restituisce valori usabili in bash                                                                DA FARE
- realizzato anche tramite inclusione di file PHP pre-compilati

refs:
https://hub.docker.com/_/php
  <-- immagine docker del PHP
https://www.pascallandau.com/blog/php-php-fpm-and-nginx-on-docker-in-windows-10/
  <-- esempio dettagliato (sotto windows, ma utile ...)
https://stackoverflow.com/questions/29905953/how-to-correctly-link-php-fpm-and-nginx-docker-containers
  <-- consigli utili ...  ** leggere TUTTO prima di proseguire ...


-------------------------------------------------------------- Installazione PHP
droplet:
  yesfi@104.248.95.29      <-- MariaDB per il cloud gothings

ref.:
https://dev.to/truthseekers/setup-a-basic-local-php-development-environment-in-docker-kod
  <-- usa php-docker ufficiale con docker-compose
-->
- scegliamo come dir di lavoro:
    .../gothings/servicephp/dockrepo/sysdata/servicephp/var_www/html/index.orig.php
  --> il dir .../var_www/html/ conterra' i sorgenti del ServicePHP
      all'inizio il file index.php e' un semplice script di test (hello)
      in seguito verra' sostituito da index.orig.php (vedi vecchia documentazione in ???)
--------- nota di lavoro:
Ogni 'app' che deve girare su una droplet 'vive' nel dir ~/dockrepo/sysdata/<app name>
  --> ~/dockrepo/ e' il dir base di TUTTO il codice GoThings
      ~/dockrepo/sysdata/ contiene TUTTE le varie applicazioni
      ~/dockrepo/sysdata/<app name> contiene il codice della particolare app
  --> al run time docker trasporta in ogni container i dati relativi alla particolare app
  --> le applicazioni 'globali' (come nginx) hanno dei sysdata specifici
--------------- fine nota
- abbiamo scritto le utilities:
    go_servicephp               fare source (. go_servicephp) per andare al dir di lavoro
    servicephp_start        per fare 'up' del servizio
    servicephp_stop         per fermare il servizio php
    servicephp_down         per eliminare il contenitore del servizio


---------------------------------------------------------  NGINX setup originale

In partenza il dir ~/dockrepo/sysdata/nginxdata/sites-enabled/ contiene:
- siti  wpm :
    test          test base - root /var/www/test/ 
                  passare/aggiungere https ??
    iot           parte https
                    <-- redirection 80-->443 in wpms
                  accesso ad apps con nomi dinamici su redis
                    <-- apps nei subdirectory
    *             siti anonimi eliminati - rivedere ?
                  da coordinare con wpms

- siti  wpms :
    www           sito base default
    cloud
    things
    wpwork
    phpmyadmin    coordinato con wpm
    *             multisite con nome generico            <-- cambiare ?
                  ultima istanza, aggiustare !
    <base>        gothings.org (senza nome aggiunto)     <-- serve ?
    80-->443      redirect http-->https per tutti i siti
                    <-- certbot                             rinnovo certificato  DA FARE

--------------------------------------------------------------------------------
-------------------------------------------------------------  NGINX nuovo setup

- aggiunto redirect http-->https per servicephp
                                                                   DA RIVEDERE :
*.gothings.org      eliminare i siti dinamici/anonimi in wpms??
iot...              accesso alle applicazioni node.js  <-- https ??
                      <-- mettere in un file separato (NO in wpm)
phpmyadmin...       correggere il file nginx in 'myadmin'
                      <-- mettere in un file separato (NO in wpms)

                                                                       DA FARE :
aggiustare certbot
  <-- verificare il processo di aggiornamento: tutti insieme o uno alla volta?

Proposta:
port 80
  base80            redirection da http a https & certbot            <-- da wpms
  test              sito statico per semplice test del sistema       <-- da wpm
port 443:
  wpmultisite       siti wordpress                                   <-- da wpms
  myadmin           phpmyadmin                                       <-- da wpms
  iot               applicazioni GoThings <-- portare su https       <-- da wpm
  servicephp        servizi ausiliari (in php)                       <-- nuovo


---------------------------------------------------------  Revisione NGINX sites
- eliminato wpms,
- sostituito da:    base80, wpmultisite, myadmin, servicephp
- eliminato wpm,
- sostituito da:    test, iot




================================================================================
-----------------------------------  VERSIONE successiva a PHP Service - v0.00.1
--------------------------------------------------------------------------------
--------------------------  RIPRESE dal vecchio *** WP Service - v0.01.01  ***
NOTE                                                                            2020-08-01

- Questa versione deriva dallo sviluppo wp-multi fatto in precedenza
- Adesso il 'WP Service' diviene un container di aiuto per la gestione 
  del mariadb nella droplet v09
- L'idea e' che il php agisca sul db per automatizzare operazioni di 
  creazione e gestione del wp multi

Il nome della app diviene:   PHP                                           <==  DA CAMBIARE !

-------------
- il nuovo wp multisite e' eseguito va sulla droplet gothings v01.03
- nella droplet  gothings-v09 - db ci sono vecchi file, sembra provenienti da 
  ~/NetBeansProjects/WP-Sviluppi/gothings/wpmulti-dev/wp-dev/ che ho salvato 
  in ~/NetBeansProjects/WP-Sviluppi/gothings/wpmulti-dev/wp-dev/v09_backup
  e cancellati dalla droplet

==> Si sviluppa in:  ~/NetBeansProjects/WP-Sviluppi/gothings/wp/
    si fanno ora le prove di installazione per la produzione                    2020-08-01

---------------
--------------------------------------------------------------------------------




=====================================================================================================\
                                                                                         PHP Service  |
                                                                                    Sviluppo - START  |
Pacchetti utili per il debug in una droplet:
  apt -y update
  apt -o Dpkg::Options::=--force-confdef -y install nano curl netcat net-tools telnet

  altri paccetti utili:
  make inetutils-ping dnsutils wget bzip2 locales perl unzip tree adduser

------- prove di funzionamento iniziale
curl nel container:
  curl --verbose localhost

curl da host di php:
  curl --verbose localhost                <-- OK

curl da 'fuori'
  curl --verbose 'http://10.133.94.60'     <-- OK


------------------------------------------------------- Richiesta di servizio PHP da gothings-v01-03
------ PHP templates

php-testata.php
  <-- headers html per la risposta

php-secure.php
  <-- verifiche per decidere se si risponde
  <-- per ora: SI FA FINTA!                                                                         DA FARE
  <-- definizione dei valori per la risposta bash

------------------------------------------------------------------------------ comandi curl di prova
Prove:
- si immette una URL da terminale o da browser
    <-- su una droplet esterna rispetto al db
    <-- Es.:  da 10.133.3.65    -->   a 10.133.94.60
    <--      gothings-v01-03    -->     gothings-v09
- il risultato e' una semplice pagina HTML, formattata per essere quasi leggibile sul terminale
- si emette anche un exit code leggibile direttamente da bash script


- prova base
  da terminale:  curl --verbose 'http://10.133.94.60/template.php'
    da browser:  http://php.gothings.org/template.php
      <-- pagina html contenente: "Program NOT available"
      <-- in sviluppo possono essere presenti alcune informazioni di debug

Definizione parametri in template:
  X_NAME       primo parametro di controllo, equivalente allo user da autenticare
  X_CONTROL    secondo parametro di controllo, equivalente alla password nella autenticazione
  X_VERIFY     terzo parametro di controllo per maggiore sicurezza
  X_DEBUG      fa stampare una variabile potenzialmente utile nello sviluppo


- prova di debug aggiungendo parametri nella URL
      curl -v 'http://10.133.94.60/template.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolo'
      http://php.gothings.org/template.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolo

    <-- considera la prova di accesso valida per TUTTI
  - gli stessi comandi di prima mostrano una pagina HTML piu' ricca
      <-- exit code della chiamata: 0 se il template non lo modifica

Attualmente, il test di autorizzazione e' inefficace, si accettano delle costanti:
      X_NAME = test
   X_CONTROL = password
    X_VERIFY = <stringa qualunque>
successivamenteil controllo sara' un hash 

======> la discussione sul funzionamento di TEMPLATE e' avanti:              PHP TEMPLATE - START  |

Nel fare showtables si vede che abbiamo bisogno di estensioni per lavorare con il db
-----> si decide di far partire php con la stessa immagine di wordpress e, eventualmente
       di estenderla ancora

- tutorial utile:
    https://www.sitepoint.com/how-to-manually-build-docker-containers-for-wordpress/
      <-- come installare estensioni su docker PHP

  curl -v 'http://10.133.94.60/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1

                                                   ====> non funziona, MANCANO l'estensione mysql!!!
soluzione: usiamo lo stesso php di wordpress

in .../gothings/php/dockrepo/sysdata/php/gothingsphp.yml:
  --> scegliamo l'immagine:   wordpress:5.3.2-php7.2
               al posto di:   wordpress:5.3.2-php7.2-fpm-alpine
                                                                                                    IN CORSO
un ref. utile:  https://www.sitepoint.com/how-to-manually-build-docker-containers-for-wordpress/

Altri ref con intenti simili:
  https://github.com/10up/wp-local-docker
  https://github.com/visiblevc/wordpress-starter
    <-- vedi anche: letsencrypt, 

- aggiunto un wp-config.php fittizio
- trasfornato template.php in index.php
- piccoli aggiustamenti cosmetici a index.php

Accesso al sito php:
  curl -v 'http://10.133.94.60/
  http://php.gothings.org/


---



----------------__BUTTARE:
curl -v -H 'TRY_X: true' 'http://10.133.94.60/testcurl.php'
  <-- verifica collegamento base

curl --verbose 'http://www.gothings.org/go_save_db.php'

                                                                                     Sviluppo - FINE  |
=====================================================================================================/



=====================================================================================================\
                                                                                         PHP Service  |
                                                                                PHP TEMPLATE - START  |
                                                                                                    IN CORSO
Scopo del template e' fornire un punto di partenza per la realizzazione di servizi PHP
- Vengono realizzate in maniera univoca tutte le funzioni comuni ad ogni applicazione
- il template usa tre file php che vengono inclusi nell'applicazion template:
    php-testata.php    <-- testata HTTP: title, start body, php functions declaration
                           <-- contiene le funzioni PHP:
                                 print_r2($val)   stampa 'carina' della variabile $val
    php-secure.php     <-- controllo della chiamata, eventuale terminazione
                           <-- eventualmente, TRY_X consente di bypassare i controlli
                               durante lo sviluppo
                           <-- assicurarsi che TRY_X sia 'false' in produzione
                           <-- NON dovrebbe essere variato nelle varie applicazioni
    php-content.php    <-- body del programma, specifico per ogni servizio
                           <-- possibilmente, emettere uscita facilmente interpretabile
                               da una chiamata da terminale 
    php-footer.php     <-- terminazione del programma
                           <-- print X_DEBUG ed esci dal programma
                           <-- il valore di EXIT_CODE viene stampato sull'uscita
                               ed e' disponibile come exit code a bash nel terminale

Come usare i templates:
- vai nel dir .../sysdata/php/var_www/html/
- esegui una copia di template.php ed assegna un nome, es.: myservice.php
  - edit il file myservice.php ed esegui la sostituzione:
       require 'php-content.php';   ==>   require 'myservice-content.php';
- esegui una copia di content.php ed assegna il nome: myservice-content.php
  - modifica myservice-content.php per eseguire il servizio che credi
- esegui le prove necessarie dal terminale e/o dal browser:
      curl -v 'http://10.133.94.60/template.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
      http://php.gothings.org/template.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  

per myservice.php:  
  curl -v 'http://10.133.94.60/myservice.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/myservice.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'

per creadb_bk.php:
  curl -v 'http://10.133.94.60/creadb_bk.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/creadb_bk.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1


                                                                                                    IN CORSO
Facciamo showtables:
  curl -v 'http://10.133.94.60/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1

soluzione: usiamo lo stesso php di wordpress

-----------------------------------------> aggiustata la configurazione php

                                                                                 PHP TEMPLATE - FINE  |
=====================================================================================================/


=====================================================================================================\
                                                                                         PHP Service  |
                                                                             php db services - START  |

-----------------------------------  Servizi creati per gestire il database wordpress da bash remoto

- si aggiustano i programmi transitori  go_backup_db, go_creadb_bk e go_save_db

------- servizio 'mostra tabelle'
- si parte da template --> showtables
- si aggiusta showtables-content.php




                                                                                                    IN CORSO
Facciamo showtables:
  curl -v 'http://10.133.94.60/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_VERIFY=bibbolino&RES_DEBUG=1


===> mysql da terminale ...
      mysql -u root -pGTH2020_quattro_marzo
      show databases;
      select host, user from mysql.user;
      mysql -u wpuser -ppenna_matita_gomma

      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      CREATE USER 'wpuser'@'172.29.%';
      CREATE USER 'root'@'172.29.%';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.%';
      show grants for 'wpuser'@'10.133.%';

ref.:
  https://linuxconfig.org/install-mysql-on-ubuntu-18-04-bionic-beaver-linux
    <-- come installare mysql client

  installa -->
      sudo apt update
      sudo apt install mysql-client

  test connection -->
      mysql -u root -p -h 127.0.0.1           <-- p:  GTH2020_quattro_marzo
      mysql -u wpuser -p -h 127.0.0.1         <-- p:  penna_matita_gomma
      mysql -u wpuser -p -h 10.133.94.60      <-- p:  penna_matita_gomma
      mysql -u root -p -h 10.133.94.60        <-- p:  GTH2020_quattro_marzo

test da gothings-v01-03:                    <-- container nginx, diverso dall'host di db
    mysql -u wpuser -p -h 10.133.94.60      <-- p:  penna_matita_gomma
    mysql -u root -p -h 10.133.94.60        <-- p:  GTH2020_quattro_marzo
=====>  FUNZIONA !!!

test da gothings-v09:                       <-- container host di db
    mysql -u wpuser -p -h 10.133.94.60      <-- p:  penna_matita_gomma
    mysql -u root -p -h 10.133.94.60        <-- p:  GTH2020_quattro_marzo
=====>  FUNZIONA !!!

------------------------------------------------------------------------
test dal container php:                     <-- stesso host di db
    mysql -u wpuser -p -h 10.133.94.60      <-- p:  penna_matita_gomma
    mysql -u root -p -h 10.133.94.60        <-- p:  GTH2020_quattro_marzo

db WARNINGS:
  [Warning] 'user' entry 'wpuser@*' ignored in --skip-name-resolve mode.
  [Warning] 'proxies_priv' entry '@% root@df59d3319c66' ignored in --skip-name-resolve mode.  
    --> https://www.fromdual.com/node/1280

mysql andrebbe installato
    apt update
    apt install mysql-client
    --> E: Package 'mysql-client' has no installation candidate

altra strada:
  installiamo un altro container:

                                                                                                    IN CORSO
Ricognizione: facciamo un container ubuntu con nodejs e tutto ilresto
  --> ricerca:  docker nodejs over ubuntu 
    







                                                                              php db services - FINE  |
=====================================================================================================/




=====================================================================================================\
                                                                                         PHP Service  |
                                                                           Funzione CLEAR DB - start  |
                                                                                      WP Service old

*** funzione specifica per wordpress ***
  wpclear.sh
Ogni applicazione avra' una <appname>clear.sh, richiamata dall'applicativo principale
****************************************

-------- funzione CLEAR
obiettivo:
  tornare alla situazione iniziale nei dir e nel database

realizzazione:
  - si esegue una copia del db gtlite su gtlite_bk
  - si eliminano TUTTI i file generati da wordpress
      <-- files di nome wp-*
      <-- altri files: index.php, license.txt, xmlrpc.php, readme.html, .htaccess
      <-- dirs: wp-admin, wp-includes, wp-content
  - si eliminano TUTTE le tabelle wordpress in gtlite
  - si rileggono i file di configurazione wpinit.json e wpinstall.json da github
      <-- per il momento NON si legge wpexpand.json per non usare wpdirs.tar.gz
          in fase di sviluppo

Problema:
  dare ALL GRANTS a wpuser sul db gtlite_bk        <--    fare in verifyinit ??                     DA FARE


----------------------------------------------------------------------------------------------------

ref. usati:
  https://www.supportsages.com/php-script-to-change-mysql-table-prefix/
    <-- script MOLTO interessante
    <-- HTML per leggere le pwd etc.         <-- usare .env ? 

  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
    <-- usata versione cli come template 
    <--  (thanks to Richard Maurer)

  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- questo NON HA FUNZIONATO

  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <-- myscli version per copytables
    <-- anche questo SEMBRA NON FUNZIONARE


altri ref.:
--------------  RENAME  DUMP  database
ref.:
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- rename database
    <-- dump database
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- altro script, in bash
  https://stackoverflow.com/questions/12190000/rename-mysql-database
    <-- alcuni suggerimenti utili ...

automysqlbackup
  https://sourceforge.net/projects/automysqlbackup/files/latest/download
    <-- Automatic MySQL Backup
    <-- bash script da vedere: backup schedulato ...
  http://www.ducea.com/2006/05/27/backup-your-mysql-databases-automatically-with-automysqlbackup/
    <-- tutorial

use PHP to alter the db ref.:
  https://www.supportsages.com/php-script-to-change-mysql-table-prefix/
    <-- script MOLTO interessante
    <-- HTML per leggere le pwd etc.         <-- usare .env ? 

  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <--mysqlcli version for 'copytables'

  https://helloacm.com/duplicate-a-mysql-table-copy-table-duplicate-database-php-script/
    <--  insert --> select  

-----
  http://www.learningaboutelectronics.com/Articles/How-to-rename-a-MySQL-table-using-PHP.php
    <-- PHP script
  https://gist.github.com/yireo/5919293
    <-- gist ~~= al php visto sopra

  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- sembra buono ...


--------------  RENAME  DUMP  database
ref.: https://phoenixnap.com/kb/how-to-rename-a-mysql-database
        <-- rename database
        <-- dump database

  https://stackoverflow.com/questions/22199557/assign-an-existing-user-to-mysql-databases/22199886
    <-- mysql query to grant privileges to user


--------------------------------------------------------------------------- comandi utili:

mysql -u root -pGTH2020_quattro_marzo

10.133.94.60/gtlite_bk/  http://phpmyadmin.gothings.org/db_sql.php?db=gtlite_bk
Your SQL query has been executed successfully.

show grants for 'wpuser'@'10.133.%';

GRANT USAGE ON *.* TO 'wpuser'@'10.133.%' IDENTIFI... 
GRANT ALL PRIVILEGES ON `gtlite`.* TO 'wpuser'@'10... 
GRANT ALL PRIVILEGES ON `gtlite_bk`.* TO 'wpuser'@... 

-------------------------------------------------------------------------------------------

                                                                                      WP Service old
                                                                            Funzione CLEAR DB - fine  |
=====================================================================================================/






----------------------------------------------------------------------------------------------------

=====================================================================================================\
                                                                                         PHP Service  |
                                                                                       topic - START  |

                                                                                        topic - FINE  |
=====================================================================================================/


                                                                                       DA RIGUARDARE
=====================================================================================================\
                                                                                         PHP Service  |
                                                                                           Utilities  |
Pacchetti utili per il debug in una droplet:
  apt -y update
  apt -o Dpkg::Options::=--force-confdef -y install nano curl netcat net-tools telnet

  altri paccetti utili:
  make inetutils-ping dnsutils wget bzip2 locales perl unzip tree adduser

curl nel container:
  curl --verbose localhost

curl da host di php:
  curl --verbose localhost                <-- OK

curl da 'fuori'
  curl --verbose 'http://10.133.94.60'     <-- OK

------------------------------------------------------- Richiesta di servizio PHP da gothings-v01-03

                                                                                                    IN CORSO
curl --verbose 'http://10.133.94.60/template.php'

curl -v -H 'x-ash: bla' -H 'x-num: blu' 'http://10.133.94.60/testcurl.php'
  <-- inserzione di custom header









                                                                                     Utilities -FINE  |
=====================================================================================================/



                                                                      *** PHP Service - v0.00.3 ***
---------------------------------------------------------------------------------------------------\
                                                                                 *** PHP Service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-09-28
                                                                             *** WP Multisite 05 ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                           *** WPMulti v0.01.05 ***
evoluzione di WPMulti v0.01.03
  installazione di wordpress, versione multisite
  strategia di bootstrap in:    GOTHINGS cloud v04     strategia di bootstrap
  conf nginx:  wpm
- il wp multisite WPM e' eseguito sulla droplet gothings v01.03
  --> usa il db nella droplet  gothings-v09
- ancora da aggiustare:
      gocloud-wpm
      wpmdirs.tar.gz

-------------------------- sezioni:

      FUTURO da fare  |  <-- Idee interessanti da fare in futuro

          Dati UTILI  |  <-- informazioni di base, configurazione & copyright
        Ref tecniche  |  <-- Riferimenti tecnici utili per wordpress
      Prog Utilities  |  <-- Utility for programming & debug
          shortcodes  |  <-- how to use shortcode, our custom shortcodes
             Plugins  |  <-- commenti sui plugin usati
            DROPLETS  |  <-- cloud resources

           NGINX APP  |  <-- installazione app versione 3 - caso nginx

  expand & creazione  |           <-- note alla seconda installazione (questa e' la terza)
         Fase EXPAND  |                  <-- da completare
           Fase INIT  |                    <-- da rifare ex-novo & documentare a futura memoria
WP multisite install  |  <-- 1.o ~quasi~ funzionamento
   WP secure install  |  <-- usa certbot by letsencrypt                         OK
                      |      rinnovo automatico del certificato                 DA FARE
       Page Builders  |  <-- scelta del costruttore di pagine

       Mailgun EMAIL  |  <-- transactions email per l'amministratore            OK - DA ESPANDERE
     User management  |  <-- profile login, dashboard
      Users & Things  |  <-- collegamento tra UTENTI & COSE                     IN CORSO   <-
 FP Plugins & Themes  |  <-- sviluppi WP X GoThings                             IN CORSO
           WP Things  |  <-- memorizzazione delle COSE in wordpress             IN CORSO
    DB custom tables  |  <-- usare custom MySQL table per i dati delle COSE
         WP WebHooks  |  <-- interazione con wordpress                          IN CORSO
           FP-WP-API  |  <-- collegamento da COSE a wordpress                   DA FARE
wordpress javascript  |  <-- js nelle pagine wordpress                          IN CORSO

 Custom Fields - ACF  |  <-- usa custom fields per i dati delle cose            DA VEDERE
     acf on frontend  |  <-- search & show custon fields on frontend            ??
  CF7 - Contact Form  |  <-- form per interazioni con l'utente (DA FINIRE)
      Huginn - IFTTT  |  <-- private IFTTT
           WOOThings  |  <-- da WOOCommerce a 'Personal Thing'
    Roba DA GUARDARE  |  <-- references da rivedere in futuro

--------------------------------------------------------------------------------
---- Eliminati - ora in STORIA
            Use PODS  |  <-- ABBANDONATO                                        KO


Parti da rivedere & completare:
- installazione WP multisite                                                     da documentare
- securizzazione del db tramite script eseguiti sul db con comandi remoti mysql
    --> vedi PHP Service



=====================================================================================================\
                                                                                            WP Multi  |
                                                                                          Dati UTILI  |

--------------------------------------------------------------------------------
Database server sulla droplet v09:

    Server: 10.133.94.60                   internal network
            wpuser   penna_matita_gomma    wp user & pwd
            104.248.95.29/20               external IP   <-- chiuso dal firewall
            telnet 104.248.95.29 3306      verifica chiusura fw       
    Server type: MariaDB
    Server connection: SSL is not being used
    Server version: 10.4.12-MariaDB-1:10.4.12+maria~bionic - mariadb.org binary distribution
    Protocol version: 10
    User: root@10.133.3.65
    Server charset: cp1252 West European (latin1)

====> aggiustati:
        - firewall per bloccare accesso a mysql dal pubblico  (gothings-public)
        - accesso root & wpuser solo da rete interna

--------------------------------------------------------------------------------
Valori usati nel DB sulla droplet v09

ROOT_PWD_OLD="root_pwd"
ROOT_PWD="GTH2020_quattro_marzo"
WPUSER="wpuser"
WPUSER_PWD="penna_matita_gomma"
WPDATABASE="gtlite"
GOTHINGSNET="10.133.%"
ERRCOUNT=0
LOGFILE="dbconfig.log"

$table_prefix = 'GoTh01_';

--------------------------------------------------------------------------------
===> esempi per mysql da terminale ...

      mysql -u root -pGTH2020_quattro_marzo
      show databases;
      select host, user from mysql.user;
      mysql -u wpuser -ppenna_matita_gomma

      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      ALTER USER 'wpuser'@'172.29.%' IDENTIFIED BY 'penna_matita_gomma';
      ALTER USER 'root'@'172.29.%' IDENTIFIED BY 'GTH2020_quattro_marzo';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.%';

      GRANT ALL PRIVILEGES ON *.* TO 'root'@'172.29.%' IDENTIFIED BY 'GTH2020_quattro_marzo';   ??
      show grants for 'wpuser'@'10.133.%';

    PERICOLOSO!
      DROP DATABASE gtlite;
        <-- as root

---------------------------------------------------------------------  copyright
Creative commons:
https://creativecommons.org/licenses/by/2.0/
  <-- Attribution 2.0 Generic (CC BY 2.0) 


                                                                                   Dati UTILI - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                        Ref tecniche  |

----------------------------------------------------------------Riferimenti tecnici utili per wordpress

https://vegibit.com/the-top-100-most-commonly-used-wordpress-functions/
  <-- le 100 funzioni piu' usate

https://css-tricks.com/back-basics-wordpress-css-understanding-native-classes/
  <-- CSS : classi native

https://www.wpbeginner.com/wp-themes/default-wordpress-generated-css-cheat-sheet-for-beginners/
  <-- CSS cheat sheet (beginners)



                                                                                 Ref tecniche - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                             Plugins  |
------------------------------------------------------ Commenti sui plugin usati

------- FP-Gothings
- plugin steso per gestire il database delle COSE con wordpress
    <-- al momento (test & MVP) non serve un database specifico per le COSE
- consente di:
    - vedere la definizione delle COSE
    - aggiungere una nuova COSA (funzione 'add new')
    - editare le COSE esistenti
    - importare un file di definizione delle COSE in formato .csv
        <-- si trattano SOLO errori logici fondamentali
        <-- non si verifica la congruita' delle definizioni
        <-- non si accettano definizioni duplicate
          <-- la coppia (owner_id, thing_id) deve essere unica
        <-- ad ogni COSA e' assegnato un wp_id (intero) usato solo dentro wordpress
    - al momento NON e' gestito il campo 'status'


---------------------------------------------------------------------- ELIMINATI

--------- Elementor
https://wordpress.org/plugins/elementor/
  - Sembra buono, ma difficile da imparare ..
  - Tolto perche' nella fase attuale non serve

--------- ACF Frontend  (for elementor)
https://wordpress.org/plugins/acf-frontend-form-element/
  - tentativo di fare un login migliore di theme-my-login
  - non sono riuscito a farci quello che volevo ...
  - da verificare se non ci sia un metodo migliore usando CF7

--------- Advanced Custom Fields  (ACF)                                       ??
.. vedi i plugin in valutazione

--------- Advanced Custom Fields: Theme Code
https://wordpress.org/plugins/acf-theme-code/
  - interessante solo se si usa acf
  - eliminato con la ri-valutazione di acf
  - ri-abilitare se si usa davvero acf

--------- Easy Populate Posts
https://wordpress.org/plugins/easy-populate-posts/
  - fatte delle prove ...
  - eventualmente, RIPROVARE ...

--------- Any Ipsum
https://wordpress.org/plugins/any-ipsum/
  - usato, ma sembra troppo complicato
  - potrebbe anche essere ri-usato

--------- FakerPress
https://wordpress.org/plugins/fakerpress/
  - non usato perche' sembra troppo complicato

--------- WP Data Access
https://wordpress.org/plugins/wp-data-access/
- eliminato
  - e' troppo complicato
  - non crea la tabella 'esterna' che ci servirebbe
  - non e' chiaro se potrebbe risolvere il problema

--------- User Submitted Posts
- NON PROVATO
  --> Enables your visitors to submit posts and images from anywhere on your site
  - rivedere ?

--------- wpDataTables - Tables & Table Charts
https://wordpress.org/plugins/wpdatatables/
- eliminato
  NON fa quello che ci serve ...

--------- UsersWP
https://wordpress.org/plugins/userswp/
- eliminato
  vedi prova in:   -- PROVA userswp
  intyroduce modifiche indesiderate al CSS di tutto il sito

--------- Theme My Login
- Network Active
  - funziona con molti inconvenienti
  - vedere prova:   --  PROVA theme-my-login





--------- 
--------- 

----------------------------------------------------------- VALUTAZIONE IN CORSO

--------- Frontend Dashboard
https://wordpress.org/plugins/frontend-dashboard/
- in prova su www
  - si sovrappone a theme-my-login, non e' chiaro se puo' sostituirlo
  - si sovrappone anche a profile-extra-fields
      <-- servira' un lavoro di ricucitura  
  - da verificare il discorso 'custom fields'
--------- Frontend Dashboard Pages
--------- Frontend Dashboard Templates
                                                    <== DA TESTARE tutti assieme

--------- Insert PHP Code Snippet
https://wordpress.org/plugins/insert-php-code-snippet/
                                                                  <== DA TESTARE

--------- BackWPup
https://wordpress.org/plugins/backwpup/
- Network Active
  - da verificare sul serio: non si sa se sia possibile restaurare un sito

--------- Advanced Custom Fields  (ACF)
https://wordpress.org/plugins/advanced-custom-fields/
- attivo su www, things, ?
  - doveva mantenere i dati delle COSE
  - un mucchio di prove prima di scoprire che per tentare di farlo ci vuole il PRO
  - in sostanza solo il 'repeater' puo' fare istanze multiple di un campo acf
      <-- non ho verificato se il PRO ha tutte le funzioni che ci servono ...
==> INOLTRE:  NON serve a fare quello che serve

--------- Custom Field Template
https://wordpress.org/plugins/custom-field-template/
- inattivo                                                            DA TESTARE

--------- Shortcodes Ultimate
https://wordpress.org/plugins/shortcodes-ultimate/
- inattivo                                                            DA TESTARE



--------- Akismet Anti-Spam
https://wordpress.org/plugins/akismet/
  - NON testato
  - valutazione rimandata a tempi migliori



------------------------------------------------------------- DA GUARDARE MEGLIO

--------- REDIRECTION
https://wordpress.org/plugins/redirection/
  <-- potrebbe essere utile ..

--------- 
--------- 


------------------------------------------------------------------ PLUGIN IN USO

--------- FP GoThings
.../gothings/wpm/dockrepo/sysdata/var_www/html/wp-content/plugins/fp-gothings/
- in prova su things
- da testare come 'Network Active'                                   IN SVILUPPO
  - al momento funziona solo la creazione della tabella

--------- Error Log Viewer by BestWebSoft
https://wordpress.org/plugins/error-log-viewer/
  <-- efficace & semplice da usare

--------- Contact Form 7  (CF7)
https://wordpress.org/plugins/contact-form-7/
- Network Active
  - sembra decisamente da usare
  - da fare le prove per un login che funziona
  - da vedere se si puo' eliminare theme-my-login
      --> da verificare se cf7+acf possono sostituire theme-my-login

--------- Contact Form 7 - Dynamic Text Extension
--------- Contact Form 7 Conditional Fields
--------- Contact Form CFDB7
- TUTTI da tenere se si usa CF7

--------- Debug Bar
https://wordpress.org/plugins/debug-bar/
- Network Active
  - DA TENERE

--------- Duplicate Page
https://wordpress.org/plugins/duplicate-page/
- Network Active
  - DA TENERE

--------- Mail logging - WP Mail Catcher
https://wordpress.org/plugins/wp-mail-catcher/
- in uso su www, things
  - mantiene il log delle email trasmesse
  - DA TENERE

--------- Profile Extra Fields by BestWebSoft
https://wordpress.org/plugins/profile-extra-fields/
- in uso su www, things
  --> ora attivo sul network                                            IN PROVA
  - adesso funziona (sui siti abilitati)                          DA CONSOLIDARE
      <-- vale solo su things, abilitato dal child theme
  - aveva qualche problema sul multisite
      <-- aggiunto lo shortcode: user_extra_field
  - sembra utile, DA RIVEDERE dopo la risoluzione del problema login
      <-- vedi i plugin in valutazione

--------- Participants Database
https://wordpress.org/plugins/participants-database/
- in uso su things
    <-- genera warnings                                               VERIFICARE  <-- TOGLIERE?
  - doc molto buona
  - sembra utile, da verificare se funziona per l'interfaccia con le COSE
  - dovrebbe fare da interfaccia con FP GoThings
  - potrebbe essere diverso su ogni sito
==> in PROVA con cf7 in


--------- What The File
https://wordpress.org/plugins/what-the-file/
- Network Active
  - 5 stelle

--------- WordPress Importer
https://wordpress.org/plugins/wordpress-importer/
- usato su www                                                 VERIFICARE meglio
  - utile per copiare pagine da un sito ad un altro

--------- WP Mail SMTP
https://wordpress.org/plugins/wp-mail-smtp/
- Network Active
  - risolve il problema di interfaccia tra WP & MailGun
  - 5 stelle

--------- WunderAutomation
https://wordpress.org/plugins/wunderautomation/
- ancora NON in uso                                                   DA PROVARE
  - dovrebbe automatizzare il colloquio WP <--> COSE

--------- Query Monitor
https://wordpress.org/plugins/query-monitor/                            IN PROVA
https://querymonitor.com/
https://kinsta.com/blog/query-monitor/
- Network Active
  - sembra molto utile ...



--------- 
--------- 
--------- 

                                                                                      Plugins - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                  expand & creazione  |
I programmi stanno in wpm:   .../WP-Sviluppi/gothings/wpm/

wordpress sta nella droplet gothings-v01-03:
      ssh yesfi@188.166.70.203

il database mariadb sta nella droplet gothings-v09:
      ssh yesfi@104.248.95.29

Si usano i 'dati utili' riportati sopra

Si aggiusta gocloud-wpm per avere una installazione 'semi-manuale'
  - lo script chiede di fare a mano le operazioni necessarie all'installazione
  - lo script gestisce automaticamente il ciclo di vita del container

------------ expand & creazione contenitore
riepilogo passi preliminari:
- ~/dockrepo/dockimages/wpm/*.json definisce la configurazione della app wpm
- se uno dei file richiesti non esiste lo si scarica da github
    --> si scarica SOLO se non e' presente
    --> puo' essere modificato in loco durante lo sviluppo
  - il file wpmexpand.json
    --> garantisce la presenza iniziale dei dati necessari in:
          ~/dockrepo/sysdata/wpm     per la configurazione


SVILUPPO:
  ===> vedi (circa riga 5300 & 6100):   4.o tentativo
       (precedenti sviluppi wordpress)

                                                                           expand & creazione - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                            WP Multi  |
                                                                                         Fase EXPAND  |

- verifyexpand
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}expand.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'espansione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
    <-- per l'espansione e' richiesta la sudo password di yesfi
    <-- errori nella fase di espansione NON CONSENTONO di andare avanti
                                                                                                    DA FARE
- NOTA di sicurezza:
    - il file di configurazione .env-wp contiene valori NON VALIDI
    - nella fase init .env-wp verra' sostituito con una versione VALIDA e piu' SICURA

======> verifyexpand e' a posto


                                                                                  Fase EXPAND - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                            WP Multi  |
                                                                                           Fase INIT  |

                                                                                                    IN CORSO
- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'inizializzazione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
- il dir dockrepo/sysdata/wp/ DEVE contenere il file di configurazione gothingswp.yml
    <-- se non esiste:  ERRORE 4
- il dir .../docksecrets/${APPNAME} DEVE contenere il file di configurazione .env-${APPNAME}
    <-- VERIFICA:                                                                                   DA FARE
    <-- questo file sara' quello effettivamente usato per la creazione del container
    <-- il file NON E' scaricabile da github per motivi di sicurezza
    <-- il file sara' generato 'in loco' da una apposita app
    <-- per ora, il file e' inserito manualmente

                                                                                                    DA FARE
- aggiustare wpinit.sh:     leggere da wpconfig.json i valori "veri"
                            mettere i valori in wp-config.php
- procedura di lettura valori da tastiera per cambio pwd etc.
- AGGIUSTARE dbsecure.sh    aggiungere una opzione "vai avanti anche se ci sono stati errori"
                              <-- potrebbe servire quando viene eseguita piu' volte
- aggiustare nome container phpmyadmin --> myadminlocal ?  myadmin_l(ocal) ?  myadmin_g(eneric) ?



                                                                                    Fase INIT - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                WP multisite install  |
refs. essenziali:

- ref principale per iniziare il lavoro
    https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
  - seguito 'a posteriori' per definire la struttura
    --> da ri-usare per la configurazione https


- useful hints for wp multisite setup
    https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
  - per organizzare la fase iniziale di installazione del multisite
  - si e' seguito manualmente, si sono fatti esperimenti con le funzioni di php-helper e si
    sono eseguiti cambiamenti di configurazione prima di arrivare ai primi vagiti
    --> va eseguita una nuova installazione passo-passo, a futura memoria
  - utile per definire il wp-config.php
  - utile per organizzare il db
    --> nel nostro caso e' stato fatto indipendentemente e su una droplet differente
  - eseguita creazione di siti, cambi di tema ed installazione plugin

Passi importanti:
- aggiustamenti conf nginx
  - definizione del sito in wpm
    - nomi espliciti per i siti principali
    - aggiunto il dominio base (senza www : gothings.org)
    - NON usato *.gothings.org

SCOGLI trovati:
  - i vari siti sono editabili, ma:
  - il sito www non e' editabile
    --> il CORS non funziona nemmeno dopo molti tentativi ...
  - usato il ref.: https://designanddevelop.com/change-the-primary-blog-in-wordpress-multisite/
    per correggere la tabella OPTIONS  
    --> campo option id=2  option name=home
          option value  http://gothings.org --> http://www.gothings.org
  - ad ora: tutto OK

Passo successivo:
  - aggiungere https
    --> letsencrypt                                                             OK
    --> rinnovo automatico del certificato                                      DA FARE


Refs. ancora da vedere:
  https://wordpress.org/plugins/nginx-helper/
    <-- aggiustamenti sulla configurazione nginx per letsencrypt

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- rivedere i consigli sui plugin 'indispensabili'



                                                                         WP multisite install - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                   WP secure install  |


-------------------------------------------------------------------------------------------------------
                                                                              aggiustamenti preliminari
------------------- aggiusta nginx wildcard
- in wpm si abilita *.gothings.org
  --> prove di edit su tutti i siti gia' definiti
      ==> OK
- prova creazione sito
  --> il sito inesistente e' preso in carico da wordpress
      --> questione NOBLOGREDIRECT da risolvere: vedi DA FARE sotto
- il sito appena creato e' rediretto su https ...


-------------------------------------------------------------------------------------------------------
                                                                                      prova letsencrypt
ref.s usati:
1.
  https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04
2.
  https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
3.
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- nostro esempio + letsencrypt

--------- 
- il redirect 80-->443 e' fatto sui domini *.gothings.org
- test.gothings.org e' mantenuto fuori da https
- Vedi lo storico per i dettagli sulle prove:
    prima cerca:    *** WPMulti v0.01.04 ***
            poi:    WP secure install  |          <-- 2 volte !

----------------------------------- nginx data
- spezzato wpm in wpm+wpms   <-- parte sicura su wordpress + tutto il resto
- nella droplet, in ~/dockrepo/sysdata/certbot, si usa lo script
      ./go-letsencrypt
  netbeans: .../gothings/base/dockrepo/sysdata/certbot/go-letsencrypt
- restart nginx   <-- RICORDA

==>  seguendo il ref. 3 tutto funziona immediatamente

siti lasciati fuori da https:
  test.gothings.org                                     <-- verificare sicurezza
  iot.gothings.org                  <-- portare in https                        DA FARE
  phpmyadmin.gothings.org           <-- portare in https

-------------------- phpmyadmin sotto https:
- si sono avuti problemi di funzionamento
  --> avviso iniziale ininfluente
      <-- i possibili malfunzionamenti non si sono osservati
  --> cerca nello storico
  --> certbot da aggiornare                                                     DA FARE
        ==> VERIFICARE se il rinnovo e' stato eseguito ....


--------------------------------------------------------------

- verificare sicurezza di test.gothings.org                                     DA FARE

- rinnovo automatico                                                            DA FARE
- wildcard domain                                                               DA FARE
    --> cerca:   use wildcard domain letsencrypt
        https://letsencrypt.org/docs/client-options/
        https://letsencrypt.org/docs/client-options/
        https://id-rsa.pub/post/certbot-auto-dns-validation-with-lexicon/
    su premium:
        https://medium.com/@saurabh6790/generate-wildcard-ssl-certificate-using-lets-encrypt-certbot-273e432794d7

altre cose                                                                      DA FARE
  https://gist.githubusercontent.com/dejanmarkovic/8323792/raw/1212b3c4ae57bd65964a6878f275eeff3ac70f56/NOBLOGREDIRECT%2520explained%2520and%2520fix
    <-- correzione al NOBLOGREDIRECT



                                                                            WP secure install - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                           FP-WP-API  |

--------------------------------------------------------------------------------
                                                Interazione tra COSA e Wordpress
NOTE-
- sicurezza delle comunicazioni
  - in fase 0 i segreti sono protetti SOLO dal protocollo HTTPS
      <-- successivamente si trasmettera' un hash in stile digest
    - definizione dei segreti:
           key:  assicura WP che l'evento viene dal una cosa autorizzata
        secret:  assicura la COSA che l'evento viene dal proprio owner
  - in fase 0 si usa la (singola) tabella gia' definita
      <-- si memorizza SOLO l'ultimo evento        <-- storia in json?
  - nuove tabelle                                  <-- suggerimento
      owners      ownerid, ownername, key, secret
      things      thingid, thingname, key, secret
      events      time, thingid, secret, ip_addr, value, ...  <-- + json values?

----------------- fase 0
- in fase 0 si usa la (singola) tabella gia' definita
    <-- si memorizza SOLO l'ultimo evento        <-- storia in json?
  - gli eventi si registrano solo se il secret e' giusto
      <-- poi si potra' avere una tabella di log o simili
- le cose sono registrate nel sistema con un 'thing sign-up'
  - il thing sign-up autorizza  WP a memorizzare i dati
- key & secret vengono registrati con un 'thing login' --> thing sign-in
  - il thing login autorizza  WP a memorizzare i dati
  - il thing login memorizza in tabella key & secret
      <-- dovra' essere ripetuto quando i segreti cambiano
      <-- poi ci potra' anche essere una strategia di aggiornamento dei segreti ...
- funzioni realizzate:
    find my raspi         restituisce l'elenco delle COSE sulla LAN  (solo le tue?)
    owner register        sign-up di una COSA
    thing login           accetta comunicazioni dalla COSA
    thing logout          disconnetti la COSA
    list things           tabella di tutte le tue COSE

----------------------------------------------------------------- register owner
                                               revisione dic 2020

- campi definiti nel profilo (vedi NOTE sotto):
    owner_id              owner name
    server_key            segreto usato da WP per inviare dati alle COSE
                            --> identifica una comunicazione da user verso la COSE
                            --> potrebbe essere diverso per ogni COSA
    thing_key             segreto usato dalle COSE per inviare dati a WP
    owner_name            display name per l'utente su WP
                            --> pre-definito dal profilo !
- altro campo:
    allow_connections     consenso dell'utente ad abilitare o sospendere la
                          connessione dati
NOTE:
- in fase 0
  - i segreti sono delle password luuuuuunghe per le comunicazioni tra COSE e WP
  - owner_id e' scelto uguale all'utente WP, per praticita'
      <-- vale su tutto WP, rifiutato se gia' esistente
      <-- politica da rivedere, ma in fasi successive
  - owner_name non e' univoco, e' scelto dall'utente come display su WP
  - l'utente immette questi identificativi editando il proprio profilo su WP
      <-- non molto sicuro, da spostare quanto prima su un plugin (che funzioni)
          con una apposita tabella sul wpdb
      <-- andra' fatta una pagina apposita
- in una fase successiva:
  - gestione criptata degli identificativi
      <-- ad ogni COSA si assegna una propria chiave segreta (diversa per ogni COSA)
          <-- la chiave e messa nel DB come 'thing_key'
      <-- la chiave segreta viene usata come digest per inviare dati al server
  - pagina di aggiornamento owner_id                      <-- DA FARE IN SEGUITO
      <-- messaggio di richiesta admin ?
- diversificare anche la connessione dati

Procedura di registrazione:                                       DA RI-DEFINIRE
- pagina apposita: 
  - definire uno shortcode per verificare se l'utente ha riempito il profilo
- se non:
  - vai alla pagina 'edit profile'
- se il profilo e' OK:
  - l'utente definisce un owner_name ed esegue il submit
    - viene creato un record con  i campi definiti nel profilo
    - il record e' completato con la COSA con thing_name 'register' e
       con thing_id = current_user
        <-- vengono riempiti i campi rimanenti con costanti predefinite
    - se esiste gia' la coppia (owner_id, thing_id) l'iscrizione e' rifiutata
  - il cambio di owner_id non e' supportato in fase 0
NOTE di programmazione:
  - vedi la definizione del form cf7 in 'contacts'
      <-- si definiscono dei 'dynamic text' contenenti shortcodes per 
          poter usare i 'conditional fields/gropus'
CONCLUSIONI:
  - probabilmente la pagina 'owner registration' e' superflua
      <-- basta la checbox sul profilo ?
  - lasciata pagina 'owner registration', come esempio di form 'molto condizionata'
  <-- PROSEGUIRE con il 'thing login' (sotto)

-------------------------------------------------------------------- thing login
                                              procedura in REVISIONE
- campi visibili nel form:
    thing_id              identificativo della COSA
    thing_name            display name per la COSA
    owner_name            display name per l'utente su WP                       <-- RIVEDERE
- campi nascosti, presi da wp_user profile:
    user_secret           segreto usato dalle COSE per invisre dati a WP
    user_key              segreto usato da WP per inviare dati alla COSE
- campi predefiniti:
    owner_id              === user login name  (nel futuro: cambiabile)         DA FARE
    owner_connection      dal profilo                                           DA aggiungere
Note:
  - campi nascosti:  vedi owner register
  - campi 
  - owner_id e' scelto dall'utente (quasi segreto, come i prefissi del DB di WP)
      <-- vale su tutto WP, rifiutato se gia' esistente
  - owner_name non e' univoco, e' scelto dall'utente come display su WP
  - l'utente immette questi identificativi editando il proprio profilo su WP
      <-- non molto sicuro, da spostare quanto prima su un plugin (che funzioni)
          con una apposita tabella sul wpdb
      <-- andra' fatta una pagina apposita
      ====> pagina di aggiornamento owner_id              <-- DA FARE IN SEGUITO
            <-- messaggio di richiesta a network admin ?
  - un tasto 'new thing' consente di inizializzare (registrare) una nuova COSA
Procedura di login/registrazione:

-------------------------------------------------------------------- list things
refs.:
  https://wordpress.stackexchange.com/questions/162240/custom-pages-with-plugin
    <-- esempio completo, interessante (virtual pages)
  
- pagina apposita
--> la pagina fa vedere la lista delle COSE appartenenti all'utente loggato
Cosa mettiamo:
- prima tabella con: 
    owner_id  owner_name  thing_key  server_key  allow_connections
      <-- TUTTI dati presi dal profilo utente
- lista delle COSE:
    wp_id  thing_id  thing_name  ip_addr  description  STATUS  EDIT
- se non ci sono COSE:
    NO things to display
- campi speciali:
    STATUS      OK / KO se e' obbligatorio fare un edit
    EDIT        rinvio ad una pagina di correzione della COSA

------------------
  //  (`wp_id`, `owner_id`, `thing_id`, `owner_name`, `thing_name`, `ip_addr`, `value`, 
  //  `value`, `json`, `thing_key`, `secret`, `status`, `description`, `last_update`)

Dove sono ora:
  - i dati di owner sono a posto
  - si stampa la tabella delle COSE come vista da fp-gothings
      <-- vanno selezionate le COSE giuste
      <-- va aggiustato il CSS della tabella
      <--  "   "    "    " contenuto
      <-- mettere SUBMIT giusti !

                                                                                SONO QUI DIC 2020

current user:
[data] => stdClass Object
        (
            [ID] => 15
            [user_login] => user20
            [user_pass] => $P$BOeACciiPLpuXmlBEGq2XNfOoRo8fD/
            [user_nicename] => user20
            [user_email] => testuser20@gothings.org
            [user_url] => http://testuser20.example.com
            [user_registered] => 2020-10-01 21:06:24
            [user_activation_key] => 
            [user_status] => 0
            [display_name] => User 20
            [spam] => 0
            [deleted] => 0
        )




@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  ELIMINARE
                                                                    ROBA VECCHIA

Esperimenti per utilizzare WP assiene a GoThings

-------------------------------  Plugins utili (?)


Akismet Anti-Spam
ARI Adminer
BackWPup
Debug This
Duplicate Page
Hello Dolly
Increase Maximum Upload File Size
Jetpack by WordPress.com
Mailgun
Page Builder by SiteOrigin
SiteOrigin CSS
SiteOrigin Widgets Bundle
Widgets for SiteOrigin
WP Rollback

Duplicator                                     <-- site migration & backup
                                                   (free == no multisite?)

-------------------------------  Consigli Woojon:

olsen light theme

Admin Menu Editor
WP Custom Admin Interface

-------------------------------------------------
-------------------------------------------------

-------------------------------  Temi hlitetech

Ample
Caos
Creative Blog
Slightly
Twenty Fifteen
Twenty Seventeen
Twenty Sixteen

-------------------------------  Temi attivati

Twenty *
olsen light theme
...

-------------------------------------------------
-------------------------------------------------


https://since1979.dev/add-custom-acf-fields-to-the-wp-rest-api/

- per ora si lascia tutto nelle tabelle meta del DB di WP
- fare prove sui siti:   www   things   wpwork


--------------------------------------------------------------------------------
                                                                                DA FARE
- si verifica la wordpress rest API
- si va al passo successivo


---------------------------------------------------------------------------
-------------------- varie

https://developer.wordpress.com/calypso/
https://github.com/Automattic/wp-calypso
  <-- una SPA come front-end WP, con uso della REST API
  <=========== NO : usa l'hosting di wordpress.com ..


https://rapidapi.com/blog/how-to-call-an-api-from-wordpress/
  <-- al contrario: vai da WP ad una api esterna !!
https://rapidapi.com/blog/integrate-external-api-wordpress/
      <-- copiati su pocket: wp api plugin

https://www.toptal.com/wordpress/beginners-guide-wordpress-rest-api
  <-- un interessante esempio WP REST API sviluppato su codepen

https://www.sitepoint.com/feathers-js-guide/
  <-- feathersjs : costruisci un API server con express/nodejs
https://morphatic.com/2019/04/15/why-i-choose-feathersjs-as-my-api-framework-of-choice-when-working-with-college-students/
  <-- altra discussione su feathersjs


-------------------------------------------------
-------------------------------------------------


---------------------------------------- DA VEDERE

  https://www.smashingmagazine.com/2016/03/making-a-wordpress-plugin-that-uses-service-apis/
    <-- come scrivere un plugin che si interfaccia con una API esterna

  https://since1979.dev/add-custom-acf-fields-to-the-wp-rest-api/
    <-- sembra buono

  https://www.gavsblog.com/blog/adding-fields-to-the-wordpress-rest-api
    <-- Extending the WordPress API 

  https://wordpress.org/plugins/acf-to-rest-api/
  https://github.com/airesvsg/acf-to-rest-api
    <-- ACF to api

  https://www.wpbeginner.com/wp-tutorials/wordpress-custom-fields-101-tips-tricks-and-hacks/
    <-- interessante

  https://wordpress.org/support/topic/custom-field-data-and-custom-rest-api-fields/
    <-- ??

  https://wordpress.org/plugins/custom-field-list-widget/

  https://wordpress.org/plugins/get-custom-field-values/
  https://coffee2code.com/wp-plugins/get-custom-field-values/
    <--  DA VEDERE !!


                                                                                    FP-WP-API - fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                            WP Multi  |
                                                                        Advanced Custom Fields - ACF  |

--------------------------------------------------------------------------------
---------------------------------------------------------  ACF - indagine sul DB
Colonne interessanti nella tabella `GoTh01_3_posts`:
           ID  :  ID del post che definisce 
                    --> 118
 post_content  :  JSON di definizione del campo/gruppo
                    --> a:10:{s:4:"type";s:4:"text";s:12:"instructions";s:19:"Name given to thing";s:8:"required";i:1;s:17:"conditional_logic";i:0;s:7:"wrapper";a:3:{s:5:"width";s:0:"";s:5:"class";s:0:"";s:2:"id";s:0:"";}s:13:"default_value";s:0:"";s:11:"placeholder";s:26:"name assigned to the thing";s:7:"prepend";s:0:"";s:6:"append";s:0:"";s:9:"maxlength";s:0:"";}
   post_title  :  Label del campo/gruppo
                    --> Thing Name
 post_excerpt  :  name del campo/gruppo
                    --> thing_name
    post_name  :  field/group key
                    --> field_5f54abcc7cabd   group_5f4ab4b34c004
  post_parent  :  per i field: id del post del gruppo
                  per il gruppo il padre puo' essere nullo
                    --> il 'padre' dei post e' facoltativo
                    --> 117
         guid  :  url per arrivarci
                    --> http://things.gothings.org/?post_type=acf-field&#038;p=118
                          <-- questo funziona, molti altri (gruppo compreso) NO
    post_type  :  acf field/group
                    --> acf_field   acf_field_group

 post_password  :  ?  <-- da controllare

campi probabilmente inutili:
 post_author   post_date  post_date_gmt  post_status  comment_status   ping_status
 to_ping   pinged   post_modified   post_modified_gmt   post_content_filtered
 menu_order   post_mime_type   comment_count


Colonne nella tabella `GoTh01_3_postmeta`:
    meta_id  :  id della riga
    post_id  :  id del post ?   <-- i post sembrano esistere, ma non sono visibili ...
   meta_key  :  custom_post_name    <-- value contiene il valore
                _custom_post_name   <-- value contiene field key
 meta_value  :  value in accordo a meta_key (vedi sopra)

===> quale join table per avere tutto il field?

  search  (meta_key == _field_name && meta_value == field key)
            -->  [post_id] 
  search: (post_id, field_name)
            --> valore del campo


--------------------------------------------------------------------------------
--------------------------------------------------------  ACF - Prova automation
scopo: verificare una azione originata da un acf-field
- definire una pagina in front-end che aggiorna un gruppo di un utente
    --> aggiungere un user-field al gruppo?
- definire una azione visibile in WP
alla fine: --> capire bene il funzionamento per applicarlo alla comunicazione
               tra WP, raspi & utente
refs:
https://www.advancedcustomfields.com/resources/create-a-front-end-form/
  <-- front-end form
https://www.advancedcustomfields.com/resources/user/
  <-- doc: user field
----------------------------  collegamento acf<-> cf7
https://itsmereal.com/frontend-post-submission-edit-advanced-custom-fields/
  <-- edit advanced custom field ACF
  <-- codice per far funzionare bottoni e altro nel front-end
  <--  "  "   "  mostrare cose all'autore del post ... e altro ...
https://penguin-arts.com/how-to-update-acf-fields-with-contact-form-7/
  <-- collegamento tra cf7 & acf

https://wordpress.stackexchange.com/questions/287893/acf-contact-form-7
  <-- php snippet per visualizzare un ACF in un field CF7

--------- vedi piu' avanti:   -- test wundermatics


--------------------------------------------------------------------------------
--------------------------------------------------  Advanced Custom Fields - ACF

- si prova a far lavorare insieme ACF & Shortcodes Ultimate
- si installa ACF
  - NON attivare come network
  - si attiva su www
  - si attiva e si vede anche su altri siti
- definita la categoria 'meter' (simile a quanto fatto con pods)
- seguiamo i tutorials:
    https://www.advancedcustomfields.com/resources/creating-a-field-group/
      <-- abbiamo definito il gruppo 'meter'
      <-- abbiamo definito il gruppo 'thing'
      per estendere il concetto:  https://www.advancedcustomfields.com/resources/field-settings/
    https://www.advancedcustomfields.com/resources/getting-started-with-acf/
      <-- guardiamo in parallelo:  https://kinsta.com/it/blog/advanced-custom-fields/
      - aggiungiamo una pagina su www.*

-----> PROVA attuale
ref.:  https://itsmereal.com/frontend-post-submission-edit-advanced-custom-fields/
         <-- template, form <-- ACF create
         <-- needs PHP programming
esito:
  title:          thing 01
shortcode:        [acf field=”thing_ip_address” post_id=”118″]                                                                                                                                                                         
va alla pagina:   https://things.gothings.org/2020/09/15/thing-01/
====> da verificare come funziona
  - Funziona, ma la logica sembra diversa da quanto ci serve
    ====> RIPROVARE dopo aver visto come funziona il collegamento con CF7

--------- ref. ACF + CF7
https://www.advancedcustomfields.com/resources/code-examples/
https://www.advancedcustomfields.com/resources/displaying-custom-field-values-in-your-theme/
  <-- php interessanti per le operazioni di base

spezzoni di codice utili:
  http://penguin-arts.com/how-to-create-custom-post-type-from-contact-form-7/
  https://penguin-arts.com/how-to-update-acf-fields-with-contact-form-7/

https://wordpress.stackexchange.com/questions/287893/acf-contact-form-7
  <-- php snippet per visualizzare un ACF in un field CF7

https://support.advancedcustomfields.com/forums/topic/get-all-fields-by-group-id/
  <-- php snippet per ottenere tutti i fields di un gruppo


-->
https://studio.bio/making-advanced-custom-fields-acf-work-for-you-and-your-clients/
  <-- esempio INTERESSANTE : da provare!


                                                                                SONO QUI

-----> PROVE non portate in fondo ...

https://www.andreadegiovine.it/risorse/plugin/custom-post-types?doc
  <-- plugin DA PROVARE !

----- definizione di pagine specifiche per i custom fields

----- PROVA iniziale
ref.:
https://moometric.com/integrations/wp/contact-form-7-zapier-webhook-json-post/
  <-- vedi webhooks



ref. per i templates:
  https://www.greengeeks.com/tutorials/article/how-to-create-a-custom-wordpress-page-template/
  https://www.greengeeks.com/tutorials/article/how-to-create-a-template-for-a-single-post-in-wordpress/
  https://www.greengeeks.com/tutorials/article/create-add-custom-page-templates-wordpress/
    <-- beginner's instructions


=== sto cercando tutorials ....
https://torquemag.io/2016/04/use-advanced-custom-fields-depth-tutorial/
  <-- esteso tutorial di base


https://furthermoremarketing.co.uk/using-advanced-custom-fields-to-build-gutenberg-blocks/
  <-- tutorial per costruire blocchi gutenberg con ACF

https://www.advancedcustomfields.com/resource-category/tutorials/

https://www.advancedcustomfields.com/resources/adding-custom-settings-fields/
  <-- aggiungi funzioni alla definizione degli acf
  <-- decidi come validare una nuova proprieta' di un acf

                                                                 Advanced Custom Fields - ACF - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                      Prog Utilities  |

----------------------------------------------------------------  Snippets utili
- per fare debug, anche dentro il plugin:
    error_log(print_r('FP-GoThings delete thing - vediamo il $_POST ', true));
    error_log(print_r($_POST , true));

<div style="display: none;"><?php var_dump( $testvar ); ?></div>

https://wordpress.stackexchange.com/questions/162240/custom-pages-with-plugin
  <-- hints su print_r()
  <-- trucco: print before the content

-----------------------------------------------  Utility for programming & debug

------ plugin:  Error Log Viewer by BestWebSoft
https://wordpress.org/plugins/error-log-viewer/
  <-- efficace & semplice da usare

https://wordpress.org/plugins/debug-this/
  <-- consente il debug su singoli elementi utili

https://wordpress.org/plugins/quick-edit-template-link/
  <-- debug template

--------- contenuti random
https://wordpress.org/plugins/fakerpress/
  <-- testo random
https://wordpress.org/plugins/easy-populate-posts/
  <-- testo random con immagine
  --> post:  http://www.gothings.org/2020/10/02/easy-ipsum/
      bottone per generare il post: immagine + testo random

https://www.advancedcustomfields.com/resources/debug/
  <-- consigli per il debug acf


------------------------------------------------------- siti di immagini & testi
https://wordpress.org/plugins/any-ipsum/
  <-- in prova ...                                                    INSTALLATO

http://placeimg.com/
  <-- downloaded many images - vedi: .../backup1st/icons&images/utility images/placeimg
Per il copyright, vedi dopo STORIA :  *** Copyright ***

https://fakeimg.pl/1024x300/?text=1024x300
  <-- genera una immagine con le dimensioni richieste                         OK

https://picsum.photos/
  -->  
  <-- da digital ocean

https://unsplash.com/
  <-- freely usable photos


https://baconipsum.com/
  <-- pagine casuali su web                   andare sul sito

https://creativecommons.org/
  <-- immagini public & altro                 andare sul sito

https://ipsumimage.appspot.com/
  <-- semplici rettangoli colorati con le dimensioni richieste


https://placekitten.com/attribution.html
  <-- immagini random di gatti
  <-- https://creativecommons.org/licenses/by/2.0/

http://dummy-image-generator.com/
  <--                                                             DA VEDERE ?



 Placehold.it, Unsplash.it and LoremPixel.    <-- siti di immagini random


---- Future Utilities ??

https://wordpress.org/plugins/page-scroll-to-id/
  <-- utile per gestire le ancore anche non-header

https://wordpress.org/plugins/redis-cache/
https://wordpress.org/plugins/wp-redis/
  <-- REDIS object cache
https://wordpress.org/plugins/optimize-redis-post-views/
  <-- REDIS post counter (esempio di programmazione redis?)

https://wordpress.org/plugins/nginx-helper/
  <-- NGINX


------------------------- interessanti/utili da provare
https://perishablepress.com/roll-your-own-whats-my-ip/
  <-- pagina my-IP


-------------------------  hosting & gestione
https://reviewsignal.com/webhosting
  <-- classifica hosting migliori

https://freemius.com/
  <-- gestione delle sottoscrizioni wordpress
  <-- anche altro genere di software ...
  <-- non solo a pagamento ...  (controllare meglio...)


                                                                               Prog Utilities - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                       Page Builders  |
--------------------------------------------------------------------------------
Scopo:  usare plugin per costruire acf update nel frontend

==> Elementor
plugins:
  https://wordpress.org/plugins/elementor/
  https://wordpress.org/plugins/acf-frontend-form-element/

plugins da vedere:
  hint: add new plugin 'elementor' --> guarda l'elenco (piuttosto lungo) ...
  https://wordpress.org/plugins/essential-addons-for-elementor-lite/
    <-- integrazione con cf7 & molto altro
  https://wordpress.org/plugins/header-footer-elementor/
    <-- aggiunge anche blocchi richiamabili con shortcode ...
  https://wordpress.org/plugins/happy-elementor-addons/
    <-- altro cf7 + molto altro

  https://wordpress.org/plugins/master-addons/
    <-- una montagna di oggetti pre-costruiti
    <-- non e' chiaro cosa e' gratis e cosa a pagamento ...

refs:
https://docs.elementor.com/
  <-- docs
https://stevepolito.design/blog/wordpress-acf-front-end-form-tutorial/
  <-- ?

------------- prova: pagina front-end per una COSA
ref.:
  https://wptuts.co.uk/wordpress-frontend-form-submit-with-elementor-acf/
    <-- ?
  https://www.frontendform.com/documentation/
    <-- non e' stato facile: solo video in inglese!
    https://www.frontendform.com/how-to-use-the-new-post-widget/
      <-- usto questo, ha funzionato
    https://www.frontendform.com/how-to-create-a-user-registration-form-in-elementor/
      <-- DA VEDERE ? PROVARE
    https://www.frontendform.com/how-to-use-the-trash-button-widget/
      <-- da vedere ?
- installati entrambi i plugin
- quali temi?:  https://docs.elementor.com/article/78-themes


---------------------------------------------------- TEST: pagina delle tue COSE
-Pagine diverse per:
  - creazione di una COSA personale
      --> Valori iniziali
      --> NewThing                                        <-- pag.: Create Thing
  - vedere le proprie COSE
      --> MyThings
  - aggiornare le proprie COSE
  - Gestire segreti
      --> mostra TUTTI i campi
      --> consenti update SOLO del segreto
      --> MySecrets
            <-- ci si arriva da MyThings



------------------------------------------------------  alternative interessanti
==> Gutemberg
https://wordpress.org/plugins/gutentor/
  <-- plugin per costruire layout con gutenberg
  <-- dice che supporta i custom post type:  VERIFICARE come
https://torquemag.io/2019/12/how-to-create-a-custom-wordpress-website-with-gutenberg-block/
  <-- tutorial interessante
https://www.pootlepress.com/2019/07/how-to-build-a-one-page-website-with-gutenberg-the-new-wordpress-block-editor-from-start-to-finish/
  <-- usa un tot di plugin free
https://wordpress.org/plugins/blockypage/
  <-- un altro aiuto per il layout su gutenberg
<== sembra interessante

==> altre idee da vedere
https://support.advancedcustomfields.com/forums/topic/fronend-form-tutorial/
  <-- link a tutorials per il frontend
https://wedevs.com/docs/wp-user-frontend-pro/acf-integration/
  <-- sembra possa sostituire quello che usiamo ora per extra field registretion/contact


-----------------------------------------------------------  TUTORIALS & UTILITY
https://gutenberghub.com/how-to-display-gutenberg-blocks-in-other-page-builders/
  <--

https://perishablepress.com/roll-your-own-whats-my-ip/
  <-- pagina my-IP



                                                                                Page Builders - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                           WP Things  |
--------------------------------------------------------------------------------
------------------------------------  Si inizia con delle PROVE DI COMUNICAZIONE

- test websocket:    cerca:   .../raspi-apps/raspi/test2      in  WP WebHooks  |
  ====> OK potrebbe funzionare

lato raspi:                                                                     DA FARE
--> lancio dell'indirizzo IP verso WP
  --> curl dovrebbe fare un post on username, raspiid & IP verso WP
  --> WP lo memorizza da qualche parte
--> websocketd lavora come demon e parte all'accensione
  --> espansione del wsmanager per lavorare interattivamente
  --> configurazione JSON dei parametri di comunicazione
  --> comunicazione JSON-IN <-> JSON-OUT
  --> raspi aspetta ordini e restituisce un risultato
  --> aggiungere sicurezza con secretkey & digest nella comunicazione

lato WP:
--> WP-API: vedere come memorizzare i dati:  IP, username & raspiid
  --> tabella custom?
  --> verificare con l'IP del chiamante
  --> eventualmente, accettare se === IP dell'utente nel browser e utente connesso
    --> miglioramento futuro?
--> pagina utente che legge dalla tabella IP[username] & raspiid
--> shortcode per leggere la tabella
--> pagina utente con bottoni per eseguire azioni in stile go-raspi
  --> aggiungere sicurezza con secretkey & digest nella comunicazione


--------------------------------------------------------------------------------
-------------------------------------------------------------- test wundermatics

==> si prosegue dopo la  --  PROVA websocket su wordpress   <-- vedi sotto

- istallato plugin
- attivato su things
    <-- iscritto alla newsletter
    <-- blog: 
    <-- ? : https://www.wundermatics.com/docs-category/wunderautomation/?utm_source=dashboard&utm_medium=welcomecard&utm_campaign=installed_users

- Prova costruzione pagina Utente/COSE
  - la pagina mostra tutte le cose dell'utente (partiamo con una COSA)
  - l'utente usa la pagina per esercitare azioni sulla cosa
  - l'automazione e' usata per trasmettere gli ordini alla raspi

fase 0:
- pagina frontend che mostra i custom field della COSA
- l'utente puo' editare i campi e memorizzare i cambiamenti

fase 1:
- le azioni dell'utente vengono comunicate alla COSA

------------------------------------------------------------------------- fase 0
ref.:
https://itsmereal.com/frontend-post-submission-edit-advanced-custom-fields/
  <-- edit advanced custom field ACF
  <-- codice per far funzionare bottoni e altro nel front-end
  <--  "  "   "  mostrare cose all'autore del post ... e altro ...
https://adaptiveweb.com.au/use-acf-form-to-update-custom-user-fields/
  <-- utile?

                                                                                IN CORSO




--------------------------------------------------------------------------------
--------------------------------------------------  PROVA websocket su wordpress
- si serca un plugin                                                              Strategia SCARTATA
    <-- prova di connessione con websocket
    <-- verificare se il ws puo' stare su localhost
      <-- SI: installare l'esempio ws sulla droplet ...

------ Plugins esaminati:
https://www.wundermatics.com/wunderautomation/
  <-- verificare usabilita' immediata ...                                       DA VEDERE
  <-- webhook sia IN che OUT
  <-- esempio da editare per un nostro plugin?                                    1
  <-- prevede inoltro condizionato etc.

https://www.icegram.com/rainmaker/
  <-- usabilita' immediata: sembra OK                                           DA VEDERE ?

https://wordpress.org/plugins/forms-to-zapier/#developers
  <-- esempio da editare per un nostro plugin?                                  DA VEDERE

https://wordpress.org/plugins/advanced-form-integration/
  <-- si collega a CF7
  <-- verificare usabilita' immediata ...                                       ELIMINATO


----------- customizzazione per things?                                         ELIMINATO
https://www.advancedcustomfields.com/resources/adding-custom-settings-fields/
  <-- aggiungi funzioni alla definizione degli acf
  <-- decidi come validare una nuova proprieta' di un acf
===> vedi la ref in acf 

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------- STUDI VARI
--------------------------------------------------------------------------------  ELIMINATI
memorizzazione delle COSE in wordpress

===============>  Strategie testate & scartate
strategie diverse nelle varie fasi?

------------------------ Str 0
Things key nel plugin Profile Extra Fields
- pro:
  - gestione front & back OK
- con:
  - da fare shortcode per far vedere i fields nei sub-sites
- alternative:
    passare da acf?


------------------------ Str 1
Define Things using Advanced Custom Fileds (ACF)
  --> use the 'user' custom field type
- pro:
  - dovrebbe funzionare dappertutto
- con:
  - non e' immediato ... vanno capite diverse cose ...
  - DA INVESTIGARE
- alternative:
    ??
refs.:
Official doc
https://www.advancedcustomfields.com/resources/create-a-front-end-form/
  <-- front-end form
https://www.advancedcustomfields.com/resources/user/
  <-- doc: user field


https://www.quickcleancode.com/how-to-use-advanced-custom-fields-to-create-user-groups/
  <-- acf user group
https://usersinsights.com/acf-user-profile/
  <-- create user profile
https://noface.co.uk/user-profiles-advanced-custom-fields/
  <-- esempio user profile
https://adaptiveweb.com.au/handle-post-and-get-requests-in-wordpress-using-admin-post-php/
  <-- helper per sopra


https://adaptiveweb.com.au/use-acf-form-to-update-custom-user-fields/
  <-- esempio completo ...   ?
https://adaptiveweb.com.au/handle-post-and-get-requests-in-wordpress-using-admin-post-php/
  <-- aux per sopra



                                                                                    WP Things - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                 FP Plugins & Themes  |

------------------------------------------------------------------------  FUTURO

SPID plugin
  https://it.wordpress.org/plugins/wp-spid-italia/
  https://github.com/WPGov/wp-spid-italia/wiki
  https://www.wpgov.it/
    <-- progetto wpgov - sviluppato da Marco Milesi:  https://www.marcomilesi.com/




-------------------------------------------------------------------  FP GoThings
Plugin:   FP GoThings
  file:   .../gothings/wpm/dockrepo/sysdata/var_www/html/wp-content/plugins/fp-gothings/fp-gothings.php

---- Gestisce la definizione delle COSE in WP
==> ripensare la gestione dei segreti dui utente:
In MVP:
  gestione di TUTTO da admin (passare poi a superadmin?)
  le COSE sono private o pubbliche (no vie di mezzo)
  per l'accesso alle cose private si devono conoscere 'user_secret' e 'user_key'
  le cose pubbliche sono accessibili da tutti gli utenti WP
Dopo MVP:
  gestire i segreti in modo piu' sicuro, al di fuori del profilo
    -->  allargare il plugin:
         - gestione SOLO da superadmin
         - tabella dati di utente:  user --> molte cose
                                    user Things --> pubblico
         - tabella delle COSE:      main user  <-- utente proprietario
                                    friend     <-- codici per l'accesso da altri user
                                               <-- solo per user autenticati su GoThings?

--------- MVP
1.a prova
- ELIMINARE shorcode sul child theme
- Shortcode su fp-gothings SOLO per i dati dell'utente connesso
- pagina di gestione delle proprie cose
    --> template 'connect' thing                                                IN CORSO       DIC 2020

----- ref FRONTEND TABLE :
  wp_list_table example frontend -->  https://wpengineer.com/2426/wp_list_table-a-step-by-step-guide/
    

vedi anche:  DB custom tables  |


------------------------------------------------------------  twentytwenty-child
Child di twentytwenty  (original theme from wordpress.org)

------- Shortcodes definiti

[gothings_userdata field='param']                                In Produzione:  ELIMINARE
- si legggono i parametri del 'current user' di WP
- [gothings_userdata] e' equivalente a: [gothings_userdata field='ID']
- parametri standard ammessi:
    'ID' (default), 'id', 'login', 'nicename', 'display', 'email', 'url'
- valgono anche i parametri definiti dal plugin 'Profile Extra fields'
  --> attualmente definiti:  'user_secret', 'user_key'
- risultati:
    param                result
  'ID' 'id'        $current->ID
  'login'          $current->user_login
  'nicename'       $current->user_nicename
  'display'        $current->display_name
  'email'          $current->user_email
  'url'            $current->url
  no param         $current->ID
  'user_secret'    $current->user_secret
  'user_key'       $current->user_key

NOTA: nel multisite troppo spesso i vari nomi sono uguagliati al $current->user_login
                                                           <-- DA VEDERE perche'



                                                                                    WP Things - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                    DB custom tables  |

==> Si arriva qui dopo aver SCARTATO l'uso di ACF
     vedi:    cambiamo approccio:       in:     acf on frontend  |

==> L'idea e' quella di impiegare tabelle addizionali nel DB di WP per le COSE

==> Si sono fatte molte prove con vari plugin (vedi sotto:  PROVE DB PLUGINS)

RISULTATO:  Si usa un metodo alternativo fai-da-te:
- si parte da fp-table  -->  fp-gothings
- si sostituicono i vari fp-mark & simili con fo-gothings & simili
- si prova ad inserirlo sul sito ...

add new:  funziona
edit:     funziona
delete selected:  funziona
import thing      funziona

--- Problema duplicate keys:
- messo:  mysql unique index su owner_id + thing_id
    <-- sembra funzionare: NON inserisce il doppione
- aggiunta segnalazione su debug.log per i vari casi possibili ...

Problema timestamp:
- il timestamp NON viene aggiornato
    <-- dopo tutti i tentativi una riga ha il last_update, tutte le altre hanno il default
- microtime(6) NON funziona ?
    <-- in qualche prova intermedia aveva funzionato ...
- ora FUNZIONA!
    <== va esclusa la colonna last_update, che scrive il proprio contenuto
        invece di aggiornarlo con il valore corrente ...
- 'annulla azione' (go back) added in new/edit
- aggiunto stripslashes sulla memorizzazione dati sul db in : process_fp_gothings_thing()

                                                                                DA FARE:
Gestione della colonna 'status'
  <-- rimandato a dopo la presentazione del pretotipo (MVP)


----------- Si usa il Participant DB per la parte wordpress
Dalle prove:
  - partecipant database (PDB) svolge molte funzioni utili:
      - elimina la necessita' di iscrivere gli utenti al sito
      - consente di personalizzare le pagine di ogni partecipante
      - puo' rendere indipendenti i dati delle persone da quelli delle cose
      - potrebbe servire da anello di congiunzione con un sito completamente
        dedicato alla gestione delle COSE
  - potenzialmente, il plugin potrebbe eliminare TUTTE le aggiunte:
      extra-field per gli user del sito
        <-- gli extra-field vanno nel PTB
      login/logout





--------------------------------------------------------------------------------
--------------------------------------------------------------- PROVE DB PLUGINS

--> proviamo l'uso del plugin:
      https://wordpress.org/plugins/participants-database/
    doc:
      https://xnau.com/work/wordpress-plugins/participants-database/participants-database-documentation/?utm_source=wporg_visitor&utm_medium=plugin_page_othernotes__tab&utm_campaign=pdb-addons-promo
      https://xnau.com/work/wordpress-plugins/participants-database/

- Ci interessa solo la definizione della tabella e la gestione all'interno di wordpress
    --> ignoriamo (per adesso) le molte funzioni aggiuntive del plugin ..

------ Installazione & setup
- cose da investigare:
  1.- come sono legati i campi ad azioni come sign-in/sign-up e le email?
  2.- si possono fare analogie e ri-nominare icampi per le COSE?
  2.- la suddivisione in gruppi quali effetti puo' avere per le COSE?
  2.- fino a che punto si puo' stravolgere la struttira?

====> Risultato:
  - partecipant database (PDB) svolge molte funzioni utili:
      - elimina la necessita' di iscrivere gli utenti al sito
      - consente di personalizzare le pagine di ogni partecipante
      - puo' rendere indipendenti i dati delle persone da quelli delle cose
      - potrebbe servire da anello di congiunzione con un sito completamente
        dedicato alla gestione delle COSE
  - potenzialmente, il plugin potrebbe eliminare TUTTE le aggiunte:
      extra-field per gli user del sito
        <-- gli extra-field vanno nel PTB
      login/logout


--------------------------------------------------------------------------------
---------------------------------------------------------------------- Strategia
- Le COSE sono i 'partecipant' di PDB
    --> l'unico aggancio a dati (potenzialmente) sensibili e' la email
          <-- SOLO verifica esistenza di una persona (No BOT)
    --> TUTTI gli altri dati in PDB servono a gestire i dati delle COSE
          <-- da studiare i dettagli
    --> definiamo GOTDB come database delle COSE
          <-- GOTB : GO Things DataBase
    --> da studiare il meccanismo di scambio dati tra wp-things e GOTDB
          <-- possiamo partire con due shortcodes custom per In/Out
          <-- primo obiettivo: gestire IP Address & Security Key
- i campi di PDB devono consentire la gestione flessibile diGOTDB




--------------------------------------------------------------------------------
---------------------------------------------------------- Obiettivo prima prova
- caso va tutto bene:
    Sistema che consente di far partire una raspi con invio dati a GOTDB
    Il sistema consente di clicare un link in WP che conduce  alla raspi
- caso cosi' cosi'
    Si riese ad avere in WP informazioni per il debug


--------------------------------------------------------------------------------
------------------------------------------------------- Implementazione - fase 0
- RIPULITURA: si spostano le vecchie pagine sotto la pagina ZZZOLD
    <-- nel caso valga la pena di recuperare qualcosa

- test di funzionamento PDB
    <-- installato
- Definizioni originali:  3 database
participants_database
id 	private_id 	first_name 	last_name 	address 	city 	state 	country 	zip 	phone 	email 	mailing_list 	photo 	website 	interests 	approved 	date_recorded 	date_updated 	last_accessed 
--> dati effettivi

participants_database_fields
id order name title default group form_element options attributes validation validation_message help_text display_column admin_column sortable CSV persistent signup readonly
--> definizioni utili al plugin per gestire i campi

participants_database_groups
id order mode display admin title name description
--> definizione e gestione dei gruppi di campi

Criterio iniziale per la verifica di funzionamento
- lasciare TUTTI i campi originali
    <-- mettere un default iniziale innocuo
    <-- contrassegnare quelli utili al flusso di registrazione & gestione
- aggiungere campi per TUTTO quello che serve alle cose
  - aggiungere dei gruppi ?  <-- verificare che e' possibile                    DA FARE



------------------------- Come organizzare la COSA
Tentiamo una nuova definizione:

Identificazione          --- Distingue una COSA da tutte le altre
  Thing owner ID         Univoco nel sistema
  Thing Owner Name       -- di fantasia --
  Thing Name             Univoco per owner
  Thing ID               Univoco nel sistema
Data                     --- i dati pertinenti a questa COSA
  Thing IP Address       Il primo dato che cerchiamo di scambiare ...
  Thing JSON             ? posto per dati aggiuntivi
Security                 In aggiunta al PIN di PDB
  Thing Key              chiave specifica per la COSA  -->  autentica la cosa che chiama
  Thing Secret           Segreto scelto dall'utente    -->  difende owner dagli altri in WP





https://xnau.com/work/wordpress-plugins/participants-database/
  <-- si parte da qui per TUTTA la doc
Docs interessanti sui vari argomenti:
https://xnau.com/work/wordpress-plugins/participants-database/participants-database-documentation/the-manage-database-fields-page/
  <-- how-to per i campi
https://xnau.com/work/wordpress-plugins/participants-database/participants-database-documentation/the-manage-database-fields-page/#field-group-tabs
  <-- how-to per i gruppi (e' alla fine dei campi)
https://xnau.com/adding-fields-to-the-participants-database-contact-form/
  <-- modifica del contact form
https://xnau.com/work/wordpress-plugins/participants-database/using-the-participants-database-plugin/the-signup-form/
  <-- setup del form di sign-up
https://xnau.com/work/wordpress-plugins/participants-database/using-the-participants-database-plugin/
  <-- elenco di cose interessanti ...
https://xnau.com/creating-multiple-page-forms-in-participants-database/
  <-- processo di sign-up a piu' passi 'multiform'
https://xnau.com/using-the-pdb_template-class-in-your-custom-templates/
  <-- uso di custom template




--------------------------------------------------------------------------------
---------------------------------------------------------------- WP Data Manager
DA VERIFICARE:
--- Plugin per aggiungere le COSE al WP database (wpda)
https://wpdataaccess.com/
  <--sembra consentire la creazione di tabelle nel DB (per le COSE)
  <-- sembra avere la possibilita' di aggiungere codice PHP & shortcode
https://wpdataaccess.com/docs/documentation/code-manager/manage-code/
  <-- doc

------ Note
- wpda puo' usare il WP db locale o altri database, anche remoti
    <-- partiamo sul database di wp, poi si studieranno eventuali espansioni ...

Data Designer
- inseriamo i dati delle COSE (vedi sopra 

  gothing_id             Thing ID               Univoco nel sistema
  gothing_owwner_id      Thing owner ID         Univoco nel sistema
  gothing_owner_name     Nome utente            dovrebbe essere un nome di fantasia
  gothing_name           Univoco per owner
  gothing_ip_addr        Thing IP Address       Il primo dato che cerchiamo di scambiare ...
  gothing_json           Thing JSON             ? posto per dati aggiuntivi
  gothing_key            Thing Key              chiave specifica per la COSA  -->  autentica la cosa che chiama
  gothing_secret         Thing Secret           Segreto scelto dall'utente    -->  difende owner dagli altri in WP



---------------------------------------------------------------- NOTE Importanti
LOGIN
--> il login su WP non e' possibile con PDB                                     TROVARE ALTERNATIVA
--> mettere la verifica email nel signup form                                   DA FARE
--> processo


--------------------------------------------------------------- A futura MEMORIA
Metodo alternativo con wp data tables:
https://wordpress.org/plugins/wpdatatables/
  <-- da verificare il funzionamento della creazione di 'simple tables'
https://wpdatatables.com/documentation/creating-new-wpdatatables-with-table-constructor/creating-a-simple-table-with-wpdatatables/
  <-- tutorial

Metodo alternativo con wp_list_tables:
https://emarket.pe/it/blog/gestire-un-database-custom-in-wordpress-con-wp_list_table/
  <-- tutorial per definire db tables con le funzioni del core WP
https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwis26m0hv3sAhW-F1kFHcJcB4wQFjAAegQIBBAC&url=https%3A%2F%2Fdeveloper.wordpress.org%2Freference%2Fclasses%2Fwp_list_table%2F&usg=AOvVaw2E1T9CVK4cD1Zr8iqU_hdQ
  <-- doc ufficiale
https://www.sitepoint.com/using-wp_list_table-to-create-wordpress-admin-tables/
  <-- altro tutorial
https://www.davidangulo.xyz/how-to-create-crud-operations-plugin-in-wordpress/
  <-- tutorial: CRUD


                                                                             DB custom tables - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                          shortcodes  |

*** DA FARE / AGGIUSTARE

--------------------------------------------------------------------------------
------------------------------------------  shortcode: display user display name

- utility per mostrare il nome utente nel front-end
https://www.webhostinghero.com/show-username-in-wordpress-sidebar/
  <-- shortcode to display current username

====> usato nella sezione:  User management  |


--------------------------------------------------------------------------------
                                                            Shortcode GET DB ROW

Appare consigliabile usare tabelle specifiche per le COSE:
- Ci si puo' svincolare da modifiche & ridefinizioni di wordpress db
- e' possibile sviluppare plugin diversi per scopi e/o siti diversi
--> serve programmare l'accesso al db

----- Lettura da una tabella
- la facciamo con uno shortcode per poter scrivere nel front-end
refs:
https://developer.wordpress.org/reference/functions/shortcode_atts/
  <-- definizione degli argomenti dello shortcode

https://developer.wordpress.org/reference/classes/wpdb/prepare/
https://www.wpbeginner.com/wp-tutorials/how-to-add-a-shortcode-in-wordpress/
https://wordpress.stackexchange.com/questions/330498/wordpress-shortcode-show-database-row
  <-- shortcode che LEGGE una riga del DB
  <-- tabella prefissata
  <-- prova eseguita OK!

----- Lettura tabelle 'network'
- user & altre tabelle globali sono raggiunte usando:  $wpdb->base_prefix

https://codex.wordpress.org/Creating_Tables_with_Plugins
  <-- regole per le tabelle del DB
  <-- esempi di creazione & init
- va aggiustato il prefisso:  $wpdb->base_prefix

======> FUNZIONA
        la prova 4 fornisce il valore del campo richiesto
        fatto un minimo di test, direi che e' accettabile


------------------------------------------- ref usati nel primo sviluppo
  
https://www.smashingmagazine.com/2012/05/wordpress-shortcodes-complete-guide/
  <-- tutorials sugli shortcode

https://codex.wordpress.org/Shortcode_API
  <-- API

https://stackoverflow.com/questions/55718614/shortcode-attributes-that-query-the-database
  <-- shorcode che LEGGE una riga del DB

https://generatewp.com/snippet/bbpr7y8/
  <-- esempio shortcode dbquery

https://portalintegrators.com/wordpress-shortcode-with-database/
  <-- esempio che SCRIVE nel DB

https://stackoverflow.com/questions/42177033/retrieve-data-from-database-using-shortcode
  <-- esempio che legge (non chiaro, usa la funzione shortcode_atts)



                                                                                   shortcodes - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                  CF7 - Contact Form  |


Contact Form 7 permette di usare il contact form per cercare la COSA nel DB

Obiettivi:
- Realizzare la pagina FIND-MY-RASPI
  - permettere a chiunque di trovare l'indirizzo locale della sua raspi
      <-- anche SENZA fare nient'altro
      <-- nel caso che utilizi GOTHINGS
  - permettere una facile iscrizione al sito
                                                               <-- da VERIFICARE
  - aggiornare i dati di utente
      <-- il profilo e' aggiornabile normalmente
      <-- per le cose e' da decidere ...                                        DA FARE

----------------------------------------------------------------------- fase 0 -
- verifica di fattibilita'
    <-- e' possibile interagire con i dati di utente e quelli della raspi
    <-- e' servito uno shortcode apposito


----------------------------------------------------------------------- fase 1 -
- prova di uso del plugin 'profile extra fields'
refs:
https://wordpress.org/plugins/profile-extra-fields/
  <-- sembra vicino a quello che serve ...
https://docs.google.com/document/d/1dS8WUgdJOa4O5Ft48oe3z4iGTyN0cXC-SBBDoeHbChk
  <-- guida
<-- vedi anche i REF cf7 sotto
https://support.bestwebsoft.com/hc/en-us
  <-- SUPPORTO - user: gloves    pwd: pippolino.20

--- Strategia
Verificato che il passaggio dati avviene con sufficiente affidabilita',
ovvero i dati vengono sempre conservati nel profilo dell'utente

<-- ora il plugin e' abilitato sul network
- funziona OK su www (main blog)
- NON funziona la lettura del campo singolo sui blog secondari
- realizzato uno shortcode per la lettura dei campi singli
- ora possiamo lavorare su un qualunque blog del sito


-------------------------------------- errore extra fields
- errore segnalato al supporto del plugin, sia all'autore che su wordpress.org
    --> the prflxtrflds_field shortcode functions on main site only
    <-- segalatore: gloves2001
    <-- vedere le email scambiate

PS- access to test page:
https://things.gothings.org/users/things-access/
user:  user10
user login pwd: testuser10pwd
user email: testuser10@gothings.org
----> NON si riesce a postare senza una licenza,
      posto il quesito sopra su wordpress.org
-------------------------------------------------------------------
  ref. https://carlofontanos.com/adding-extra-user-profile-fields-in-wordpress-admin/
                                            <-- associazione user --> # di ruolo
https://contactform7.com/setting-default-values-to-the-logged-in-user/
  <-- riferimenti dell'utente nella form
  <-- sembrano funzionare sempre
https://www.wpguru.com.au/generate-dynamic-tag-contact-form-7/
  <-- dynamic tags


----------------------------------------------------------------------- Fase 2 -
- prova di funzionamento della strategia prevista
--- Strategia
- si usa il form cf7 per far immettere dall'utente attuale un segreto
- si esegue un codice nostro PRIMA dell'invio della mail
--> l'utente vedra' il risultato dell'operazione nella pagina eseguita
    dopo l'invio, con un link html alla raspi sulla LAN
--> eventuale email di verifica all'utente                           <-- DA FARE in una fase successiva
- il plugin "Profile Extra Fields" memorizza i dati in tabelle globali di tipo:
    GoTh01_prflxtrflds_fields_id          field_id field_name required show_default show_always description field_type_id
                                            <-- associazione con la definizione del campo
    GoTh01_prflxtrflds_fields_meta        meta_id  field_id  show_in  value 
                                            <-- visibilita?
    GoTh01_prflxtrflds_fields_values      value_id  field_id  value_name  order
                                            <-- associazione con il tipo di valore del campo
    GoTh01_prflxtrflds_roles_and_fields   role_id  field_id  field_order  editable  visible
                                            <-- visibilita & ruoli
    GoTh01_prflxtrflds_roles_id           role_id  role  role_name
                                            <-- associazione numero --> ruolo
    GoTh01_prflxtrflds_user_field_data    id  field_id  user_id  user_value
                                            <-- tabella dei valori per fields e user
    GoTh01_prflxtrflds_user_roles         user_id  role_id

- la pagina del find-my-raspi puo' semplicemente chiedere il segreto e farne
  l'acquisizione SENZA il contributo del plugin
- sembra davvero la 'separation of concern' maggiore possibile:
    --> extra fields sistema l'acquisizione del valore sia in front- che in back-end
    --> la verifica viene fatta da PHP sul lato server
Refs.:
https://wordpress.org/plugins/wpcf7-redirect/
  <-- redirect after submit
https://stackoverflow.com/questions/56533702/cf7-hiding-wpcf7-mail-sent-ok-after-5-seconds
  <-- tecnica interessante per il 'dopo submit'
https://www.mootpoint.org/blog/wordpress-contact-form-7-user-registration
  <-- esempio di programmazione 'wpcf7_before_send_mail'

------------------  login & registration
SPOSTATO nella sezione:   User management  |
          ( vedi sotto)

------------------ gestione things Secret
                                                                                IN CORSO
    <-- prova 1: verifica spedizione email con i dati

                                                                                SONO QUI
===> fase superata da user management?
===> fare NUOVA SEZIONE per 'custom page che mostra le COSE dell'utente!!!

--------------------------------------------------------------------------------
=======> dove si e' provato a fare la gestione del segreto?

https://wordpress.org/plugins/wp-user-frontend/



--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
------------------- Visualizzazione dei dati delle cose
Metodo 1: mettere la key in una variabile di sessione
  <-- siamo sicuri che non si vede ???
  <-- vediamo tramite dev tools di firefox
  <-- mem in un cookie?
  <-- mem nel browser?


Metodo 2: usare javascript nel browser                  <-- vedi piu' avanti ...
  <-- il WP mette nel browser il raspi-IP e la key
      <-- la pagina si connette localmente e lavora in https sulla LAN


--------------------------------------------------------------------------------
======> Fasi future (idee) ...

- opzione per registrare l'utente

- dopo n email: avvisare l'utente

- non mandare l'email (se gia' mandata ...)



--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
======> Fasi ancora da vedere ...

------------------------------------------------------------------------- fase a
- aggiungere la registrazione dell'utente
  refs.:
    https://www.mootpoint.org/blog/wordpress-contact-form-7-user-registration/
      <-- esempio di programmazione per la verifica dei dati
    https://wordpress.org/plugins/frontend-registration-contact-form-7/
      <-- aggiunge la registrazione dell'utente


------------------------------------------------------------------------- fase b
- usare il 'partecipant DB'
  --> DB indipendente per le COSE
  --> interfacce front & back con il WP
  --> accesso lato API personalizzabile
- verificare funzionamento & stabilita'
https://wordpress.org/plugins/participants-database/
  <-- plugin utile                                                              <-- DA VERIFICARE
https://xnau.com/work/wordpress-plugins/participants-database/gdpr-compliance-and-participants-database/
  <-- considerazioni GDPR


------------------------------------------------------------------------- fase c
- usare un 'member' plugin
https://usersinsights.com/wordpress-user-profile-front-end/
  <-- verificare la leggibilita' dei dati di utente ...                         <-- DA VERIFICARE


------------------------------------------------------------------------- fase d
- usare un ninja tables
https://wordpress.org/plugins/ninja-tables/
  <-- sembra avere molte/quasi tutte le capability che servono ...              <-- DA VERIFICARE
https://wpmanageninja.com/docs/ninja-tables/configuring-tables/frontend-editing/
  <-- doc per rendere 'private to user' i dati immessi nel front-end

- verificare funzionamento & stabilita':
  --> DB indipendente per le COSE       ?
  --> interfacce front & back con il WP ?
  --> accesso lato API personalizzabile ?


------------------------------------------------------------------------- fase f  NO
- usare 'metaBOX'                                      a PAGAMENTO - ed e' caro!
https://wordpress.org/plugins/meta-box/
  <-- anche questo sembra usabile                     - complicato da capire ...
https://docs.metabox.io/extensions/mb-user-meta/
  <-- estensione per metabox


--------------------------------------------------------------------------------
----------------------------------------------------------------------- REFS 
https://www.youcanwp.com/contact-form-7-tutorial-from-beginner-to-pro/
  <-- tutorial completo, interessante

https://contactform7.com/editing-form-template/
https://themeisle.com/blog/how-to-set-up-contact-form-7/
  <--Consigli utili per riempire la form

-------- Ref. usati per lo sviluppo:
https://contactform7.com/docs/
  <-- DOC base originale
https://sevenspark.com/docs/contact-form-7-dynamic-text-extension/quick-start
  <-- gestione dei campi dinamici

https://www.elegantthemes.com/blog/tips-tricks/how-to-customize-the-style-of-contact-form-7-to-match-your-website
  <-- aggiustamenti sullo stile del form

-------- Ref. per gli sviluppi:
https://www.howtosolutions.net/2020/05/wordpress-contact-form-7-fixing-shortcode-not-working-template-mail-body/
  <-- per mettere shortcodes nella form cf7
https://contactform7.com/getting-default-values-from-shortcode-attributes/
  <-- shortcode & attributi ...  NON E' CHIARO!

https://blog.cf7skins.com/save-contact-form-7-wordpress-database/
  <-- interessante
https://wordpress.org/plugins/contact-form-7-skins/
  <-- plugin per migliorare l'aspetto ...
https://blog.cf7skins.com/use-a-suitable-from-address-in-contact-form-7/
  <-- consigli utili

https://contactform7.com/2018/04/16/how-to-make-privacy-friendly-contact-forms/
  <-- consigli GDPR

https://wordpress.org/plugins/contact-form-7-honeypot/
  <-- honeypot anti-spam per cf7

https://sos-wp.it/come-modificare-e-personalizzare-il-layout-di-contact-form-7/
  <-- ??

https://wordpress.org/plugins/cf7-grid-layout/
  <-- sembra avere un tag cf7 per aggiungere i custom fields       DA CONFERMARE

https://carlofontanos.com/adding-extra-user-profile-fields-in-wordpress-admin/
  <-- esempio di aggiunta campi al profilo (campi standard)
  <-- potenzialmente sostituisce il plugin 'profile extra fields'

----------------------------  collegamento con acf
https://itsmereal.com/frontend-post-submission-edit-advanced-custom-fields/
  <-- edit advanced custom field ACF
  <-- codice per far funzionare bottoni e altro nel front-end
  <--  "  "   "  mostrare cose all'autore del post ... e altro ...
https://penguin-arts.com/how-to-update-acf-fields-with-contact-form-7/
  <-- collegamento tra cf7 & acf

https://wordpress.stackexchange.com/questions/287893/acf-contact-form-7
  <-- php snippet per visualizzare un ACF in un field CF7


                                                                           CF7 - Contact Form - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            Gothings  |
                                                                                      Users & Things  |

------------------------------------------------------ users & things management
                                                                                IN CORSO   DIC 2020

------------------------------------------------------------------- user level 0
- registrazione utenti BASE di wordpress
    <-- probabilmente insoddisfacente, ma vedremo poi ...
  - opzione 'register' quasi invisibile, rimanda a:
      https://www.gothings.org/wp-signup.php
    - l'utente inserisce un proprio username & la email
        <-- trattamento duplicati:  wp lo tratta di default ...
    -... riceve una email da clickare
    - ed e' inserito
- si aggiungono extra fields con il plugin gia' testato

@@@@ IN CORSO

                                                                                IN CORSO   DIC 2020
- proposta di gestione usando solo user-logged-in & FP-GoThings:

  - nel profilo utente si registrano apposite chiavi di identificazione:
      user_secret       luuuuuunga password per le cose ...
                          <-- sicurezza lato network, da COSA a WP
                          <-- la gestione del segreto e' sul lato WP
      user_key          user password  (meglio se luuuuuunga)
                          <-- sicurezza lato network, da WP a COSA
                          <-- mem in un file privato sulla raspi
      miglioramento     mandare su rete MD5 di timestamp & user_*               DA FARE    FUTURO
                          <-- comunicazione JSON
  - la comunicazione WP <--> Raspi avviene in JSON
  - le pagine delle COSE funzionano solo se le chiavi dell'utente
    corrispondono a quelle della COSA

@@===> si ELIMINANO tutti i plugin non necessari (si lasciano cf7 & acf)
       <== ripulitura eseguita: Aggiustato il Ripulito il db delle COSE

------------
Stati possibili per le COSE:                                       RICONSIDERARE
  PENDING                valori memorizzati, senza verifiche
  USVER                  verificato dall'utente sul lato WP
  THVER                  verificato lato THING
  VERIFIED               verificato su entrampi i8 lati: WP & THING


------------ Comportamento lato WP
Si suppone che la COSA mandi i suoi parametri 'in the wild'
  <-- potenzialmente i dati potrebbero divenire pubblici
  <-- lo scopo e' quello di effettuare un handshake iniziale
Cose note lato COSA:
  - un proprio ID & Name
  - ID & Name del padrone
  - una propria 'key', considerata segreta
  - il proprio IP locale
  NOTA: ID, Name & key sono read-only sul lato COSA
Cose note lato USER:
  - un proprio ID & Name per le COSE
  - il proprio segreto per comunicare con le COSE
  - la key che le cose useranno per comunicare con lui
  NOTA: ID, Name & key sono read-only sul lato USER


Scenario 1:   Registrare di una COSA
--> ci vuole una pagina in stile 'admin'
--> e' una versione modificata della 'modifica riga' gia' presente nel plugin
      <-- questa funziona nel front-end

Pagina front-end-admin
  - presentiamo all'utente tutte le cose che lo dichiarano 'owner_id'
  - USER non puo' alterare ID, Name & key della COSA
  - USER puo' sovrascrivere IP Address , Value, JSON, Secret, Status & Description
  NOTA: JSON per ora non e' usato
Facciamo tutto integrandolo in una pagina con un form CF7



                               DA SPOSTARE nella sezione: FP Plugins & Themes  |
--------------------------------------------------------------------------------
------------------------------------------------------ plugin 'gothings-connect'
Scopo: implementare le funzioni per la gestione del colloquio COSA <-> USER
         <-- gestione dei dati di un form cf7

refs:
1.
  http://hookr.io/plugins/contact-form-7/4.7/all/#index=a
    <-- cf7 docs
2.
  http://jafty.com/blog/tag/wpcf7_before_send_mail-hook/
    <-- tutorial (non troppo comprensibile)
    <-- buono il suggerimento 'get_instance()'
3.
  https://stackoverflow.com/questions/36774134/wordpress-invalidate-cf7-after-api-call/49243202
    <-- make ADI call before going on
4.
  https://wordpress.stackexchange.com/questions/110805/how-to-execute-a-server-side-script-when-contact-form-7-is-submitted
    <-- forse utile per stop email & redirection
5.
  https://stackoverflow.com/questions/29926252/how-to-hook-into-contact-form-7-before-send
    <-- alcuni esempi
    <-- non e' chiaro se lo skip mail funziona davvero
        <-- sembra meglio usare 'additional settings' in admin
6.
  https://stackoverflow.com/questions/25817442/change-cf7-form-values-dynamically
    <-- per cambiare i dati nel filtro ...
7.
  https://stackoverflow.com/questions/32784063/how-to-change-data-before-sending-in-contact-form-7
    <-- per cambiare un dato nel filtro ...
8.
  https://stackoverflow.com/questions/30533216/contact-form-7-use-hook-created-using-wpcf7-before-send-mail-for-only-one-conta
    <-- per cambiare un dato nel filtro ...
    

-----
ref utili:  6. 7. 8.

version 0.8 :
  ora siamo in grado di leggere i dati postati dall'utente e cambiarli

- tentiamo di gestire la form con il form_id

--------------- user value validation
9.
  https://contactform7.com/2015/03/28/custom-validation/
  https://stackoverflow.com/questions/52967932/custom-validation-on-text-field-contact-form-7
    <-- un filtro per la validazione di un text field



                                                                                SONO QUI      DIC 2020

-------



-----------------
?  https://www.smashingmagazine.com/2016/03/making-a-wordpress-plugin-that-uses-service-apis/
     <-- per arricchire i plugins GoThings

-------------------------------------------------------------------------------- IN CORSO : FINE

sotto: ripreso da:   DB custom tables  |
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ INIZIO

- Ci interessa solo la definizione della tabella e la gestione all'interno di wordpress
    --> ignoriamo (per adesso) le molte funzioni aggiuntive del plugin ..

------ Installazione & setup
- cose da investigare:
  1.- come sono legati i campi ad azioni come sign-in/sign-up e le email?
  2.- si possono fare analogie e ri-nominare icampi per le COSE?
  2.- la suddivisione in gruppi quali effetti puo' avere per le COSE?
  2.- fino a che punto si puo' stravolgere la struttira?

====> Risultato:
  - partecipant database (PDB) svolge molte funzioni utili:
      - elimina la necessita' di iscrivere gli utenti al sito
      - consente di personalizzare le pagine di ogni partecipante
      - puo' rendere indipendenti i dati delle persone da quelli delle cose
      - potrebbe servire da anello di congiunzione con un sito completamente
        dedicato alla gestione delle COSE
  - potenzialmente, il plugin potrebbe eliminare TUTTE le aggiunte:
      extra-field per gli user del sito
        <-- gli extra-field vanno nel PTB
      login/logout


--------------------------------------------------------------------------------
---------------------------------------------------------------------- Strategia
- Le COSE sono i 'partecipant' di PDB
    --> l'unico aggancio a dati (potenzialmente) sensibili e' la email
          <-- SOLO verifica esistenza di una persona (No BOT)
    --> TUTTI gli altri dati in PDB servono a gestire i dati delle COSE
          <-- da studiare i dettagli
    --> definiamo GOTDB come database delle COSE
          <-- GOTB : GO Things DataBase
    --> da studiare il meccanismo di scambio dati tra wp-things e GOTDB
          <-- possiamo partire con due shortcodes custom per In/Out
          <-- primo obiettivo: gestire IP Address & Security Key
- i campi di PDB devono consentire la gestione flessibile diGOTDB




--------------------------------------------------------------------------------
---------------------------------------------------------- Obiettivo prima prova
- caso va tutto bene:
    Sistema che consente di far partire una raspi con invio dati a GOTDB
    Il sistema consente di clicare un link in WP che conduce  alla raspi
- caso cosi' cosi'
    Si riese ad avere in WP informazioni per il debug


--------------------------------------------------------------------------------
------------------------------------------------------- Implementazione - fase 0
- RIPULITURA: si spostano le vecchie pagine sotto la pagina ZZZOLD
    <-- nel caso valga la pena di recuperare qualcosa

- test di funzionamento PDB
    <-- installato
- Definizioni originali:  3 database
participants_database
id 	private_id 	first_name 	last_name 	address 	city 	state 	country 	zip 	phone 	email 	mailing_list 	photo 	website 	interests 	approved 	date_recorded 	date_updated 	last_accessed 
--> dati effettivi

participants_database_fields
id order name title default group form_element options attributes validation validation_message help_text display_column admin_column sortable CSV persistent signup readonly
--> definizioni utili al plugin per gestire i campi

participants_database_groups
id order mode display admin title name description
--> definizione e gestione dei gruppi di campi

Criterio iniziale per la verifica di funzionamento
- lasciare TUTTI i campi originali
    <-- mettere un default iniziale innocuo
    <-- contrassegnare quelli utili al flusso di registrazione & gestione
- aggiungere campi per TUTTO quello che serve alle cose
  - aggiungere dei gruppi ?  <-- verificare che e' possibile                    DA FARE



------------------------- Come organizzare la COSA
Tentiamo una nuova definizione:

Identificazione          --- Distingue una COSA da tutte le altre
  Thing owner ID         Univoco nel sistema
  Thing Owner Name       -- di fantasia --
  Thing Name             Univoco per owner
  Thing ID               Univoco nel sistema
Data                     --- i dati pertinenti a questa COSA
  Thing IP Address       Il primo dato che cerchiamo di scambiare ...
  Thing JSON             ? posto per dati aggiuntivi
Security                 In aggiunta al PIN di PDB
  Thing Key              chiave specifica per la COSA  -->  autentica la cosa che chiama
  Thing Secret           Segreto scelto dall'utente    -->  difende owner dagli altri in WP


https://xnau.com/work/wordpress-plugins/participants-database/
  <-- si parte da qui per TUTTA la doc
Docs interessanti sui vari argomenti:
https://xnau.com/work/wordpress-plugins/participants-database/participants-database-documentation/the-manage-database-fields-page/
  <-- how-to per i campi
https://xnau.com/work/wordpress-plugins/participants-database/participants-database-documentation/the-manage-database-fields-page/#field-group-tabs
  <-- how-to per i gruppi (e' alla fine dei campi)
https://xnau.com/adding-fields-to-the-participants-database-contact-form/
  <-- modifica del contact form
https://xnau.com/work/wordpress-plugins/participants-database/using-the-participants-database-plugin/the-signup-form/
  <-- setup del form di sign-up
https://xnau.com/work/wordpress-plugins/participants-database/using-the-participants-database-plugin/
  <-- elenco di cose interessanti ...
https://xnau.com/creating-multiple-page-forms-in-participants-database/
  <-- processo di sign-up a piu' passi 'multiform'
https://xnau.com/using-the-pdb_template-class-in-your-custom-templates/
  <-- uso di custom template



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ FINE
sopra: ripreso da:   DB custom tables  |


                                                                               Users & Things - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                     User management  |

vedi sotto:    -- login & registration

--------------------------------------------------------------------------------
--------------------------------------  personalizzazione della DASHBOARD utente
refs:
https://wordpress.org/plugins/frontend-dashboard/
https://buffercode.com/post/how-to-install-frontend-dashboard-templates
  <-- plugin per spostare la dashboard utente nel fron-end

https://medium.com/@vinoth06/top-15-features-of-frontend-dashboard-wordpress-plugin-ce90f2fe5ce8
  <-- tutorial
- caricati anche plugin accessori per template ed altro ...
https://wordpress.org/plugins/frontend-dashboard-templates/
https://buffercode.com/post/how-to-customise-frontend-dashboard-templates
  <-- help per templates
https://buffercode.com/post/how-to-show-custom-post-field-in-frontend-post
  <-- help per custom fields
https://demo.frontenddashboard.com/
  <-- non tanto utile (video)

====> grande CONFUSIONE !!
        <-- si sovrappone a theme-my-login
        <-- si sovrappone anche a profile-extra-fields
          <== servira' un lavoro di ricucitura                                  DA FARE

VERIFICARE se si puo' sostituire theme-my-login


------- Alternative:
https://wordpress.org/plugins/ultimate-dashboard/
  <-- sembra buono, ma per il multisite ci vuole il PRO                         <-- VERIFICARE
https://wordpress.org/plugins/frontend-dashboard/#%0Ahow%20to%20create%20a%20page%20for%20user%20role%0A
  <-- gia' INSTALLATO, non e' chiaro se puo' sostituire theme-my-login
  <-- da verificare il discorso 'custom fields'

   


--------------------------------------------------------------------------------
------------------------------------------  shortcode: display user display name

- utility per mostrare il nome utente nel front-end
https://www.webhostinghero.com/show-username-in-wordpress-sidebar/
  <-- shortcode to display current username




--------------------------------------------------------------------------------
----------------------------------------------------------- login & registration
Scopo:
  gestire la registrazione utente nel multisite


-----------------------------------------------------------------  PROVA con cf7
- capability di partenza
  - cf7 consente di scrivere form qualunque, compresi login & registration
      <-- il problema consiste nel fare le azioni WP corrispondenti:
            come registro l'utente quando ho i suoi dati?
----- plugin che potrebbero risolvere:
https://wordpress.org/plugins/frontend-registration-contact-form-7/
  <-- DA PROVARE ...
https://wordpress.org/plugins/userswp/
  <-- DA PROVARE ...  <-- IN PROVA sotto
https://wordpress.org/plugins/user-registration/
  <-- DA PROVARE ...  ... ha diverse funzioni aggiuntive
===========>
da vedere anche:
https://wordpress.org/plugins/user-role-editor/
  <-- funziona sul multisite, utile per funzioni future

==> cosa sono le pagine AMP ?



------------------------------------------------------------------ PROVA userswp
https://wordpress.org/plugins/userswp/
  <-- DA PROVARE ...
  <-- da attivare sul network, vedere:
        https://userswp.io/support/topic/deleted-users-still-in-database/
        <-- attivare sui sub-sites se si vorra' differenziare tra i sub-siti ...

====> modifica il css a livello html  --> caratteri GROSSI su tutto il sito !!!

====> PROVA INTERROTTA          plugin DISATTIVATO

                                                                                IN CORSO

---------------------------------------------------------------- PROVA fer + cf7
https://wordpress.org/plugins/frontend-registration-contact-form-7/

- per vedere se la email esiste in WP:
    https://stackoverflow.com/questions/29504337/how-do-i-check-if-email-submitted-via-contact-form-7-exists-in-my-database
      <-- funzione di verifica esistenza email

  https://stackoverflow.com/questions/7412261/can-i-have-conditional-fields-using-contact-form-7-plugin-in-wordpress
    <-- verifiche per i conditional fields


- da vedere:
  https://premium.wpmudev.org/blog/customizing-contact-form-7-plugins/
    <-- add styles to cf7


---------------------------------------------------------------------- recaptcha
registrato con frapir
si usa:  https://developers.google.com/recaptcha/intro
sito *.gothings.org:
Chiave :     6LdgEO0ZAAAAAPP2Saat--YlKwP4UuYc3smJDRUX
Segreto :    6LdgEO0ZAAAAAM6cMEfIZyaJZ8gHbJIXHQvaZamK



----------------------------------------------------------  PROVA theme-my-login

https://wordpress.org/plugins/theme-my-login/#%0Awhere%20can%20i%20find%20documentation%3F%0A
  <-- plugin per il login
  <-- usato anche se ha inconvenienti (vedi sotto)

https://docs.thememylogin.com/
  <-- installato plugin per la pagina di login
https://www.wpbeginner.com/plugins/how-to-create-custom-login-page-for-wordpress/
  <-- tutorial
- non e' stato banale e ci sono alcuni inconvenienti
  - il plugin esegue redirect strani e interferisce con i menu
  - un rimedio e' usare custom link nei menu mandando tutto su www
- il file .../admin/settings.php e' stato aggiustato come indicato in:
    https://wordpress.org/support/topic/multisite-error-options-page-not-found/
====> vanno aggiustati i menu di TUTTI i siti                            troppo!
- la definizione dei redirect e' quella default
====> i link 'lost password' & 'reset password' vanno testati            troppo!

----> registration
--> si sono usati i campi condizionati
      <--  hanno funzionato
--> da verificare se servono per il sito things
- L'utente e' unico, ma deve registrarsi sugli altri siti:
    things    serve per le COSE
    cloud     serve per i servizi cloud
    ?         -- la cosa va studiata --
  - per ora si fa a mano
  - verificare se la cosa e' semplificata nel form (dati default?)
    --> login su things
====> registrazione automatica su n siti dopo www                               DA FARE
  --> vanno modificati i menu di login

--------------------------------------------------------------------------------
------------------ gestione things Secret
- pagina di richiesta del segreto                                               IN CORSO
    <-- prova 1: verifica spedizione email con i dati

- passo 2:  usa il custom field per wundermatics - sezione:   WP Things  |
    ==> vai a:  -- test wundermatics
                <-- sezione dedicata alle pagine di automazione
                                                                                SONO QUI


------------------------
Eventualmente testare anche:
    https://wordpress.org/plugins/wp-user-frontend/


                                                                              User management - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                wordpress javascript  |

---------- Strategia
- riusciamo a mostrare sul frontend (un form?) dei valori legati all'utente:
    secret field
    IP address
    link alla raspi
- il link ci permette di accedere alla raspi
----------- sviluppo
- fase di disegno:
  - costruiamo una pagina con i custom field di cui sopra
  - carichiamo un js semplice (un alert?)
- fase di test:
  - indaghiamo come poter costruire il link con il js
  - facciamo prove di verifica
- fase di realizzazione:
  - costruiamo una pagina che consenta di accedere alla raspi da terminale



------------------  consigli utili trovati

https://developer.wordpress.org/themes/advanced-topics/javascript-best-practices/
  <-- best practices da usare con js

https://wordpress.stackexchange.com/questions/124354/why-wp-register-style-is-important-while-im-using-a-complete-wp-enqueue-style/124381#124381
  <-- tecnica anti-duplicazione (rispetto al theme?)

https://qodeinteractive.com/magazine/add-custom-javascript-to-wordpress/
  <-- per caricare in una pagina specifica (con il template ?)

https://codex.wordpress.org/Using_Javascript
  <-- js nel template file




--------------  Ancora da guardare bene
https://code.tutsplus.com/articles/the-ins-and-outs-of-the-enqueue-script-for-wordpress-themes-and-plugins--wp-22509
  <-- NON E' CHIARO quando fare questo register/deregister ...

https://www.wpbeginner.com/wp-tutorials/how-to-properly-add-javascripts-and-styles-in-wordpress/
  <-- esempi



======================================================================= seguito  DA RIVEDERE

============================= Vedi se JS puo' funzionare !!!
https://www.godaddy.com/garage/3-ways-to-insert-javascript-into-wordpress-pages-or-posts/
  <-- tips interessanti per includere JS nella pagina
  <-- ... the Fetch as Google option:
      https://support.google.com/webmasters/answer/9073702?hl=en&visit_id=637376878667619390-732712756&rd=1

https://calderaforms.com/2016/11/how-to-load-custom-javascript-in-wordpress/
  <-- DA LEGGERE - vedere 'best practice'

Problemi da risolvere:
  - aggiungere JS correttamente
  - passare valori al JS
  - aggiungere JS SOLO alle pagine che lo usano ...





==============> possono essere utili:
https://wplearninglab.com/add-javascript-specific-wordpress-pages/
  <-- come aggiungere js ad una pagina WP specifica

https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop
  <-- buona descrizione 'event loop' in node js



                                                                         wordpress javascript - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                       Mailgun EMAIL  |
-----------------------------------  Set mail sending on multisite using mailgun

Servizio esterno: MAILGUN

-------------  configurazione mailgun
- subdomain:  mailthing.gothings.org
- DNS su namecheap / privatemail            <-- vedi sotto:  Aggiunte in privatemail:
- plugin:  MAILGUN
- wp-config.php:
      define('MAILGUN_USEAPI', true);
      define('MAILGUN_APIKEY', '258c7e70eb0ce3d00ce57143a5169c0b-bd350f28-370c54f9');
      define('MAILGUN_DOMAIN', 'mailthing.gothings.org' );
      define('MAILGUN_SECURE', true);
      // Set the from name and from address
      define('MAILGUN_FROM_NAME', 'WP Admin');
      define('MAILGUN_FROM_ADDRESS', 'wpadmin@gothings.org');

ref.s:
https://app.eu.mailgun.com/
  <-- connessione al sito mailgun
  <-- adminuser:   yesflorence@gmail.com
https://guides.wp-bullet.com/how-to-use-mailgun-with-wordpress-multisite-http-api-or-smtp/
  <-- main tutorial from mailgun
https://help.mailgun.com/hc/en-us/articles/203357040-Can-I-use-the-same-domain-name-for-Mailgun-and-for-Google-Apps-or-another-email-server-
  <-- tx & RX su mailgun      *** NON HA FUNZIONATO ***
      <-- namecheap non consente l'aggiunta di records MX per il subdomain
          <-- forse perche' aggiusta automaticamente per il suo privateemail


--------------- Aggiunte in privatemail:
- record aggiunti al DNS:
    CNAME   email.mailthing             eu.mailgun.org.
    CNAME   mailthing                   gothings.org
    TXT     krs._domainkey.mailthing    k=rsa; p=MIIBIjANBgkqh....
    TXT     mailthing                   v=spf1 include:eu.mailgun.org ~all

filtro 'test'  -->  tutte le email con TO che contiene 'testuser' vanno nel folder 'test'

filtro 'wpadmin'  -->  tutte le email con TO che contiene 'wpadmin' vanno nel folder 'wpadmin'

stato attuale (2020-08-25):
- sembra funzionare

-------------------- situazione attuale
- aggiunti plugin utili:
    Mail logging - WP Mail Catcher      utile per verificare il livello WP
                                        --> da abilitare su ogni sito
    WP Mail SMTP                        il plugin ufficiale non funziona (Mailgun for wordpress)
                                        --> setup in wp-config
                                            --> dat comuni a tutti i siti
                                            --> setup finale sul singolo sito
    Contact Form 7  (CF7)               Semplici Form per interagire con l'utente
                                        --> sembra funzionare
===========> prime prove: OK
             --> verificare casi speciali

DA verificare:
  - eliminazione "force address"                                                OK
  - parametro 'Set the return-path to match the From Email '  ??                DA FARE
  - parametri dinamici ed altro per CF7                                         OK



-------------------------------------------------------  DA FARE / VEDERE MEGLIO
- come usare mailgun per gestire una posta interna
    <-- spedire email di allarme
    <-- gestire forms che mandano email
    <-- limitare l'uso delle email dei NON amministratori
    <-- pods che mandano emails
    <-- ???


                                                                                Mailgun EMAIL - fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                            WP Multi  |
                                                                                         WP WebHooks  |
---------------- test di fattibilita'
- Pagina WP con raspi-key (da current-user)
  - un iframe che chiama la raspi con wss (web socket protocol)
- aprire wssh sulla raspi
    <-- o alternativa simile, vedi sotto a:   websocket & bash
    <-- fare prove di i/o con una form ad hoc sulla pagina WP
- espandere lo script
    <-- costruire una mini-shell che installa raspi-base



----------------------------- svolgimento prove mini-shell raspi
---- test1
Source in:  .../raspi-apps/raspi/wpcommand/

- download websocketd da ref 1
- metti nel dir i file count.sh & count3.html
- esegui: 
      ./websocketd --port=1234 --staticdir=. ./count.sh
- leggi la pagina dal pc:
      http://192.168.1.55:1234/count.html
  ======>  NON ha funzionato


---- test2
Source in:  .../raspi-apps/raspi/test2
ref.:  https://github.com/joewalnes/websocketd/wiki/Run-a-CGI-script-or-host-static-HTML
         <-- primo modello di funzionamento
       https://github.com/joewalnes/websocketd/wiki/Bash
         <-- esempio specifico per bash
- immetti i sorgenti:
      echo.sh           OK
      count.sh          non usato
      count2.sh         OK
      wsmanager.sh      OK
      websocket.htnl    correzioni:
                        27:  indirizzo websocket --> 'ws://192.168.1.55:1234/'
                        35:  evt --> event
- l'esempio funziona come da specifiche
- sorgenti simili testati sul PC
    ===> OK

- comandi per il websocketd:
    ./websocketd --port=1234 --staticdir=. ./wsmanager.sh      <-- raspi
    ./websocketd --port=8080 --staticdir=. ./wsmanager.sh      <-- PC

NOTA: sembra la base per quello che ci serve

  ======>  FUNZIONA !

      ./websocketd --port=1234 --devconsole ./count.sh


                                                                                IN CORSO
refs:
1.
https://www.bitkistl.com/2016/01/websockets-with-interactive-bash-script.html
  <-- esempiobash: 1.o test
2.
https://github.com/joewalnes/websocketd/wiki/Ten-minute-tutorial
  <--
3.
https://github.com/joewalnes/websocketd/wiki/Bash
  <--
https://github.com/alexanderGugel/wsd
  <--
https://github.com/vi/websocat
  <-- vedi anche le refs
https://github.com/progrium/wssh




--------------------------------------------------------------------------------
------------------------------------------------------------------- WEB Terminal
- Soluzione futura: richiede un docker funzionante
    <-- vedere se una immagine 'standard' potrebbe anche funzionare ...
- alternativa: installare una versione locale
    <-- richiede node ed altra roba: da evitare

refs:
  https://github.com/butlerx/wetty
    <-- ref base
  https://medium.com/@pacroy/setup-web-terminal-using-wetty-docker-image-dcb1ea75bfaf
    <-- dockerized example sul wetty originale
  https://www.supertechcrew.com/wetty-browser-ssh-terminal/
    <-- altro esempio
  https://www.ctl.io/developers/blog/post/using-wetty-to-create-docker-containers-for-clis
    <-- discussione di un caso ..
docker refs search:  'wetty'
  --> ce ne sono moltissimi!
  https://hub.docker.com/r/svenihoney/wetty
    <-- molto popolare ...

https://hub.packtpub.com/making-simple-web-based-ssh-client-using-nodejs-and-socketio/
  <-- DA LEGGERE



--------------------  Roba correlata: websocket & bash
tools:
https://github.com/websockets/wscat
  <--
https://github.com/vi/websocat
  <--
https://github.com/progrium/wssh
  <--

http://websocketd.com/
  <-- wss://....   <-- usare i websocket con bash
  Esempi:
    https://www.bitkistl.com/2016/01/websockets-with-interactive-bash-script.html
    https://stackoverflow.com/questions/40907888/linux-bash-how-to-open-a-websocket-connection-as-client
      <-- vari esempi ...


http://web-console.org/
  <-- da vedere meglio
https://pypi.org/project/webssh/
  <-- da vedere meglio



https://github.com/stuicey/SSHy
  <-- SSH terminal  <-- da vedere meglio ...


--------------- ipotesi di sviluppo futuro
--- interazione con raspi-base
- pagina di accesso su raspi
  - server http che esegue comandi locali
    ?-> aprire shell di controllo sul proprio PC
    ?-> futuro 'http control panel'
- Pagina WP con raspi-key (da current-user)
- un iframe che chiama la pagina di accesso


------- iframe refs:
https://www.dyn-web.com/tutorials/iframes/postmessage/
  <-- tutorial js cross-origin
https://www.dyn-web.com/tutorials/iframes/refs/parent.php
  <-- tutorial js same-origin

https://www.templatemonster.com/blog/best-wordpress-iframe-plugins/



------ wordpress plugins
https://wordpress.org/plugins/wp-webhooks/
https://wordpress.org/plugins/cf7-to-zapier/#%0Acan%20i%20help%20you%3F%0A
https://underconstructionpage.com/wp-webhooks-connect-integrate-wordpress/
  <-- sembra fare al caso nostro  -- VERIFICARE --


--- tutorials utili

https://codeburst.io/whats-a-webhook-1827b07a3ffa
https://webhook.site/
  <-- per verificare eventi (email) in tempo reale !!
 https://support.atlassian.com/bitbucket-cloud/docs/create-and-trigger-a-webhook-tutorial/
  <-- come bitbucket consente ai clienti la creazione di webhooks

https://www.getvero.com/resources/webhooks/
  <-- spiegazione dettagliata (beginner)

https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjugay_qujrAhUpMewKHTeyBHMQFjACegQIDBAB&url=https%3A%2F%2Fmoometric.com%2Fintegrations%2Fwp%2Fcontact-form-7-zapier-webhook-json-post%2F&usg=AOvVaw0KIcU_epbBPDqjqgIDVK-p
  <-- un esempio completo con zapier
  <-- provare ?

https://wordpress.org/plugins/cf7-to-zapier/#%0Acan%20i%20help%20you%3F%0A
https://moometric.com/integrations/wp/contact-form-7-zapier-webhook-json-post/
https://github.com/Vizir/cf7-to-zapier
  <-- ref da guardare




                                                                                  WP WebHooks - fine  |
=====================================================================================================/






=====================================================================================================\
                                                                                            WP Multi  |
                                                                                         DA GUARDARE  |
---------------------------------  DA PROVARE (Subito!)
https://play.google.com/store/apps/details?id=com.it4you.petralex&gl=IT
  <-- hearing aid for android
https://gehack.com/app/petralex-hearing-aid/816133779
  <-- patch per l'abbonamento gratuito !!!
https://www.bose.it/it_it/products/headphones_outlet/soundsport-free-wireless-fr.html#v=soundsport_free_wireless_fr_black
  <-- auricolari wireless


---------------------------------  DA STUDIARE

DB
  https://deliciousbrains.com/tour-wordpress-database/
    <-- descrizione dei contenuti del WP database, anche multisite
  https://deliciousbrains.com/creating-custom-table-php-wordpress/
    <-- informazioni importanti per le tabelle nel DB

PLUGINS utili
  https://cff.dwbooster.com/
    <-- form con campi calcolati

  https://wordpress.org/plugins/stream/
    <-- log di tutto il multisite
    <-- emette eventi a webhooks
    <-- sembrerebbe utile alla gestione del sito
    <-- forse usabile anche per ws

  https://wordpress.org/plugins/ninja-tables/
    <-- costrisce tabelle che girano sul browser su una SPA che usa vue.js


------------------------------------- Per lo sviluppo                           SVILUPPO

https://wordpress.org/plugins/fakerpress/                                       DA FARE
https://github.com/bordoni/fakerpress                                           appena funziona un po'
  <-- per riempire i siti durante lo sviluppo

https://wordpress.org/plugins/user-switching/
https://www.wpbeginner.com/plugins/how-to-instantly-switch-between-user-accounts-in-wordpress/
  <-- per provare i vari utenti ...


https://www.tipsandtricks-hq.com/wordpress-security-and-firewall-plugin         DA VEDERE
  <-- plugin per aumentare la sicurezza del sito ...



https://www.netsparker.com/security-cookies-whitepaper/
  <-- avvertenze sulla security dei cookie
  <-- tecniche per prevenire alcuni attacchi


------------------- NGROK
- SNAT equivalente a quello di himage.com
    https://ngrok.com/product
      <-- servizio testabile gratis
      <-- sembra analogo a quanto visto con la vpn per HLITE raspi ..,
      <-- per testare se la versione WP funziona ...



---------------------------------  DA VEDERE

  https://wordpress.org/support/article/editing-wp-config-php/
    <-- tips per WP-CONFIG.PHP
    <-- DA STUDIARE BENE !!!

  https://cpothemes.com/install-setup-wordpress-multisite-network
    <-- install wp multisite

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
  https://www.wpbeginner.com/wp-tutorials/useful-wordpress-configuration-tricks-that-you-may-not-know/
    <-- help & suggerimenti vari

  https://www.brianshim.com/webtricks/map-domain-name-wordpress-page-post/
    <-- mappaggio URL con apache .htaccess, forse indica come fare con nginx

  https://wordpress.stackexchange.com/questions/130076/multisite-redirect-to-appropriate-domain-if-subdomain-doesnt-exist
    <-- caso strano non-existent
  https://gist.github.com/dejanmarkovic/8323792
    <-- NOBLOGREDIRECT explained and fix

  https://www.slant.co/options/4899/alternatives/~navicat-for-mysql-alternatives
    <-- gestione mysql db      <-- alternative a phpmyadmin
    <-- vedi: adminer   dbschema

  https://wordpress.org/support/article/administration-over-ssl/
    <-- consigli di configurazione per SSL  

  https://designanddevelop.com/change-the-primary-blog-in-wordpress-multisite/
    <-- INTERESSANTE  (anche come cambiare il primary site)

  https://code.tutsplus.com/articles/quick-tip-upgrade-your-wordpress-site-via-ssh--wp-27691
    <-- update tramite ssh2  (modulo NON installato in docker wp img)


  https://www.hostgator.com/help/article/how-to-change-a-wordpress-multisite-primary-domain
    <-- elenca le tabelle per cambiare il primary domain

  https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    <-- altri suggerimenti DA VEDERE



--------------------------------------------------------------------------------
----------------------------------------------------- altre ref.s da considerare

-------------------- utenti
https://wordpress.org/plugins/user-switching/
  https://www.wpbeginner.com/plugins/how-to-instantly-switch-between-user-accounts-in-wordpress/

https://wordpress.org/plugins/fakerpress/
  <-- random content



--------------------------------------------------------------------------------
--------------------------------------------------------- plugins da considerare

https://it.wordpress.org/plugins/wp-private-content-plus/
  <--sembra avere le funzioni che servono

https://it.wordpress.org/plugins/jonradio-private-site/
  <-- da vedere

https://wordpress.org/plugins/subway/
  <-- forza il login ...


------------------------------------------------------------  Tutorial DA VEDERE
https://usersinsights.com/wordpress-private-page/
  <--

--------------------------------------------------------------------------------


  https://enable-cors.org/server_nginx.html
    <-- DA VEDERE se applicabile


  https://wordpress.org/support/article/nginx/
    <-- suggerimenti vari DA STUDIARE ...

  https://wordpress.org/plugins/nginx-helper/
    <-- suggerimenti vari DA STUDIARE ...




----------------------------------  ESEMPI
ref.:
  https://stackoverflow.com/questions/1653308/access-control-allow-origin-multiple-origin-domains
    <-- ci sono anche altre risposte interessanti ...

For Nginx users to allow CORS for multiple domains. I like the @marshall's example although his anwers only matches one domain. To match a list of domain and subdomain this regex make it ease to work with fonts:

location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
   if ( $http_origin ~* (https?://(.+\.)?(domain1|domain2|domain3)\.(?:me|co|com)$) ) {
      add_header "Access-Control-Allow-Origin" "$http_origin";
   }
}

This will only echo "Access-Control-Allow-Origin" headers that matches with the given list of domains.

-----------------------------------------
ref.:
  https://enable-cors.org/server_nginx.html
    <-- esempio verboso

-----------------------------------------
ref.:
  http://rustyrazorblade.com/post/2013/2013-10-31-cors-with-wildcard-domains-and-nginx/
    <-- sembra l'esempio 'GIUSTO'

-----------------------------------------



----------------------------------------------------------------  DA CONSIDERARE
https://themify.me/builder
  <-- page builder, vedere se puo' sostituire Site Origin Builder

https://it.wordpress.org/plugins/custom-field-suite/
  <-- forse e' piu' interessante di ACF

https://deliciousbrains.com/creating-custom-table-php-wordpress/
  <-- tutorial per creare tabelle nel DB

https://mac-blog.org.ua/wordpress-custom-database-table-example-full/
  <-- plugin per creare una tabella nel database                                DA VEDERE MEGLIO

https://wordpress.org/plugins/shortcodes-ultimate/
  <-- interessante & molto usato ...                                            DA VEDERE MEGLIO

https://premium.wpmudev.org/blog/creating-database-tables-for-plugins/
  <-- 

----> SHORTCODES?
https://wordpress.org/plugins/snippy/
  <-- una specie di assemblatore (di 'bits') per costruire i tuoi shortcodes

https://wordpress.org/plugins/synved-shortcodes/
  <-- obsoleto, ma contiene un editor di shortcodes per inserire tue modifiche ...

http://applyfilters.fm/podcast/episode-12-custom-tables/
  <--

https://wordpress.org/plugins/simple-custom-post-order/#%0Ais%20simple%20custom%20post%20order%20free%3F%0A
  <-- ordinare una lista di post ???

https://www.wpbeginner.com/wp-tutorials/wordpress-custom-fields-101-tips-tricks-and-hacks/
  <-- vademecum interessante

------ uso di FORMS
https://stackoverflow.com/questions/34186926/is-it-possible-to-place-a-http-post-and-get-request-for-a-specific-button-click
  <-- esempio di HTTP-CLIENT che 'riempe' un form

https://contactform7.com/
  <-- e' possibile mettere dati nel WP DB 
  <-- add-on utile:  

------------------------------------------------------------------------ FUTURO?
https://metabox.io/plugins/mb-user-meta/
  <-- Sembra risolutivo ...                                DA VERIFICARE
  <-- 39$ unlimited sites/1 year support ...
  <-- il metabox base potrebbe comunque essere utile ...
  <-- elimina o no il bisogno di ACF?
      <-- no, e' necessario usare MB Custom Tables, che costa 49$



                                                                             Roba DA GUARDARE - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                      FUTURO da fare  |

------------------------------------------------------------------------ FUTURO?
https://wordpress.org/plugins/geoip-detect/
  <-- usa geo-IP per verificare localizzazione thing & user
  ====> cerca: IFTTT alternatives
          https://github.com/huginn/huginn
            <-- local ifttt open source
          https://alternativeto.net/software/ifttt/?platform=self-hosted
            <-- elenco di alternative ...

https://www.sitepoint.com/wordpress-headless-cms-eleventy/
https://www.11ty.dev/docs/
https://github.com/11ty/eleventy/
  <-- creazione di siti statici
      <-- per usare un CMS come wordpress per definire un sito statico


www.snap4city.org
  <-- SISTEMA PER GESTIRE IoT
https://www.snap4city.org/drupal/node/473
  <-- dashboard
https://www.snap4city.org/drupal/node/475
  <-- aggiungere sorgenti di dati


https://blog.risingstack.com/real-time-node-js-webapp-socket-io/
  <-- server node.js + socket.io per sincronizzare molti client

                                                                               FUTURO da fare - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                               START  |

                                                                                                fine  |
=====================================================================================================/


                                                                           *** WPMulti v0.01.05 ***
---------------------------------------------------------------------------------------------------\ 2020-09-28
                                                                             *** WP Multisite 05 ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE



---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-02-08
                                                                          *** GOTHINGS cloud v02 ***/----------
---------------------------------------------------------------------------------------------------/
                                                                      *** Strategie - cloud v02 ***


@@@@@@@@----> sezione DA TOGLIERE dopo inizio di GOTHINGS cloud v03  <-------@@@@@@@@@@@@@@@@@@@@@@@   DA FARE


=====================================================================================================\
                                                                                               START |
                                                                                                fine |
=====================================================================================================/


- definire una rete privata con range opportuno
    <-- es. per nodesyslog 172.29.196.183 :     privatenet: 10.133.196.183/24
- assegnare ad ogni contenitore un indirizzo specifico della IP privata
    <-- scegliere un IP che termina come l'indirizzo su gothingsnet
    <-- es. per nodesyslog 172.29.196.183 :     IP 10.133.196.183
- eseguire 'listen' su una porta assegnata con un criterio analogo
    <-- es. per nodesyslog 172.29.196.183 :     expose port 10000+183 = 10183
- provare ping sulla interfaccia 10.133.196.183

ref.:
  https://stackoverflow.com/questions/35218621/how-to-assign-specific-ip-to-container-and-make-that-accessible-outside-of-vm-ho
                                                                                                fine |
=====================================================================================================/



------------------------------------------------------------------------  Servizi cloud per GOTHINGS

- La parte base contiene:
  - nginx              http proxy, TUTTO il traffico web passa da qui
  - redis              keystore per i dati di sistema, compreslo il network
  - logspout           acquisisce i logs e li invia alla applicazione node di gestione
  - cloud-node         3 funzioni:  'app' di base, 'user' app di debug, gestore degli eventi
  - certbot            applicativo per i certificati di letsencrypt

- la parte applicativa e' un sito wordpress multisite + certbot per i certificati di sicurezza
  - MariaDB            database service per parte base + wordpress
  - WP-FPM             motore PHP per wordpress & altro
  - certbot            applicativo per i certificati di letsencrypt

NOTA: per certbot non si sa ancora come si deve fare

--------------------------------------------------------------------  Funzionalita' nella parte base
- nginx
              http proxy, TUTTO il traffico web passa da qui

- redis
              keystore per i dati di sistema, compreslo il network

- logspout
           acquisisce i logs e li invia alla applicazione node di gestione

- cloud-node
         3 funzioni:  'app' di base, 'user' app di debug, gestore degli eventi


-------------------------------------------------------------------  Funzionalita' lato utente & IoT
-------------- Proposta di classificazione degli utenti gothings
                                                                                                    DA RIVEDERE
  - utenti WP pubblici
    - ricevono informazioni su gothings
    - sono anonimi, ma possono registrarsi su wp-multi
    - ricezione di info da alcune applicazioni IoT gothings
    - nessun controllo su IoT

  - utenti WP registrati
    - semplice registrazione in stile wordpress
    - tutto quanto vale per gli utenti WP pubblici
    - accesso ad ulteriori informazioni tramite siti WP 'sociali'
    - ricezione di info da alcune applicazioni IoT gothings
    - nessun controllo su IoT

  - utenti gothings
    - registrazione di secondo livello,
      - disclaimer per il tipo di servizio (nessuna responsabilita')
      - servizio gratuito, senza garanzie
      - possibilita' di passaggio 'a pago' nel futuro
    - tutto quanto vale per gli utenti WP registrati
    - possono registrare una loro LAN per scambio dati con applicazioni IoT gothings
    - area dedicata sul cloud per dati da/verso IoT (ampiezza controllata)
    - uso di una API IoT predefinita
    - possibilita' di scambio dati con applicazioni IoT tramite API
      - limitazioni sul # di operazioni

  - amministratori gothings
    - registrazione di terzo livello (automatica ?, Con approvazione?)
      - per ora, gratuita e con risorse limitate
      - forse, nel futuro, diventera' a pago
    - tutto quanto vale per gli utenti gothings
    - sito wp gothings dedicato
      - nome di subdominio registrato a livello gothings
      - amministrazione di livello WP per il subdominio
    - ampliamento (limitato) dell'area dedicata sul cloud per dati da/verso IoT
    - upgrade sui limiti operativi

  - sviluppatori gothings
    - ulteriore registrazione, non automatica,
    - tutto quanto vale per gli utenti WP registrati
    - ulteriore ampliamento dell'area dedicata sul cloud per dati da/verso IoT
    - possibilita' di registrare piu' LAN per scambio dati con applicazioni IoT gothings
    - possibilita' di estensioni:
      - estensione dell'API

  - partner gothings
    - solo con accordo scritto,
    - tutto quanto vale per gli utenti gli sviluppatori gothings
    - passaggio ad una droplet propria
    - discussione su tutto il resto

----------------------------------------------------------------------------------------------------

-------------- Definizioni namecheap                                            CAMBIATE in 2020/08/..
CNAME Record  s:

  www
 iot
  cloud
 wpwork
 test
 phpmyadmin
 php
 things


-------------- URLs

  - utenti WP pubblici:                                                www.gothings.org/path/
                                                                     cloud.gothings.org/path/
                                                                    things.gothings.org/path/
                                                                    wpwork.gothings.org/path/
                                                                       iot.gothings.org/path/
                                                                           gothings.org/path/
    altri:
                                                                      test.gothings.org/path/
                                                                phpmyadmin.gothings.org/path/
                                                                       php.gothings.org/path/


    path:  /iot/<pagina wp>
      - navigazione sulle URL predefinite:   www, cloud, things & wpwork
      - si vedono varie informazioni:
          pubblicizzazione delle funzionalita' di gothings
          descrizioni varie e prerequisiti per gothings
      - i siti 'superiori' non mostrano praticamente niente
          per i siti 'superiori' la registrazione e' praticamente indispensabile

      cloud       informazioni tecniche piu' approfondite
                  registrazione wp (per utenti wp registrati)
                  TUTTI possono registrarsi
      things      registrazione praticamente indispensabile
                    - dati IoT volatili senza registrazione (es.: cancellati alle 4 di notte)
                  ulteriori informazioni tecniche
                  ritenzione dei dati IoT
      wpwork      sito chiuso in mancanza di registrazione
      <none>      necessario al processo di installazione
                  *** trovare alternativa ?***

  - utenti WP registrati:                                              www.gothings.org/path/
                                                                     cloud.gothings.org/path/
                                                                    things.gothings.org/path/
                                                                    wpwork.gothings.org/path/
    path:  /iot/<pagina wp>
      - accesso controllato a pagine con i dati permanenti
        cloud       informazioni tecniche piu' approfondite
                    registrazione wp automatica
                    TUTTI possono registrarsi
        things      dati IoT permanenti, ma limitati (estensione e # di operazioni)
                    ulteriori informazioni tecniche
        wpwork      sito chiuso in mancanza di registrazione
      - semplice registrazione in stile wordpress
      - tutto quanto vale per gli utenti WP pubblici
      - accesso ad ulteriori informazioni tramite siti WP 'superiori'
      - ricezione di info da alcune applicazioni IoT gothings
      - nessun controllo su IoT

                                                                                                    DA RIVEDERE
  - utenti gothings
    - registrazione di secondo livello,
      - disclaimer per il tipo di servizio (nessuna responsabilita')
      - servizio gratuito, senza garanzie
      - possibilita' di passaggio 'a pago' nel futuro
    - tutto quanto vale per gli utenti WP registrati
    - possono registrare una loro LAN per scambio dati con applicazioni IoT gothings
    - area dedicata sul cloud per dati da/verso IoT (ampiezza controllata)
    - uso di una API IoT predefinita
    - possibilita' di scambio dati con applicazioni IoT tramite API
      - limitazioni sul # di operazioni

  - amministratori gothings
    - registrazione di terzo livello (automatica ?, Con approvazione?)
      - per ora, gratuita e con risorse limitate
      - forse, nel futuro, diventera' a pago
    - tutto quanto vale per gli utenti gothings
    - sito wp gothings dedicato
      - nome di subdominio registrato a livello gothings
      - amministrazione di livello WP per il subdominio
    - ampliamento (limitato) dell'area dedicata sul cloud per dati da/verso IoT
    - upgrade sui limiti operativi

  - sviluppatori gothings
    - ulteriore registrazione, non automatica,
    - tutto quanto vale per gli utenti WP registrati
    - ulteriore ampliamento dell'area dedicata sul cloud per dati da/verso IoT
    - possibilita' di registrare piu' LAN per scambio dati con applicazioni IoT gothings
    - possibilita' di estensioni:
      - estensione dell'API

  - partner gothings

DA AGGIUNGERE DOC:
                                                                       iot.gothings.org/path/
                                                                      test.gothings.org/path/
                                                                phpmyadmin.gothings.org/path/
                                                                       php.gothings.org/path/


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------  ELIMINARE ?
---------------------------------------------------------------------------------------------  refs.

------------------------------
UTILIZZATI:

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- ref principale per iniziare il lavoro

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- useful hints for wp multisite setup

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04
    <-- install phpmyadmin

------------------------------
DA VEDERE:

  https://serge.frezefond.com/2015/12/using-json-as-dynamic-columns-with-mariadb/
  https://www.wix.engineering/post/scaling-to-100m-mysql-is-a-better-nosql
    <-- uso del JSON nel DB come se fosse nosql

  https://stackoverflow.com/questions/15736806/sharing-variables-across-files-in-node-js-without-using-global-variables
    <-- quasi-GLOBAL variables in nodejs                                                  NODE JS

------------------------------
WORDPRESS

  https://kinsta.com/blog/migrate-wordpress-site/?utm_source=Kinsta+English+Newsletter&utm_campaign=520e630931-EMAIL_CAMPAIGN_2020_03_05&utm_medium=email&utm_term=0_c3ee1ecbb8-520e630931-140028061
    <-- migrazione ...

  https://wordpress.org/plugins/better-search-replace/
    <-- DA VEDERE per la migrazione di WP da un server ad un altro                        MIGRATE WP

  https://wordpress.org/support/article/administration-over-ssl/#using-a-reverse-proxy
    <-- proxy & wp-admin                                                                         SSL
    <-- search: (worpress?) administration-over-ssl using nginx reverse proxy
  https://wordpress.org/support/topic/wordpress-and-nginx-ssl-reverse-proxy/
    <-- strada per aggiungere 'EXTRA' al wp-config.php
  https://www.digitalocean.com/community/questions/redirect-loop-with-wordpress-on-apache-with-nginx-reverse-proxy-and-https-on-ubuntu-16
    <-- REDIRECT ???   alcuni suggerimenti utili ...


------------------------------
VARI INTERESSANTI:

  https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04
    <-- https & let's encrypt

  https://tarunlalwani.com/post/request-capturing-nginx-lua/
    <-- interessante sistema per "guardare" cosa fa nginx  (log, statistiche, ...)

  https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
    <-- AVVERTENZE varie, anche per PHP

  https://easyengine.io/
  https://easyengine.io/tutorials/redis/
    <-- buoni consigli per REDIS
  https://easyengine.io/tutorials/docker-wordpress/
    <-- sembra buono
  https://www.slideshare.net/rtcamp/easyengine-command-line-tool-to-manage-wordpress-sites-on-nginx-server-wordcampmumbai14
    <-- vedi struttura dir consigliata
  https://easyengine.io/tutorials/wpcli/finding-faulty-plugin/
    <-- wp-plugin debug

  http://bigdatums.net/2017/11/07/how-to-keep-docker-containers-running/
    <-- trucco semplicissimo per mantenere aperto un contenitore
    <-- OK, il contenitore non muore

Altri:

  https://easyengine.io/tutorials/docker-wordpress/
    <-- sembra buono
  https://www.slideshare.net/rtcamp/easyengine-command-line-tool-to-manage-wordpress-sites-on-nginx-server-wordcampmumbai14
    <-- vedi struttura dir consigliata



                                                                      *** Strategie - cloud v02 ***
---------------------------------------------------------------------------------------------------\
                                                                          *** GOTHINGS cloud v02 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-01-27
                                                                          *** GOTHINGS cloud v04 ***/----------
---------------------------------------------------------------------------------------------------/
                                                    *** Cloud v04 - droplet base  + db separato ***



-------------------------------------------------------------------------------------------------v04
strategia per v04:
- 1 droplet SOLO per il db
    si parte con la 'piccola' da 5 euro, che potra' crescere ...
- 1 droplet per TUTTE le altre funzioni:
    - nginx proxy per tutti i servizi:
        test server       sito statico per verifica rapida delle funzionalita'
        redis             keystore principale
        gothings-base     per i servizi essenziali: compreso il server degli eventi
        php-fpm           per TUTTI i wp-multisite definiti
                          ogni wp-multisite ha una sua doc root specifica
- supporto certbot per i siti https
- espansione/migrazione dei siti verso altre droplet

----------------------------------------------------------------------------------------------------

  droplet gothings-v09
    public IPv4     104.248.95.29
    private IP      10.133.94.60


  droplet gothings-v01-03
    public IPv4     188.166.70.203
    private ip      10.133.3.65

- per ogni app viene creato uno script con nome "gocloud-${APPNAME}"
- si e' cominciato con gocloud-myadmin che offre l'applicazione PhpMyAdmin
  - il servizio, raggiungibile a phpmyadmin.gothings.org, opera su qualunque db raggiungibile
  - VERIFICARE cosa succede per i dump di salvataggio ...                                           DA FARE
  - gocloud-myadmin e' scritto quasi come un template
- gocloud-db offre il servizio MariaDB con uno script 'quasi generalizzato'
  - gocloud-db e' scritto usando variabili che lo rendono 'adattabile" alla particolare app
  - si esegue una operazione 'init' che cambia i parametri di accesso al db
    - l'operazione e' automaticamente eseguita alla prima creazione del db
      <-- e' richiesto il consenso dell'utente
  - si e' aggiunta l'operazione CLEAR che disinstalla completamente il DB
  - lo usiamo come template per costruire gocloud-wp
- gocloud-wp installa il wordpress-multisite sulla droplet base                                     IN CORSO
  - si cerca di generalizzare ulteriormente lo script
  - fare una versione 'wpsingle' ?                                                                  DA FARE



=====================================================================================================\
                                                                                        GoCloud apps  |
                                                                              strategia di bootstrap  |
------- Contenuto in gothings-cloud-apps

- un dir <appname> per ognuna delle app:
    gothings-cloud-apps/<appname>/       file specifici per ogni app
      dockrepo/gocloud-<appname>         script di gestione della app
      dockrepo/<appname>dirs.tar.gz      archivio dei dati dell'applicazione
      dockrepo/dockimages/<appname>/     dir dei file di configurazione
        <appname>expand.json             garantisce la presenza dei file necessari
        <appname>install.json            effettua l'eventuale prima installazione
        <appname>init.json               assicura il corretto funzionamento

- a partire dai file di cui sopra si ottiene la app funzionante

- fase expand
  - development-friendly download gestito da <appname>expand.json
  - garantisce lo sviluppo "in loco"
  - consente la configurazione dei contenuti
      script "<appname>expand.sh" previsto, ma non ancora implementato          DA FARE
  - l'archivio .tar.gz e' un sottoalbero di ~/dockrepo/sysdata/
    - puo' contenere un dir ~/dockrepo/sysdata/<appname>/<appname>config/
      - in tal caso .../<appname>config/ puo' contenere uno script da eseguire
        <-- non ancora implementato                                             DA FARE
  - sono presenti solo i controlli base
    <-- controlli piu' formali e completi da definire                           DA FARE

------ sviluppo
  <appname>expand.json  definisce la configurazione della app:
    --> se <appname>expand.json non esiste lo si scarica da github
    --> si scarica SOLO se non e' presente
    --> puo' essere modificato in loco durante lo sviluppo
  - il file <appname>expand.json definisce l'archivio da utilizzare



come esempio vedi:   expand & creazione   in    WPMulti v0.01.03

                                                                       strategia di bootstrap - fine  |
=====================================================================================================/




                                                    *** Cloud v04 - droplet base  + db separato ***
---------------------------------------------------------------------------------------------------\
                                                                          *** GOTHINGS cloud v04 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-02-24
                                                                                  *** DB service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                     *** DB service - v0.01.05  ***


=====================================================================================================\
                                                                              sviluppo di MariaDB - 1 |

- Definisce, installa ed usa MARIADB in gothings

- usa la versione quasi GENERALIZZATA di gocloud-db

doc:
  .../WP-Sviluppi/gothings/README.gothings.cloud





------------------------------------------------------------------ storico dello sviluppo di MariaDB |

===>  vedi in :     *** STORIA ***
                    *** DB service - v0.01.04  ***
                    3.o sviluppo: init MariaDB con bash

Stato lavoro:
  DA VERIFICARE:  cosa fanno config.sh & secure.sh ?
  ====> dbsecure chiama config.sh                                               NON TORNA!
  - fase expand
    --> config.sh cambia le pwd iniziali del db, vedi  ** Valori usati **  sotto
        --> i valori sono direttamente nello script, in futuro: leggere da .json
    --> l'idea e' di avere valori ragionevolmente sicuri durante lo sviluppo
  - fase init
    --> secure.sh cambia le pwd iniziali del db, vedi  ** Valori usati **  sotto
        e' un duplicato di config.sh
        bisognera' aggiustare la cosa !

@@@@                                                                            SONO QUI

- eseguiti esperimenti:
    start_db
    stop_db
    clear_db

la via maestra sara':    USARE DOCKER SWARM

---------------------------------------------------------- Setup al 2020-03-12
setup con phpmyadmin in gothings-v01-03:

Database server
    Server: 10.133.94.60 via TCP/IP
    Server type: MariaDB
    Server connection: SSL is not being used Documentation
    Server version: 10.4.12-MariaDB-1:10.4.12+maria~bionic - mariadb.org binary distribution
    Protocol version: 10
    User: root@10.133.3.65
    Server charset: cp1252 West European (latin1)

GRANT ALL PRIVILEGES ON wpdata.* TO 'wpuser'@'10.133.%';
show grants for 'wpuser'@'10.133.%';

====> aggiustati:
        - firewall per bloccare accesso a mysql dal pubblico  (gothings-public)
        - accesso root & wpuser solo da rete interna

  ----------------------
    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.3.65';
  ----------------------

** Valori usati ** dalla 1.a versione di config.sh

ROOT_PWD_OLD="root_pwd"
ROOT_PWD="GTH2020_quattro_marzo"
WPUSER="wpuser"
WPUSER_PWD="penna_matita_gomma"
WPDATABASE="gtlite"
GOTHINGSNET="10.133.%"
ERRCOUNT=0
LOGFILE="dbconfig.log"


-------------------------------------  NOTE vecchie?
                                                                                                    DA FARE
- su errore init 71 (e 72?) aggiungere avviso "guarda dbinit.json"
- aggiungere, al posto di 'exit xx' la funzione "display error & exit"
===>  si ritorna ERRCOUNT, dovrebbe tornare RETVALUE
      si chiama dbsecure.sh, dovrebbe chiamarsi dbconfig.sh
      l'attuale config.sh potrebbe lui chiamarsi dbsecure.sh

------------------- firewall UFW
- setup UFW per VIETARE accesso dall'esterno SEMPRE

- setup UFW per permettere accesso SOLTANTO dalla rete interna di gothins (cerca su DO)
- inizializzazione pwd & nomi da bash script
                                                                                                    FUTURO
- definire un dbconfig.json che consente di personalizzare facilmente db (e altre applicazioni)
    <-- helper in node js?


                                                                       sviluppo di MariaDB - 1   FINE |
=====================================================================================================/


                                                                     *** DB service - v0.01.05  ***
---------------------------------------------------------------------------------------------------\
                                                                                  *** DB service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------




====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
??????????????????????  DA QUI IN POI AGGIUSTARE O ELIMINARE !!!  ???????????????                >>> INIZIO






------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-02-24
                                                                          *** PhpMyAdmin service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                             *** PhpMyAdmin service - v0.01.02  ***

Definisci, installa ed usa phpmyadmin in gothings

- immagine ufficiale da dockerhub
    https://hub.docker.com/r/phpmyadmin/phpmyadmin/
- configurazione 'with arbitrary server'
- apache server integrato
- uso con proxy_pass da gothings

doc:
  .../WP-Sviluppi/gothings/README.gothings.cloud


Risultato:
  - il container funziona con indirizzo esterno:
      http://188.166.70.203:7007/
  - il passaggio dal proxy nginx NON FUNZIONA
      <-- sembra ci siano dei problemi di sicurezza
      <-- a phpmyadmin 'non piace' la configurazione del proxy
===> riprovare quando avremo messo HTTPS ??

CONCLUSIONE:
- e' possibile montare phpmyadmin sulla stessa droplet di nginx
- la droplet diviene raggiungibile come:     http://phpmyadmin.gothings.org/

NOTA:
  vista l'elevata mole di attacchi a phpmyadmin e' consigliabile FERMARE
  phpmyadmin quando non serve !!!

*** controllo environment ancora da fare ! ***                                                      DA FARE

NOTA:
in questo e negli altri servizi e' opportuno OBBLIGARE un cambio di password
rispetto a quanto memorizzato su github


---------------------------------------------------------------------------------  SERVIZIO 'MYADMIN

--------------------------------------- 
phpmyadmin per vedere db:
      server:   10.133.94.60
    username:   Pluto1945
    password:   Himage_2019_IoT
---------------------------------------
                                         <==@@@@@ FALSO?    <-- DA VERIFICARE !!!  @@@@@@@@@@@@@@@@@  DA FARE
da internet:
    http://178.128.143.208:7007

  curl --verbose --header 'Host: phpmyadmin.gothings.org' 'http://10.133.3.65:7007/'

  curl --verbose 'http://10.133.3.65:7007/'


----------------------------------------------------------------------------------------------------
                                                                                     test phpmyadmin

connessione da phpmyadmin@gothings-v01-03  verso  <vedi sopra: ... per vedere db>

  Database server

    Server: 10.133.94.60 via TCP/IP
    Server type: MySQL
    Server connection: SSL is not being used Documentation
    Server version: 8.0.19 - MySQL Community Server - GPL
    Protocol version: 10
    User: Pluto1945@10.133.3.65
    Server charset: UTF-8 Unicode (utf8mb4)

  Web server

    Apache/2.4.38 (Debian)
    Database client version: libmysql - mysqlnd 7.4.1
    PHP extension: mysqliDocumentation curlDocumentation mbstringDocumentation
    PHP version: 7.4.1



----------------------------------------------------------------------------------------------------
--------------------------------------- sviluppo

#
#  ===================================================================
#  
#  Definisci, installa ed usa phpmyadmin in gothings
#  
#  - immagine ufficiale da dockerhub
#      https://hub.docker.com/r/phpmyadmin/phpmyadmin/
#  - configurazione 'with arbitrary server'
#  - apache server integrato
#  - uso con proxy_pass da gothings
#  
#  doc:
#    .../WP-Sviluppi/gothings/README.gothings.cloud
#    
#


Droplet:   gothings-v01-03       <--  base, wordpress & phpmyadmin
   public IP    188.166.70.203
  private IP    10.133.3.65
           db:  

Droplet:   gothings-v09          <--  db
   public IP    104.248.95.29
  private IP    10.133.94.60




===> mysql da terminale ...

      mysql -u root --password=HiLite_2008_GoCloud_2020
        oppure:   mysql -u root -p    -->    pwd: HiLite_2008_GoCloud_2020
      show databases;
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT

    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'Pluto1945'@'10.133.3.65' IDENTIFIED BY 'Himage_2019_IoT';
      DROP USER 'Pluto1945'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'Pluto1945'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'Pluto1945'@'%';
  ----------------------


--------------------------------------------------------------------------------   CORREZIONE
                                                                                   2020-07-28
user semplice:
db IP     10.133.94.60
db user   wpuser
pwd       penna_matita_gomma

admin:
db IP     10.133.94.60
db user   yesflorence
pwd       Himage_2019_IoT


                                                             *** PhpMyAdmin service - v0.01.02  ***
---------------------------------------------------------------------------------------------------\
                                                                          *** PhpMyAdmin service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-03-01
                                                                             *** GOTHINGS Helper ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                     *** Helper container - v02 ***

*** Versione di base per un contenitore in cui sviluppare applicazioni nodejs ***                   DA FARE
      <-- nato durante lo sviluppo di MariaDB, ma non utilizzato

scopo:
  container transitorio per configurare/installare/testare/..?.. un altro container
    --> esportare la strategia al contenitori wordpress
    --> esportare la strategia ad altri servizi che necessitano di inizializzazione

implementazione:
  un contenitore con una applicazione nodejs che aiuta l'utente a raggiungere lo scopo


====================================================================================================\
                                                                               Ricerche preliminari |

------- run multiple node js scripts

  https://itnext.io/4-solutions-to-run-multiple-node-js-or-npm-commands-simultaneously-9edaa6215a93
    <-- discussione su diversi modi ... Da Vedere

  https://github.com/paigen11/mysql-registration-passport
    <--  MySQL Registration with JWT & Passport Authentication - vedi anche prossimi 2 ref

  https://medium.com/@paigen11/using-docker-docker-compose-to-improve-your-full-stack-application-development-1e41280748f4
    <-- esempio di docker 'api & client & mysql' con nodejs

  https://medium.com/@paigen11/sequelize-the-orm-for-sql-databases-with-nodejs-daa7c6d5aca3
    <-- ORM (Object Relational Mapping) su node js, esempio interessante con 'sequelize'

------- node concurrency in generale
  https://itnext.io/multi-threading-and-multi-process-in-node-js-ffa5bb5cde98
  https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop
    <-- buona descrizione 'event loop' in node js
  https://blog.logrocket.com/node-js-multithreading-what-are-worker-threads-and-why-do-they-matter-48ab102f8b10/
    <-- DA GUARDARE
  https://corgibytes.com/blog/2017/04/18/npm-tips/
    <--  NPM pre & post scripts
  https://www.fpcomplete.com/blog/2016/12/concurrency-and-node
    <-- da guardare ?

CONCLUSIONE:
  - INTERESSANTE, si potrebbe automatizzare il tutto
  - COMPLICATO, da NON includere in MVP

  ==> usare un phpmyadmin temporaneo sulla stessa droplet di db

FUTURO:
  ==> usare helper con node js per automatizzare il processo di configurazione iniziale

                                                                                                    |
====================================================================================================/


=====================================================================================================\
                                                                                           Utilities  |
Pacchetti utili per il debug in una droplet:
  apt -y update
  apt -o Dpkg::Options::=--force-confdef -y install nano curl netcat net-tools telnet

  altri paccetti utili:
  make inetutils-ping dnsutils wget bzip2 locales perl unzip tree adduser

curl nel container:
  curl --verbose localhost

curl da host di php:
  curl --verbose localhost                <-- OK

curl da 'fuori'
  curl --verbose 'http://10.133.94.60'     <-- OK

------------------------------------------------------- Richiesta di servizio PHP da gothings-v01-03

                                                                                                    IN CORSO

curl --verbose 'http://10.133.94.60/template.php'

curl -v -H 'x-ash: bla' -H 'x-num: blu' 'http://10.133.94.60/testcurl.php'
  <-- inserzione di custom header
                                                                                     Utilities -FINE  |
=====================================================================================================/




----------------------------------------------------------------------------------------------------
------------------------------------------------------------------  HELPER container:  1.o tentativo

sperimentazione:
- si parte da 'cloudlog'
    <-- si ottiene un server http
- per ora si lavora con 'docker exec ..', poi si procedera' programmaticamente


======================================================  RIPASSO dell'installazione di una app NODEJS

fase expand:  === a tutti gli altri ...    NON si prevedono problemi
                                                                                                    DA RIVEDERE
::=====>  aggiungere uno script per eventuali dir mancanti?
          mettere script pre & post?

-----------------------------------------------------------------------------  Strategia fase expand

Per il contenitore <app>:
  - si genera l'archivio <app> con lo script make-<app>dirstar.gz
      <-- contenuto di dockrepo/sysdata>/* per tutta la <app>
  - l'archivio e' memorizzato su github
      <-- l'indirizzo di lettura e':
            https://raw.githubusercontent.com/fpirri/gothings-apps/master/<app>/<app>dirs.tar.gz
  - la fase di espansione e' controllata dal file in ~/dockrepo/dockimages/<app>/<app>expand.json
      <-- se il file non e' presente sulla droplet lo script lo scarica da github:
            https://raw.githubusercontent.com/fpirri/gothings-apps/master/<app>/dockrepo/dockimages/<app>/<app>expand.json" 
  - lo 'status' in <app>expand.json determina ...


====================================================================================================

mysql -u wpuser -puser_pwd
mysql -u root -proot_pwd
select host, user from mysql.user;


-------------------------------------------------------------------------- utilita' da db
--------------------------------------- ambiente di sviluppo



Droplet:   gothings-v01-03       <--  base, wordpress & phpmyadmin
   public IP    188.166.70.203
  private IP    10.133.3.65
           db:  

Droplet:   gothings-v09          <--  db                                               *** sottotitolo diverso per ogni versione storica ***

   public IP    104.248.95.29
  private IP    10.133.94.60




===> mysql da terminale ...

      mysql -u root --password=HiLite_2008_GoCloud_2020
        oppure:       -->    pwd: HiLite_2008_GoCloud_2020
      show databases;
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT

    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'Pluto1945'@'10.133.3.65' IDENTIFIED BY 'Himage_2019_IoT';
      DROP USER 'Pluto1945'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'Pluto1945'@'10.133.3.65';
  ----------------------


----------------------------------------------------------------------------------------------------

=====================================================================================================\
                                                                                         START topic  |

                                                                                         topic -FINE  |
=====================================================================================================/





                                                                     *** Helper container - v02 ***
---------------------------------------------------------------------------------------------------\
                                                                             *** GOTHINGS Helper ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------




====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
                                                                                                 >>> FINE






---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-01-27
                                                                *** GOTHINGS cloud v03 - gocloud ***/----------
---------------------------------------------------------------------------------------------------/
                                                               *** Cloud v03 - gocloud v0.01.00 ***

  Evoluzione della versione  v0.00.08

Scopo:
- Avere una versione per il setup completo di una versione multi-droplet di Gothings

Dettagli:
- si parte da una droplet creata con gli 'user data':
        .../gothings/wpmulti-dev/gothingsserverinit.sh
  - la droplet e' stata creata con:
    - OS:  Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-72-generic x86_64)
    - admin ssh con certificato
    - installazione docker-ce & docker-compose   (Docker version 19.03.5, build 633a0ea838)
    - lettura del bootstrap 'c' da:
        https://github.com/fpirri/gothings-install/raw/master/c
- si gira ./c per fare il download di gocloud da:
        https://github.com/fpirri/gothings-cloud/raw/master/gocloud
- viene lanciato gocloud che gestisce automaticamente la costruzione del sistema gocloud
- la costruzione avviene, in accordo a file di configurazione .json, in piu' fasi:
    - expand        assicura la presenza nella droplet dell'archivio 'clouddirs.tar.gz'
                    verifica l'esistenza dei file di configurazione in:
                       .../dockrepo/dockimages/<section>
                    dove <section> e' il nome della sezione da configurare
                    se non sono presenti li scarica da github (vedi sopra)
                      *** verificare la sequenza esatta ***
    - init          esecuzione di una fase di inizializzazione, prima dell'installazione
                    si richiama un bash script
                    per cloud: scarica i node_modules con npm
    - install       installazione definitiva dei programmi necessari a gocloud
- i file di configurazione contengono la chiave 'status' con valori:  'todo' e 'done'
  - lo stato e' automaticamente aggiornato dallo script gocloud
  - essi fanno eseguire uno specifico script bash
- durante lo sviluppo:
  - si puo' aggiornare localmente 'clouddirs.tar.gz', che non verra' sostituito dalla
    versione ufficiale su github
  - si possono modificare localmente i .json per ri-eseguire una fase



----------------------------------------------------------------------------------------------------
                                                                                           Strategia

Scopo:
  - gestire il ciclo di vita del sistema gocloud con l'aiuto di un menu
  - devono essere NON NECESSARIE conoscenze su docker, cloud, etc. 

Svolgimento:
- si creano su digitalocean tutte le droplet che servono
- si mette sul PC uno script che consente di andare a gestirle una a una
- si esegue una sequenza di controllo su ogni droplet ...
- FATTO!



----------------------------------------------------------------------------------------------------
                                                                               aggiornamento gocloud

Ci sara' un 'gocloud' in ogni droplet !


------------------------------------------------------------------------------------------  Droplets

ssh yesfi@104.248.95.29                                                       gothings-v09

Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-76-generic x86_64)
  IP address for eth0:            104.248.95.29
  IP address for eth1:            10.133.94.60
  IP address for docker0:         172.17.0.1
  IP address for br-4b6c24f61c21: 172.29.196.1
  IP address for br-004bfb568080: 172.29.195.1
  IP address for br-17ecfb12cdd8: 192.168.112.1


ssh yesfi@188.166.70.203                                                      gothings-v09-base
  IP address for eth0:            188.166.70.203
  IP address for eth1:            10.133.3.65
  IP address for br-4b6c24f61c21: 172.29.196.1
  IP address for docker0:         172.17.0.1
  IP address for br-dedf786dcb34: 172.18.0.1
  IP address for br-004bfb568080: 172.29.195.1



-------------------------  WORK


----------------------------------------------------------------------------------------------  WORK
                                                                          aggiornamento di 'gocloud'

Ci sara' un 'gocloud' in ogni droplet !

-------------------------------------------------------------
---------- lavoro sulla droplet:    ssh yesfi@188.166.70.203     --> BASE

1.- Inserire la droplet nella lista 'gothings'
2.- personalizzare il gocloud-base:
      - show containers
      - sostituire al menu '2. BASE    manage gothings BASE containers' le funzioni
        che sono ora in un sottomenu:
           " 2) START    gothings CLOUD containers"
           " 3) PAUSE    gothings CLOUD containers"
           " 4) DESTROY  gothings CLOUD containers"

                                                                                                    IN CORSO


Futuro:
  - trasportare lo script bash su una GUI web

  - esaminare powershell menu - ricerca: "powershell terminal menu"
      https://www.reddit.com/r/PowerShell/comments/9plt0b/easy_tool_menu/
      https://4sysops.com/archives/how-to-build-an-interactive-menu-with-powershell/
      https://adamtheautomator.com/build-powershell-menu/




                                                               *** Cloud v03 - gocloud v0.01.00 ***
---------------------------------------------------------------------------------------------------\
                                                                *** GOTHINGS cloud v03 - gocloud ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------




====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
                                                                                                 >>> FINE





---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2019-12-28
                                                               *** GoThings cloud droplets v0.02 ***/----------
---------------------------------------------------------------------------------------------------/
                                                   *** Generazione development droplet - v 0.02 ***

                                                                       --- memorizzato in STORIA ---

- Generazione droplet & init software from github
- Costruzione del menu 'gocloud' (GoThings Cloud Menu)

----------------------------------------------------------------------------------------------------
                                                                                          REFERENCES
--- System
  https://devanswers.co/system-restart-required-ubuntu-digitalocean-droplet/
    <-- why 'restart required'?

--- DNS

https://www.namecheap.com/support/knowledgebase/article.aspx/33/11/what-is-dynamic-dns?_ga=2.28964540.1277616335.1574977851-902166792.1573042405&_gac=1.20788554.1573042409.Cj0KCQiA-4nuBRCnARIsAHwyuPrCfQl29LhZWoTsVmpVVR7tw2XF6Wx-tvD4VJbwv0gL8B8Fi-955PwaAm57EALw_wcB
  <-- usare il DNS dinamico per spengere & riaccendere la droplet solo quando serve                 *** DA FARE ***


--- Create droplet
ricerca:   digitalocean install docker

1.-
https://www.digitalocean.com/community/tutorials/automating-initial-server-setup-with-ubuntu-18-04
  <-- creazione automatica del server ubuntu 18.04

2.-
https://www.digitalocean.com/community/tutorials/how-to-install-docker-compose-on-ubuntu-18-04
  <-- come sopra, tutorial installazione docker-compose

3.-
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04
   <-- tutorial installazione manuale docker


-----------------  Docker images guideline:
4.-
https://github.com/docker-library/official-images#consistency
  <-- consigli su come scrivere i dockerfile
  <-- uso di 'tini' per inizializzare il sistema



----------------------------------------------------------------------------------------------------
                                                                                           Strategia
  - Per ogni container si definiscono le fasi:
    - expand
      <-- carica & espandi archivio .tar.gz da github
    - init
      <-- esegui operazioni una-tantum nella vita della droplet
    - install
      <-- esegui operazioni (ripetibili) per l'inizializzazione del container

  - per ogni fase e' definito un file di stato .json
    <-- dice se l'operazione va fatta o no
    <-- indica lo script che esegue l'azione

  - durante lo sviluppo si mantiene come fatto l'expand
    <-- si caricano le correzioni direttamente sulla droplet
    <-- per ogni versione pubblicabile:
        - si aggiorna l'archivio .tar.gz
        - si segna come 'da fare' l'expand
        - generalmente va anche rifatto init & install
  - si possono ripetere init & install con i rispettivi .json

                                                                                                    IN CORSO
  - per 'cloud' e' gia' fatto in gocloud VERSION="0.00.06" 
    - nella VERSION="0.00.07" si aggiungono:
      - htdocs        solo expand
      - nginxdata     solo expand
      - redisdata     solo expand
    - i nuovi containers hanno solo 'expand', init & install non servono

                                                                                                    DA FARE
===========>  SEPARARE i .tar.gz durante l'inizializzazione ...
- aggiustare .../redisdata/db permissions anche sul netbeans@vmatic  (se necessario ..)



----------------------------------------------------------------------------------------------------
                                                                                          AVVERTENZE
--------------- problema gestione file su github
i file su github sono raggiungibili come:
    https://github.com/fpirri/gothings-cloud/blob/master/dockrepo/dockimages/cloud/cloudinstall.json
divisi come:                                                                              getgitfile
    GITHUBHOME    :    https://github.com/fpirri/         :   costante                          --
    GITHUBPATH    :    gothings-cloud/blob/master/        :   repository da scaricare           $2
    RASPIPATH     :    dockrepo/dockimages/cloud/         :   path del file                     $3
                                                              identici su github e su raspi
    nome file     :    cloudinstall.json                  :   nome file da scaricare            $1

  #  path:  dockrepo/dockimages/cloud/cloudinstall.json




----------------------------------------------------------------------------------------------------
                                                                               ===========>  FATTO !

- redis NON salva il db
  - il file dump.rdb di redis (e il dir sopra === db) DEVONO appartenere a 999:999 (redis:redis)
  - dir db permission: 755    file dump.rdb permission:  644
    <-- ref.: https://stackoverflow.com/questions/22160753/redis-failed-opening-rdb-for-saving-permission-denied
============> set dir & file permission: 999:999  (redis:redis)



                                                   *** Generazione development droplet - v 0.02 ***
---------------------------------------------------------------------------------------------------\
                                                               *** GoThings cloud droplets v0.02 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2019-11-28
                                                                      *** GoThings cloud install ***/----------
---------------------------------------------------------------------------------------------------/
                                                                *** Sviluppo droplet cloud base ***

                                                                       --- memorizzato in STORIA ---

- Generazione veloce della parte cloud del sistema GOTHINGS
  <-- procedura guidata per la generazione veloce di una droplet
      <-- si usa uno start script per generare una prima immagine
      <-- si fa un upgrade con lo script 'gocloud'
  <-- gocloud inizializza l'ambiente gothings-cloud sulla droplet
      <-- si copia il tutto da gothings-cloud
      <-- tutti i dir necessari ed il content di partenza sono presi da un .tar.gz
      <-- per proseguire basta:
            - download un tar.gz sulla droplet
            - aggiorna i .json in .../dockrepo/dockimages/cloud/
            - girare gocloud che espande il sistema aggiornato
  <-- ref per controlli utili; 
      - create logs in /var/log/cloud-init-output.log
      - verifica lo stato di docker:   sudo systemctl status docker

                                                                                                    *** IN CORSO ***
--------- creazione droplet a partire dallo snapshot
Viene creata la droplet a partire dallo snapshot
  <-- viene presentato lo stesso menu ...
  <-- si fa tutto uguale, meno lo 'user data'
====> la droplet non funziona bene:
  - i .json di configurazione andrebbero re-inizializzati ...
  - fare un cl-re-init prima di salvare                       <-- SI, cosi' si puo ripartire con ./c
- dopo dovrebbe essere tutto normale:
  - esegui lo script di boot ./c
    <-- viene caricato il GOTHINGS Control Menu ed e' inizializzata la parte base di gothings


-------- PROBLEMI da risolvere
install/init:
  - va organizzato il processo di inizializzazione, da rendere piu' controllabile
    durante lo sviluppo
  - separare redis & nginx da cloud ... ??
redis:
  - WARNING overcommit_memory is set to 0! Background save may fail under low memory condition.
    To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot
     or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
  - WARNING you have Transparent Huge Pages (THP) support enabled in your kernel.
    This will create latency and memory usage issues with Redis.
    To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled'
    as root, and add it to your /etc/rc.local in order to retain the setting after a reboot.
    Redis must be restarted after THP is disabled.


                                                                                 OSSERVAZIONI VARIE:
- Installazione & setup della droplet gothings:
  contenuti:
    - download da github
    - dir necessari per inizializzare l'ambiente gothings (versione cloud)

- REFRESH completo dell'installazione:
  - inizializzare i .json in .../dockrepo/dockimages/cloud
      <-- mette status == 'todo'             <-- si eseguiranno expand & install
  - CANCELLARE il .tar.gz in .../dockrepo/sysdata



----------------------------------------------------------------------------------------------------
Docker install on DO droplet

create droplet ------------------------
- new project:  gothings
- create standard droplet (5Eur/mese, il minimo possibile), droplet in AMS3
- setup automatico: vedi ref 1.-
  - aggiungi private net & user data & monitoring
      <-- file:    .../WP-Sviluppi/gothings/cloud-dev/gothingsserverinit.sh
  - 'keys all' : tutte le chiavi
  - RICORDA: sul PC i key file DEVONO essere chmod 600
- il log del droplet setup e' in:    /var/log/cloud-init-output.log                                 log

===> al 2019-12-17:                                                                                 snapshot
            droplet:        gothings-v05
           snapshot:        gothings-v05-firstboot
                 IP:        128.199.48.13

first boot -----------------------------
- viene letto lo script 'c' da gothings install
  - si carica il menu gocloud
  - si esegue il primo npm install

--------------  REDIS
- aggiustati i volumi come da doc su dockerhub
  ===>  OK

--------------  NGINX
- aggiustati i volumi come da doc su dockerhub
  ===>  ???






start base ----------------------------
- esegui comando start:
  - prerequisites
    - init docker networks
    - ??
  - 


                                                                                                    DA FARE
- aggiungere 'install tree' ne





DA VEDERE: cosa si puo' da consumi facili & cf-dock-02




                                                                *** Sviluppo droplet cloud base ***
---------------------------------------------------------------------------------------------------\
                                                                      *** GoThings cloud install ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------



                                                          --- Roba utile, non presente in STORIA ---

                                                                                                    TEMPLATE
------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-
                                                                           *** Titolo della fase ***/-------------
---------------------------------------------------------------------------------------------------/
                                                     *** Nome componente nella fase, versionato ***


=====================================================================================================\
                                                                                         START topic  |

                                                                                         topic -FINE  |
=====================================================================================================/


                                                     *** Nome componente nella fase, versionato ***
---------------------------------------------------------------------------------------------------\
                                                                           *** Titolo della fase ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------



****************************************************************************************************
                                                                                 CUT & PASTE library  -  INIT

--- comandi o testi usati molto spesso  ---

  curl --verbose --header 'Host: phpmyadmin.gothings.org' 'http://10.133.3.65:7007/'

  

  docker exec -ti nginx bash

  docker logs -f nginx --tail 100

  sudo netstat -tulnp | grep 6567

  sudo update-locale LANG=en_GB.UTF-8 LC_MESSAGES=POSIX



                                                                                 cut & paste library  -  END
****************************************************************************************************




------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-03-19
                                                                                  *** REFERENCES ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                           *** lista REFERENCES ***

=====================================================================================================\
                                                                         Interessante FUTURO - START  |

  https://medium.com/better-programming/docker-in-development-with-nodemon-d500366e74df
    <-- usa nodemon per costruire container con node, ma anche in python FLASK


                                                                          Interessante FUTURO - FINE  |
=====================================================================================================/



=====================================================================================================\
                                                                                           REF UTILI |

----- bash script

  https://bash.cyberciti.biz/
    <-- tutorials, elenco di bash script pronti per molte cose utili

------- possibile attacco:

  https://webdevetc.com/blog/how-to-get-someones-database-credentials-while-they-are-editing-config-files-on-a-live-server
    <-- attenzione a fare edit di file!!!
    <-- ELIMINARE accesso ai file di tipo '.*'
    <-- inoltre: stare attenti a tutti i file "strani"



                                                                                    REF UTILI - fine |
=====================================================================================================/


https://medium.com/better-programming/docker-in-development-with-nodemon-d500366e74df



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ seguito DA AGGIUSTARE

=====================================================================================================\
                                                                                       topic - START  |

                                                                                        topic - FINE  |
=====================================================================================================/


                                                                           *** lista REFERENCES ***
---------------------------------------------------------------------------------------------------\
                                                                                  *** REFERENCES ***/-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------




====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
??????????????????????  DA QUI IN POI AGGIUSTARE O ELIMINARE !!!  ???????????????                >>> INIZIO








====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
                                                                                                 >>> FINE



====================================================================================================
===================================================================================   *** STORIA ***
====================================================================================================



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-00-00
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                                         *** ??? ***



                                                                                         *** ??? ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

^-----  parte da copiare




@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2021-03-31
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                       *** Service WP - v0.01.06 *** bis

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------/ 2021-03-01
                                                                                   *** Service WP ***/------------
----------------------------------------------------------------------------------------------------/
                                                                       *** Service WP - v0.01.06 *** bis
*** in aggiornamento dopo il fallimento precedente ***

                                                   Sviluppi precedenti in STORIA

Scopo: 
- un servizio per eseguire funzioni PHP predeterminate
- usare wordpress come ambiente amministrativo
    <-- ~ ZERO contenuto pubblico
    <-- usare SOLO la parte amministrazione
    <-- usare tabelle custom nel DB per i dati delle COSE
- utilizzare la REST API di wordpress per svolgere il lavoro


----------------------------------------------------------------- Terzo sviluppo
fallimento:
- versione con proxy da una droplet all'altra
    <-- wordpress con server apache sulla 2.a droplet
    <-- si arriva sul sito, il wordpress si installa, ma non funziona
          <-- non si entra in amministrazione
          <-- il login entra in un ciclo infinito
          <-- il tema non esiste, pagine non formattate


-------------------------------------------------------------- Sviluppo in corso

Preliminari:
- si elimina ogni rimasuglio nello NGINX primario
- si imposta nginx nella droplet db
- si usa la stessa configurazione PHP-FPM della droplet base
- si inizializza un wordpress locale
passo successivo:
- proxy  sulla droplet base
- eliminazione accesso pubblico ?


==========================================================  Fasi di lavoro NGINX
Si lavora nel dir .../servicewp/aux/nginxinstall/nginxinstall

- Si parte da nginx sulla droplet gothings-v01-03-base+wp
    <-- si copia la configurazione in nginxdata.org
- si copia nginx.conf & conf.d/  da nginxdata.org
    <-- VERIFICA dell'uguaglianza
- si aggiungono i volume necessari al test: 
        nginx.conf    conf.d    htdocs    var_www
    <-- si prendono dalla droplet gothings-v01-03-base+wp
    <-- in var_www va il contenuto wordpress
    <-- in htdocs mettiamo il sito di test        <-- va bene ???
      <-- comporta variazioni al file .yml
- si aggiorna nginx.yml per il primo test
- si copia test in sites-enabled per la prima prova
    <-- aggiornamento ai dir
- si aggiorna lo script .../servicewp/aux/nginxinstall/start_nginx


============================================================= SVILUPPO NGINX App

------------------------------------------------------------------- Preparazione
                                                                              OK
NGINX
- aggiustare il dir htdocs
  - contiene i file per il test di nginx                               
      <-- inseriti tramite il file di compose nginx.yml
  - stesura degli script di configurazione:
      ServiceConfig           <-- esegue i passi necessari
      .env-nginx              <-- individua il servizio (nginx)

- lo script ServiceConfig carica .env-nginx che contiene SOLO i dati (stringhe) di configurazione
- si fanno delle verifiche di congruita'
- si costruisce il file Env-nginx che verra usato in configurazione
  ------------------------------------------------------------------
    - TUTTE le configurazioni nel dir ~/dockrepo/sysconfig/
  ------------------------------------------------ VERIFICA DA FARE
    - verificare se un nome necessario esiste
    - warning se c'e' un nome non previsto
    - limitare i nomi a 16 caratteri
    - costruire il file ENV-nginx da includere    
  ------------------------------------------------------------------
    - i file vengono PRIMA verificati POI copiati nel dir giusto
    <-- ADESSO si copiano direttamente, senza modifiche
        <-- si emette un avviso
  ------------------------------------------------------------------
  
========================== work-in-progress: 

- VerifyInstall_nginx       <--  script per installare nginx
                            <--  soluzione NULLA per fare veloce, poi si vede
vedi:
1 https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04
    <-- ref usato inizialmente (no docker)
2 https://www.cloudbooklet.com/how-to-install-nginx-and-lets-encrypt-with-docker-ubuntu-20-04/
    <-- specifico, con docker - manca il rinnovo -
3 https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
    <-- specifico, con docker - sembra semplice & veloce ...
4 https://miki725.com/docker/crypto/2017/01/29/docker+nginx+letsencrypt.html
    <-- un altro ancora! - interessante l'uso dei volumi ...
5 https://dzone.com/articles/nginx-and-https-with-lets-encrypt-certbot-and-cron
    <-- ... interessante l'uso di cron

---------------------------- 
Cominciamo da 3:
--> https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
- Costruiamo i dir per la prima prova:
    .../gothings/nginx/dockrepo/sysdata/nginx       <-- dir di lavoro nginx
          <-- va in ~/dockrepo/sysdata/nginx/ sulla droplet
          <-- contiene TUTTI i dati della app 'nginx'
  - contenuto della app:                          <-- file definiti da pentacent
      .../nginx/docker-compose.yml
      .../nginx/init-letsencrypt.sh
      .../nginx/data/nginx/app.conf
- seguito il tutorial, otteniamo:
    IMPORTANT NOTES:
     - Congratulations! Your certificate and chain have been saved at:
       /etc/letsencrypt/live/pirri.me/fullchain.pem
       Your key file has been saved at:
       /etc/letsencrypt/live/pirri.me/privkey.pem
       Your cert will expire on 2021-06-22. To obtain a new or tweaked
       version of this certificate in the future, simply run certbot
       again. To non-interactively renew *all* of your certificates, run
       "certbot renew"
     - Your account credentials have been saved in your Certbot
       configuration directory at /etc/letsencrypt. You should make a
       secure backup of this folder now. This configuration directory will
       also contain certificates and private keys obtained by Certbot so
       making regular backups of this folder is ideal.
     - If you like Certbot, please consider supporting our work by:

       Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
       Donating to EFF:                    https://eff.org/donate-le
    -------------------------------
=====> sembra funzionare  (a parte che da errore 504)

--> proviamo a mettere openresty al posto di nginx-alpine ...

=====> all'inizio NON FUNZIONA

- proviamo a mettere la configurazione di gothings-v01-03 (config base)
  - copiati i file di conf da base & servicewp   ==>  aux
  - eliminato app.conf in certbot                                              DA RIVEDERE
  --> copiati in v09
====>  FUNZIONA  (quasi)

- Aggiornati i file dei contenuti : gothings -->  pirri.me

CONCLUSIONE:
- abbiamo un nginx generico abbastanza automatico

                                                                                DA FARE
:
- rinnovo automatico dei certificati
    <-- esegui script ???                                                       DA FARE
- prova di rinnovo su droplet gothings-v01-03
- preparazione bash script 'go-nginx
    <-- lista di app generiche da montare ...



================================================================================ DA AGGIUSTARE

===================================  configure wordpress
  - creazione del db
  - scelta del prefisso e dei dati di wp-config.php
    <-- tramite:
      .../gothings/servicewp/dockrepo/sysdata/servicewp/servicewpconfig/SERVICENAME
      .../gothings/servicewp/dockrepo/sysdata/servicewp/servicewpconfig/.env-servicewp

                                                                                SONO QUI

Passi di esecuzione:
- in home, eseguire:   ./goservice
    <-- e' previsto di fare tutto in stile gocloud-PC
    <-- adesso si lanciano gli script a mano ...
  - goservice
  - nginxinstall   (script in .../servicewp/aux/nginxinstall/ )
      <-- per ora NON VA  <-- deve essere aggiustato
  - start_nginx    ===>  PARTE !!!

----------------  configurazione da aggiustare:


WORDPRESS
- inizializzare il db & WP
  - stesura degli script di configurazione:
      SERVICENAME       <-- 
      .env-servicewp
  - creazione del db
  - scelta del prefisso e dei dati di wp-config.php
    <-- tramite 

/home/superman/NetBeansProjects/WP-Sviluppi/gothings/servicewp/dockrepo/sysdata/servicewp/servicewpconfig/SERVICENAME
/home/superman/NetBeansProjects/WP-Sviluppi/gothings/servicewp/dockrepo/sysdata/servicewp/servicewpconfig/.env-servicewp



VEDI:    PHP TEMPLATE - START  |
  sezione sulla costruzione del PHP di controllo:


ELENCO COMANDI UTILI  -  ref interni da vedere:
  php db services - START  |       Facciamo showtables:        
     <-- 




=====================================================  Fasi di lavoro Service WP
Preparazione:
- inizializzazione dei direttori                              ** fase manuale **
- scrittura del file .env-service                             ** fase manuale **
- scrittura del file service.yml                              ** fase manuale **

Installazione wordpress:
- si esegue il '5 minutes install" di wordpress

Uso del contenitore
- piu' cicli start-stop

Fine del servzio
- un down alla fine
- eventuale cancellazione della versione attuale
- nuovo tentativo, dalla preparazione in poi


--------------------------------------------------------------------------------
---------------------------------------------------------------- immissione nome
Richiesta del nome del servizio                          ** esecuzione script **
- script go_service
  <-- crea i dir necessari e ritorna al chiamante

--------------------------------------------------------------------------------
---------------------------------------------------------------------- file .env
- scrittura del file .env-service                             ** fase manuale **
Si immettono i dati di configurazione specifici per l'applicazione
  <-- es. le pwd del db
  <-- mettere la pwd di root in un dir irraggiungibile

--------------------------------------------------------------------------------
----------------------------------------------------------------------- Set dirs
Inizializzazione dei direttori                                ** fase manuale **
Si impone una struttura determinata, preludio necessario per l'automatizzazione
  <-- probailmente automatizzabile con il file .env-service

--------------------------------------------------------------------------------
---------------------------------------------------------------------- file .yml
scrittura del file service.yml                                ** fase manuale **
- file docker-compose per la generazione del  contenitore
- forse automatizzabile, in stile githings

--------------------------------------------------------------------------------
------------------------------------------------------------------ ?
Installazione wordpress:                                 ** esecuzione script **
- si esegue il '5 minutes install" di wordpress
- dovrebbe andare da solo
- creazione del contenitore

--------------------------------------------------------------------------------
------------------------------------------------------------------ ?
Uso del contenitore                                      ** esecuzione script **
- piu' cicli start-stop
- consente di fermare il servizio quando non serve
- da decidere cosa si fa con phpmyadmin

--------------------------------------------------------------------------------
------------------------------------------------------------------ ?
Fine del servizio                                        ** esecuzione script **
- un down alla fine
- eventuale cancellazione della versione attuale
- eventuale ??
- nuovo tentativo, dalla preparazione in poi
- indispensabile per definire nuovi servizi



--------------------------------------------------------------------------------
------------------------------------------------------------- creazione database
Seve un db per ogni servizio                                  ** fase manuale **
- forse automatizzabile
    <-- creatore di servizi docker  (crea il db per wp) 
- si fa con phpmyadmin (root only?)
    <crea database gtthings>
- sulla droplet gothings-v09 - db  <-- 104.248.95.29   
    docker exec -ti db bash
    mysql -pGTH2020_quattro_marzo
    show databases;
      <-- ci deve essere il db gtthings
    GRANT ALL PRIVILEGES ON gtthings.* TO 'root'@'172.29.%';
    GRANT ALL PRIVILEGES ON gtthings.* TO 'wpuser'@'10.133.%';
    GRANT ALL PRIVILEGES ON gtthings.* TO 'wpuser'@'172.29.%';
    GRANT ALL PRIVILEGES ON gtthings.* TO 'wpuser'@'localhost';
    exit;
    <-- verificare con phpmyadmin che e' tutto ok
        <-- il wpuser vede il database (vuoto)
        <-- IDEA X automazione: il prefisso dellle tabelle e' anche
            il prefisso del nome, es.:   wp._user per il prefisso wp.
        <-- rendere obbligatoria unicita' del prefisso
        <-- ? prefisso casuale ?

- memo per sviluppo futuro:   cambiare user nel wordpress locale
                              aggiungere il wpuser
    <-- il WP di www.gothings puo' leggere i nuovi db


--------------------------------------------------------------- Installazione WP

- vai a:  DATI UTILI  |
    <-- usa i valori presi da li' per operare nel seguito

--------------- debug
droplet gothings-v01-03-base+wp
droplet gothings-v09-db
  - controllo nginx:
      docker exec -ti nginx bash
  - vedi i log:
      docker logs -f --tail 20 nginx
      docker logs -f --tail 20 servicewp
      docker logs -f --tail 20 db
script utili:
    . go_servicewp         <-- in home, per andare al dir di servicewp
  nel dir servicewp:
    ./down_servicewp       <-- se necessario, il log segnala l'uscita 'gracefully'
    ./start_servicewp
    ./stop_servicewp

valori di environment:
    WORDPRESS_DB_HOST=172.29.196.187:3306
    WORDPRESS_DB_USER=wpuser
    WORDPRESS_DB_PASSWORD=penna_matita_gomma
    WORDPRESS_DB_NAME=srvwpthings
    WORDPRESS_TABLE_PREFIX=fp2srv


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
ATTENZIONE !!!!!   /var/www/html contiene programmi PERICOLOSI !!!
                   -->  NON CI DOVREBBERO ESSERE !!!
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

environment:
  AGGIUNTO il table-prefix:



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Parte VECCHIA: RIVEDERE

Dettagli:
- chiamabile da bash script, usando CURL
- con accesso al MariaDB (stessa droplet)
- header 'sicuro': risponde SOLO alle chiamate CURL dalle droplet                                   DA FARE
    <-- per ora si affida alla presenza di headers ed alla condivisione di un segreto
    <-- nginx proxy aggiunge un proprio header (sovrascrivendo eventuali header esterni)
    <-- uno o piu' header ricavati da file (ritenuti sicuri)
- restituisce valori usabili in bash                                                                DA FARE
- realizzato anche tramite inclusione di file PHP pre-compilati

refs:
https://hub.docker.com/_/php
  <-- immagine docker del PHP
https://www.pascallandau.com/blog/php-php-fpm-and-nginx-on-docker-in-windows-10/
  <-- esempio dettagliato (sotto windows, ma utile ...)
https://stackoverflow.com/questions/29905953/how-to-correctly-link-php-fpm-and-nginx-docker-containers
  <-- consigli utili ...  ** leggere TUTTO prima di proseguire ...


-------------------------------------------------------------- Installazione PHP
droplet:
  yesfi@104.248.95.29      <-- MariaDB per il cloud gothings


ATTENZIONE !!!!!   /var/www/html contiene programmi PERICOLOSI !!!
                   -->  NON CI DOVREBBERO ESSERE !!!  

------------------------------------------------------------------- VECCHI: FINE

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  NUOVO CONTENUTO

- il punto di accesso rimane il proxy nginx su gothings-v01-03-base+wp
- si prova per prima la configurazione standard del wordpress ufficiale
  come pubblicato su dockerhub

refs.:
  https://docs.docker.com/compose/wordpress/
    <-- semplice .yml file, descrizione della procedura
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- esempio piu' complesso su DigitalOcean

---------- tentativo 1
- set servicewp in nginx @ gothings-v01-03-base+wp <-- ip addr: 188.166.70.203
    <-- nginx conf: .../servicewp/dockrepo/sysdata/nginxdata/sites-enabled/servicewp
          <-- version v0.01.03
    <-- versione iniziale (prima della prova) nel dir .../servicewp/aux/AUXNGINX/
        <-- identico o aggiornati commenti in: wpmultisite, test, myadmin,iot, base80
        <-- solo cambio name per servicephp --> servicewp
    ==> si trova phpmyadmin  <-- porta sbagliata!  <-- mettere wp su porta esterna = 8001
    <-- corretto 



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  TENTATIVI INUTILI !!!
===> e' ON il firewall DigitalOcean che bloccava quasi TUTTO
       <== aperte le porte 8000-8099

====> NON FUNZIONA il proxypass ad apache  :   apache conf scazzata ?  <-- NO!
      <=== il firewall BLOCCA le comunicazioni !!!
--- abilitazione firewall:
      sudo ufw allow 8000/tcp
prova;
      sudo ufw allow from 10.133.0.0/16 to any port 8000      <-- dalla droplet
      sudo ufw allow from 172.29.0.0/16 to any port 8000      <-- dai containers
sostituiti da:
      sudo ufw allow 8000/tcp           <-- per vedere se dipende dalla sorgente
  - prova da browser:                   <-- NON FUNZIONA
  - prova curl dalla droplet:
      curl --verbose "http://10.133.94.60:8000/wp-admin/install.php"
  - prova curl su localhost:
      curl --verbose "localhost:8000/wp-admin/install.php"
====> si RIPROVA a partire da zero (var_www ripulito)
    ./down_servicewp
    cd var_www_servicewp
    sudo rm -rf *
    sudo rm .htaccess
      <-- verificare con ls -la
    cd ..
    ./start_servicewp
DIAGNOSI:
  - la configurazione 'remoteip' va aggiustata
  - sembra consigliabile aggiustare anche security.conf
  - e' possibile montare i file usando i volumes in docker-compose
ref.: https://medium.com/@zhao.li/how-to-understand-working-with-files-in-containers-using-docker-compose-6d8e68ed790b
  NOTA: per non sovrascrivere l'intero direttorio i file vanno rimpiazzati uno alla volta ...
CURA:
- si crea il dir etc_apache2_conf in .../sysdata/servicewp
- dentro il dir si aggiungono i file:
    .../etc_apache2_conf/conf-available/remoteip.conf   -->   /etc/apache2/conf-available/remoteip.conf
    .../etc_apache2_conf/conf-available/security.conf
- si rimpiazzano nel container tramite servicewp.yml

------------ ultimo tentativo prima di accorgersi del firewall esterno:
    python -m SimpleHTTPServer 8001         <-- come server, funziona !


///
- DA CORREGGERE hostname in apache
  ...
\\\


====> cerchiamo altri errori ...     FUNZIONA !!!


                                                                       *** Service WP - v0.01.06 *** bis
----------------------------------------------------------------------------------------------------\
                                                                                   *** Service WP ***\------------
------------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------

                                                                       *** Service WP - v0.01.06 *** bis
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@








@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2021-03-06
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                       *** Service WP - v0.01.06 ***

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------/ 2021-03-01
                                                                                   *** Service WP ***/------------
----------------------------------------------------------------------------------------------------/
                                                                       *** Service WP - v0.01.06 ***
*** in aggiornamento dopo il fallimento precedente ***

                                                     Sviluppo iniziale in STORIA

Scopo: 
- un servizio per eseguire funzioni PHP predeterminate
- usare wordpress come ambiente amministrativo
    <-- ~ ZERO contenuto pubblico
    <-- usare SOLO la parte amministrazione
    <-- usare tabelle custom nel DB per i dati delle COSE
- utilizzare la REST API di wordpress per svolgere il lavoro


------------------------------------ Primo sviluppo per installare un WP singolo

Preliminari:
- si sono riorganizzati i 'sites-enabled' di nginx
    <-- sezione unica per il redirect https in 'base80'
    <-- sezioni separate per ogni specifico servizio o sito

------------------------------------------------------------------ init database
- su phpmyadmin as root:
    <crea database gtthings>
- sulla droplet gothings-v09 - db  <-- 104.248.95.29   
    docker exec -ti db bash
    mysql -pGTH2020_quattro_marzo
    show databases;
      <-- ci deve essere il db gtthings
    GRANT ALL PRIVILEGES ON gtthings.* TO 'root'@'172.29.%';
    GRANT ALL PRIVILEGES ON gtthings.* TO 'wpuser'@'10.133.%';
    GRANT ALL PRIVILEGES ON gtthings.* TO 'wpuser'@'172.29.%';
    GRANT ALL PRIVILEGES ON gtthings.* TO 'wpuser'@'localhost';
    exit;
    <-- verificare con phpmyadmin che e' tutto ok: il wpuser vede il database (vuoto)

--------------------------------------------------------------------------------

- vai a:  DATI UTILI  |
    <-- usa i valori presi da li' per operare nel seguito

--------------- debug
droplet gothings-v01-03-base+wp
  - log di nginx:
      docker logs -f --tail 20 nginx
  - controllo nginx:
      docker exec -ti nginx bash
droplet gothings-v09-db
  - vedi i log:
      docker logs -f --tail 20 servicewp
      docker logs -f --tail 20 db
script utili:
    . go_servicewp         <-- in home, per andare al dir di servicewp
  nel dir servicewp:
    ./down_servicewp       <-- se necessario, il log segnala l'uscita 'gracefully'
    ./start_servicewp
    ./stop_servicewp

valori di environment:
    WORDPRESS_DB_HOST=172.29.196.187:3306
    WORDPRESS_DB_USER=wpuser
    WORDPRESS_DB_PASSWORD=penna_matita_gomma
    WORDPRESS_DB_NAME=gtthings
    WORDPRESS_TABLE_PREFIX=fptng


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
ATTENZIONE !!!!!   /var/www/html contiene programmi PERICOLOSI !!!
                   -->  NON CI DOVREBBERO ESSERE !!!
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

environment:
  AGGIUNTO il table-prefix:



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Parte VECCHIA: RIVEDERE

*** Seguito  subito piu' avanti, nella storia della versione precedente

...
...
                                                                       *** Service WP - v0.01.06 ***
----------------------------------------------------------------------------------------------------\
                                                                                   *** Service WP ***\------------
------------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------

                                                                       *** Service WP - v0.01.06 ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@






@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2021-03-01
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                       *** Service WP - v0.01.05 ***

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------/ 2021-02-21
                                                                                   *** Service WP ***/------------
----------------------------------------------------------------------------------------------------/
                                                                       *** Service WP - v0.01.05 ***

Scopo: 
- un servizio per eseguire funzioni PHP predeterminate
- usare wordpress come ambiente amministrativo
    <-- ~ ZERO contenuto pubblico
    <-- utilizzare la REST API di wordpress per svolgere il lavoro
    <-- usare SOLO la parte amministrazione
    <-- usare tabelle custom nel DB per i dati delle COSE
- 
    
--------------------------------------------------------------  VECCHI: rivedere
Dettagli:
- chiamabile da bash script, usando CURL
- con accesso al MariaDB (stessa droplet)
- header 'sicuro': risponde SOLO alle chiamate CURL dalle droplet                                   DA FARE
    <-- per ora si affida alla presenza di headers ed alla condivisione di un segreto
    <-- nginx proxy aggiunge un proprio header (sovrascrivendo eventuali header esterni)
    <-- uno o piu' header ricavati da file (ritenuti sicuri)
- restituisce valori usabili in bash                                                                DA FARE
- realizzato anche tramite inclusione di file PHP pre-compilati

refs:
https://hub.docker.com/_/php
  <-- immagine docker del PHP
https://www.pascallandau.com/blog/php-php-fpm-and-nginx-on-docker-in-windows-10/
  <-- esempio dettagliato (sotto windows, ma utile ...)
https://stackoverflow.com/questions/29905953/how-to-correctly-link-php-fpm-and-nginx-docker-containers
  <-- consigli utili ...  ** leggere TUTTO prima di proseguire ...


-------------------------------------------------------------- Installazione PHP
droplet:
  yesfi@104.248.95.29      <-- MariaDB per il cloud gothings


ATTENZIONE !!!!!   /var/www/html contiene programmi PERICOLOSI !!!
                   -->  NON CI DOVREBBERO ESSERE !!!  

------------------------------------------------------------------- VECCHI: FINE

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  NUOVO CONTENUTO

- il punto di accesso rimane il proxy nginx su gothings-v01-03-base+wp
- si prova per prima la configurazione standard del wordpress ufficiale
  come pubblicato su dockerhub

refs.:
  https://docs.docker.com/compose/wordpress/
    <-- semplice .yml file, descrizione della procedura
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- esempio piu' complesso su DigitalOcean

---------- tentativo 1
- set servicewp in nginx @ gothings-v01-03-base+wp <-- ip addr: 188.166.70.203
    <-- nginx conf: .../servicewp/dockrepo/sysdata/nginxdata/sites-enabled/servicewp
          <-- version v0.01.03
    <-- versione iniziale (prima della prova) nel dir .../servicewp/aux/AUXNGINX/
        <-- identico o aggiornati commenti in: wpmultisite, test, myadmin,iot, base80
        <-- solo cambio name per servicephp --> servicewp
    ==> si trova phpmyadmin  <-- porta sbagliata!  <-- mettere wp su porta esterna = 8001
    <-- corretto 

-------------------- init database
- vai a:  DATI UTILI  |
    <-- usa i valori presi da li' per operare nel seguito
- su phpmyadmin as root:
    <crea database gtthings>
- sulla droplet gothings-v09 - db  <-- 104.248.95.29   
    docker exec -ti db bash
    mysql -pGTH2020_quattro_marzo
    show databases;
      <-- ci deve essere il db gtthings
    GRANT ALL PRIVILEGES ON gtthings.* TO 'root'@'172.29.%';
    GRANT ALL PRIVILEGES ON gtthings.* TO 'wpuser'@'10.133.%';
    GRANT ALL PRIVILEGES ON gtthings.* TO 'wpuser'@'172.29.%';
    GRANT ALL PRIVILEGES ON gtthings.* TO 'wpuser'@'localhost';
    exit;
    <-- verificare con phpmyadmin che e' tutto ok: il wpuser vede il database (vuoto)
------ vediamo se funziona
- scriviamo il file env di setup:  .../sysdata/servicewp/servicewpconfig/.env-servicewp
  valori:
    WORDPRESS_DB_HOST=172.29.196.187:3306
    WORDPRESS_DB_USER=wpuser
    WORDPRESS_DB_PASSWORD=penna_matita_gomma
    WORDPRESS_DB_NAME=gtthings
- su gothings-v01-03-base+wp vedi i log di nginx:
    docker logs -f --tail 20 nginx
- su gothings-v09-db vedi i log:
    docker logs -f --tail 20 servicewp
    docker logs -f --tail 20 db
  <-- + terminale per dare comandi:
    . go_servicewp
    ./down_servicewp       <-- se necessario, il log segnala l'uscita 'gracefully'
    ./start_servicewp
- gateway timeout:  non risponde a nginx
- il servicewp e' attivo, vediamo cosa fa:
    docker exec -ti servicewp bash




@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  TENTATIVI INUTILI !!!
===> e' ON il firewall DigitalOcean che bloccava quasi TUTTO
       <== aperte le porte 8000-8099

====> NON FUNZIONA il proxypass ad apache  :   apache conf scazzata ?  <-- NO!
      <=== il firewall BLOCCA le comunicazioni !!!
--- abilitazione firewall:
      sudo ufw allow 8000/tcp
prova;
      sudo ufw allow from 10.133.0.0/16 to any port 8000      <-- dalla droplet
      sudo ufw allow from 172.29.0.0/16 to any port 8000      <-- dai containers
sostituiti da:
      sudo ufw allow 8000/tcp           <-- per vedere se dipende dalla sorgente
  - prova da browser:                   <-- NON FUNZIONA
  - prova curl dalla droplet:
      curl --verbose "http://10.133.94.60:8000/wp-admin/install.php"
  - prova curl su localhost:
      curl --verbose "localhost:8000/wp-admin/install.php"
====> si RIPROVA a partire da zero (var_www ripulito)
    ./down_servicewp
    cd var_www_servicewp
    sudo rm -rf *
    sudo rm .htaccess
      <-- verificare con ls -la
    cd ..
    ./start_servicewp
DIAGNOSI:
  - la configurazione 'remoteip' va aggiustata
  - sembra consigliabile aggiustare anche security.conf
  - e' possibile montare i file usando i volumes in docker-compose
ref.: https://medium.com/@zhao.li/how-to-understand-working-with-files-in-containers-using-docker-compose-6d8e68ed790b
  NOTA: per non sovrascrivere l'intero direttorio i file vanno rimpiazzati uno alla volta ...
CURA:
- si crea il dir etc_apache2_conf in .../sysdata/servicewp
- dentro il dir si aggiungono i file:
    .../etc_apache2_conf/conf-available/remoteip.conf   -->   /etc/apache2/conf-available/remoteip.conf
    .../etc_apache2_conf/conf-available/security.conf
- si rimpiazzano nel container tramite servicewp.yml

------------ ultimo tentativo prima di accorgersi del firewall esterno:
    python -m SimpleHTTPServer 8001         <-- come server, funziona !


///
- DA CORREGGERE hostname in apache
  ...
\\\


====> cerchiamo altri errori ...


@@@@@@--> messo tutto in STORIA


                                                                       *** Service WP - v0.01.05 ***
----------------------------------------------------------------------------------------------------\
                                                                                   *** Service WP ***\------------
------------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------

                                                                       *** Service WP - v0.01.05 ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@










@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2021-02-10
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                                 *** PHP Service ***

------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-03-01 ?
                                                                                  *** PHP Service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                      *** PHP Service - v0.00.1 ***
Scopo: 
- un servizio per eseguire funzioni PHP predeterminate

Dettagli:
- chiamabile da bash script, usando CURL
- con accesso al MariaDB (stessa droplet)
- header 'sicuro': risponde SOLO alle chiamate CURL dalle droplet                                   DA FARE
    <-- per ora si affida alla presenza di headers ed alla condivisione di un segreto
    <-- nginx proxy aggiunge un proprio header (sovrascrivendo eventuali header esterni)
    <-- uno o piu' header ricavati da file (ritenuti sicuri)
- restituisce valori usabili in bash                                                                DA FARE
- realizzato anche tramite inclusione di file PHP pre-compilati


--------------------------------------------------------------------------------
--------------------------  RIPRESE dal vecchio *** WP Service - v0.01.03  ***
NOTE                                                                            2020-08-01

- Questa versione deriva dallo sviluppo wp-multi fatto in precedenza
- Adesso il 'WP Service' diviene un container di aiuto per la gestione 
  del mariadb nella droplet v09
- L'idea e' che il php agisca sul db per automatizzare operazioni di 
  creazione e gestione del wp multi

Il nome della app diviene:   PHP                                           <==  DA CAMBIARE !

-------------
- il nuovo wp multisite e' eseguito va sulla droplet gothings v01.03
- nella droplet  gothings-v09 - db ci sono vecchi file, sembra provenienti da 
  ~/NetBeansProjects/WP-Sviluppi/gothings/wpmulti-dev/wp-dev/ che ho salvato 
  in ~/NetBeansProjects/WP-Sviluppi/gothings/wpmulti-dev/wp-dev/v09_backup
  e cancellati dalla droplet

==> Si sviluppa in:  ~/NetBeansProjects/WP-Sviluppi/gothings/wp/
    si fanno ora le prove di installazione per la produzione                    2020-08-01

---------------
--------------------------------------------------------------------------------




=====================================================================================================\
                                                                                         PHP Service  |
                                                                                    Sviluppo - START  |
Pacchetti utili per il debug in una droplet:
  apt -y update
  apt -o Dpkg::Options::=--force-confdef -y install nano curl netcat net-tools telnet

  altri paccetti utili:
  make inetutils-ping dnsutils wget bzip2 locales perl unzip tree adduser

------- prove di funzionamento iniziale
curl nel container:
  curl --verbose localhost

curl da host di php:
  curl --verbose localhost                <-- OK

curl da 'fuori'
  curl --verbose 'http://10.133.94.60'     <-- OK


------------------------------------------------------- Richiesta di servizio PHP da gothings-v01-03
------ PHP templates

php-testata.php
  <-- headers html per la risposta

php-secure.php
  <-- verifiche per decidere se si risponde
  <-- per ora: SI FA FINTA!                                                                         DA FARE
  <-- definizione dei valori per la risposta bash

------------------------------------------------------------------------------ comandi curl di prova
Prove:
- si immette una URL da terminale o da browser
    <-- su una droplet esterna rispetto al db
    <-- Es.:  da 10.133.3.65    -->   a 10.133.94.60
    <--      gothings-v01-03    -->     gothings-v09
- il risultato e' una semplice pagina HTML, formattata per essere quasi leggibile sul terminale
- si emette anche un exit code leggibile direttamente da bash script


- prova base
  da terminale:  curl --verbose 'http://10.133.94.60/template.php'
    da browser:  http://php.gothings.org/template.php
      <-- pagina html contenente: "Program NOT available"
      <-- in sviluppo possono essere presenti alcune informazioni di debug

Definizione parametri in template:
  X_NAME       primo parametro di controllo, equivalente allo user da autenticare
  X_CONTROL    secondo parametro di controllo, equivalente alla password nella autenticazione
  X_VERIFY     terzo parametro di controllo per maggiore sicurezza
  X_DEBUG      fa stampare una variabile potenzialmente utile nello sviluppo


- prova di debug aggiungendo parametri nella URL
      curl -v 'http://10.133.94.60/template.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolo'
      http://php.gothings.org/template.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolo

    <-- considera la prova di accesso valida per TUTTI
  - gli stessi comandi di prima mostrano una pagina HTML piu' ricca
      <-- exit code della chiamata: 0 se il template non lo modifica

Attualmente, il test di autorizzazione e' inefficace, si accettano delle costanti:
      X_NAME = test
   X_CONTROL = password
    X_VERIFY = <stringa qualunque>
successivamenteil controllo sara' un hash 

======> la discussione sul funzionamento di TEMPLATE e' avanti:              PHP TEMPLATE - START  |

Nel fare showtables si vede che abbiamo bisogno di estensioni per lavorare con il db
-----> si decide di far partire php con la stessa immagine di wordpress e, eventualmente
       di estenderla ancora

- tutorial utile:
    https://www.sitepoint.com/how-to-manually-build-docker-containers-for-wordpress/
      <-- come installare estensioni su docker PHP

  curl -v 'http://10.133.94.60/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1

                                                   ====> non funziona, MANCANO l'estensione mysql!!!
soluzione: usiamo lo stesso php di wordpress

in .../gothings/php/dockrepo/sysdata/php/gothingsphp.yml:
  --> scegliamo l'immagine:   wordpress:5.3.2-php7.2
               al posto di:   wordpress:5.3.2-php7.2-fpm-alpine
                                                                                                    IN CORSO
un ref. utile:  https://www.sitepoint.com/how-to-manually-build-docker-containers-for-wordpress/

Altri ref con intenti simili:
  https://github.com/10up/wp-local-docker
  https://github.com/visiblevc/wordpress-starter
    <-- vedi anche: letsencrypt, 

- aggiunto un wp-config.php fittizio
- trasfornato template.php in index.php
- piccoli aggiustamenti cosmetici a index.php

Accesso al sito php:
  curl -v 'http://10.133.94.60/
  http://php.gothings.org/


---



----------------__BUTTARE:
curl -v -H 'TRY_X: true' 'http://10.133.94.60/testcurl.php'
  <-- verifica collegamento base

curl --verbose 'http://www.gothings.org/go_save_db.php'

                                                                                     Sviluppo - FINE  |
=====================================================================================================/



=====================================================================================================\
                                                                                         PHP Service  |
                                                                                PHP TEMPLATE - START  |
                                                                                                    IN CORSO
Scopo del template e' fornire un punto di partenza per la realizzazione di servizi PHP
- Vengono realizzate in maniera univoca tutte le funzioni comuni ad ogni applicazione
- il template usa tre file php che vengono inclusi nell'applicazion template:
    php-testata.php    <-- testata HTTP: title, start body, php functions declaration
                           <-- contiene le funzioni PHP:
                                 print_r2($val)   stampa 'carina' della variabile $val
    php-secure.php     <-- controllo della chiamata, eventuale terminazione
                           <-- eventualmente, TRY_X consente di bypassare i controlli
                               durante lo sviluppo
                           <-- assicurarsi che TRY_X sia 'false' in produzione
                           <-- NON dovrebbe essere variato nelle varie applicazioni
    php-content.php    <-- body del programma, specifico per ogni servizio
                           <-- possibilmente, emettere uscita facilmente interpretabile
                               da una chiamata da terminale 
    php-footer.php     <-- terminazione del programma
                           <-- print X_DEBUG ed esci dal programma
                           <-- il valore di EXIT_CODE viene stampato sull'uscita
                               ed e' disponibile come exit code a bash nel terminale

Come usare i templates:
- vai nel dir .../sysdata/php/var_www/html/
- esegui una copia di template.php ed assegna un nome, es.: myservice.php
  - edit il file myservice.php ed esegui la sostituzione:
       require 'php-content.php';   ==>   require 'myservice-content.php';
- esegui una copia di content.php ed assegna il nome: myservice-content.php
  - modifica myservice-content.php per eseguire il servizio che credi
- esegui le prove necessarie dal terminale e/o dal browser:
      curl -v 'http://10.133.94.60/template.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
      http://php.gothings.org/template.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  

per myservice.php:  
  curl -v 'http://10.133.94.60/myservice.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/myservice.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'

per creadb_bk.php:
  curl -v 'http://10.133.94.60/creadb_bk.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/creadb_bk.php?X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1


                                                                                                    IN CORSO
Facciamo showtables:
  curl -v 'http://10.133.94.60/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_DEBUG=TRUE&X_VERIFY=bibbolino&RES_DEBUG=1

soluzione: usiamo lo stesso php di wordpress

-----------------------------------------> aggiustata la configurazione php

                                                                                 PHP TEMPLATE - FINE  |
=====================================================================================================/


=====================================================================================================\
                                                                                         PHP Service  |
                                                                             php db services - START  |

-----------------------------------  Servizi creati per gestire il database wordpress da bash remoto

- si aggiustano i programmi transitori  go_backup_db, go_creadb_bk e go_save_db

------- servizio 'mostra tabelle'
- si parte da template --> showtables
- si aggiusta showtables-content.php




                                                                                                    IN CORSO
Facciamo showtables:
  curl -v 'http://10.133.94.60/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_VERIFY=bibbolino&RES_DEBUG=1'
  http://php.gothings.org/showtables.php?DB_NAME=gtlite&X_NAME=test&X_CONTROL=password&X_VERIFY=bibbolino&RES_DEBUG=1


===> mysql da terminale ...
      mysql -u root -pGTH2020_quattro_marzo
      show databases;
      select host, user from mysql.user;
      mysql -u wpuser -ppenna_matita_gomma

      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      CREATE USER 'wpuser'@'172.29.%';
      CREATE USER 'root'@'172.29.%';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.%';
      show grants for 'wpuser'@'10.133.%';

ref.:
  https://linuxconfig.org/install-mysql-on-ubuntu-18-04-bionic-beaver-linux
    <-- come installare mysql client

  installa -->
      sudo apt update
      sudo apt install mysql-client

  test connection -->
      mysql -u root -p -h 127.0.0.1           <-- p:  GTH2020_quattro_marzo
      mysql -u wpuser -p -h 127.0.0.1         <-- p:  penna_matita_gomma
      mysql -u wpuser -p -h 10.133.94.60      <-- p:  penna_matita_gomma
      mysql -u root -p -h 10.133.94.60        <-- p:  GTH2020_quattro_marzo

test da gothings-v01-03:                    <-- container nginx, diverso dall'host di db
    mysql -u wpuser -p -h 10.133.94.60      <-- p:  penna_matita_gomma
    mysql -u root -p -h 10.133.94.60        <-- p:  GTH2020_quattro_marzo
=====>  FUNZIONA !!!

test da gothings-v09:                       <-- container host di db
    mysql -u wpuser -p -h 10.133.94.60      <-- p:  penna_matita_gomma
    mysql -u root -p -h 10.133.94.60        <-- p:  GTH2020_quattro_marzo
=====>  FUNZIONA !!!

------------------------------------------------------------------------
test dal container php:                     <-- stesso host di db
    mysql -u wpuser -p -h 10.133.94.60      <-- p:  penna_matita_gomma
    mysql -u root -p -h 10.133.94.60        <-- p:  GTH2020_quattro_marzo

db WARNINGS:
  [Warning] 'user' entry 'wpuser@*' ignored in --skip-name-resolve mode.
  [Warning] 'proxies_priv' entry '@% root@df59d3319c66' ignored in --skip-name-resolve mode.  
    --> https://www.fromdual.com/node/1280

mysql andrebbe installato
    apt update
    apt install mysql-client
    --> E: Package 'mysql-client' has no installation candidate

altra strada:
  installiamo un altro container:

                                                                                                    IN CORSO
Ricognizione: facciamo un container ubuntu con nodejs e tutto ilresto
  --> ricerca:  docker nodejs over ubuntu 
    







                                                                              php db services - FINE  |
=====================================================================================================/




=====================================================================================================\
                                                                                         PHP Service  |
                                                                           Funzione CLEAR DB - start  |
                                                                                      WP Service old

*** funzione specifica per wordpress ***
  wpclear.sh
Ogni applicazione avra' una <appname>clear.sh, richiamata dall'applicativo principale
****************************************

-------- funzione CLEAR
obiettivo:
  tornare alla situazione iniziale nei dir e nel database

realizzazione:
  - si esegue una copia del db gtlite su gtlite_bk
  - si eliminano TUTTI i file generati da wordpress
      <-- files di nome wp-*
      <-- altri files: index.php, license.txt, xmlrpc.php, readme.html, .htaccess
      <-- dirs: wp-admin, wp-includes, wp-content
  - si eliminano TUTTE le tabelle wordpress in gtlite
  - si rileggono i file di configurazione wpinit.json e wpinstall.json da github
      <-- per il momento NON si legge wpexpand.json per non usare wpdirs.tar.gz
          in fase di sviluppo

Problema:
  dare ALL GRANTS a wpuser sul db gtlite_bk        <--    fare in verifyinit ??                     DA FARE


----------------------------------------------------------------------------------------------------

ref. usati:
  https://www.supportsages.com/php-script-to-change-mysql-table-prefix/
    <-- script MOLTO interessante
    <-- HTML per leggere le pwd etc.         <-- usare .env ? 

  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
    <-- usata versione cli come template 
    <--  (thanks to Richard Maurer)

  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- questo NON HA FUNZIONATO

  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <-- myscli version per copytables
    <-- anche questo SEMBRA NON FUNZIONARE


altri ref.:
--------------  RENAME  DUMP  database
ref.:
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- rename database
    <-- dump database
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- altro script, in bash
  https://stackoverflow.com/questions/12190000/rename-mysql-database
    <-- alcuni suggerimenti utili ...

automysqlbackup
  https://sourceforge.net/projects/automysqlbackup/files/latest/download
    <-- Automatic MySQL Backup
    <-- bash script da vedere: backup schedulato ...
  http://www.ducea.com/2006/05/27/backup-your-mysql-databases-automatically-with-automysqlbackup/
    <-- tutorial

use PHP to alter the db ref.:
  https://www.supportsages.com/php-script-to-change-mysql-table-prefix/
    <-- script MOLTO interessante
    <-- HTML per leggere le pwd etc.         <-- usare .env ? 

  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <--mysqlcli version for 'copytables'

  https://helloacm.com/duplicate-a-mysql-table-copy-table-duplicate-database-php-script/
    <--  insert --> select  

-----
  http://www.learningaboutelectronics.com/Articles/How-to-rename-a-MySQL-table-using-PHP.php
    <-- PHP script
  https://gist.github.com/yireo/5919293
    <-- gist ~~= al php visto sopra

  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- sembra buono ...


--------------  RENAME  DUMP  database
ref.: https://phoenixnap.com/kb/how-to-rename-a-mysql-database
        <-- rename database
        <-- dump database

  https://stackoverflow.com/questions/22199557/assign-an-existing-user-to-mysql-databases/22199886
    <-- mysql query to grant privileges to user


--------------------------------------------------------------------------- comandi utili:

mysql -u root -pGTH2020_quattro_marzo

10.133.94.60/gtlite_bk/  http://phpmyadmin.gothings.org/db_sql.php?db=gtlite_bk
Your SQL query has been executed successfully.

show grants for 'wpuser'@'10.133.%';

GRANT USAGE ON *.* TO 'wpuser'@'10.133.%' IDENTIFI... 
GRANT ALL PRIVILEGES ON `gtlite`.* TO 'wpuser'@'10... 
GRANT ALL PRIVILEGES ON `gtlite_bk`.* TO 'wpuser'@... 

-------------------------------------------------------------------------------------------

                                                                                      WP Service old
                                                                            Funzione CLEAR DB - fine  |
=====================================================================================================/






----------------------------------------------------------------------------------------------------

=====================================================================================================\
                                                                                         PHP Service  |
                                                                                       topic - START  |

                                                                                        topic - FINE  |
=====================================================================================================/


                                                                                       DA RIGUARDARE
=====================================================================================================\
                                                                                         PHP Service  |
                                                                                           Utilities  |
Pacchetti utili per il debug in una droplet:
  apt -y update
  apt -o Dpkg::Options::=--force-confdef -y install nano curl netcat net-tools telnet

  altri paccetti utili:
  make inetutils-ping dnsutils wget bzip2 locales perl unzip tree adduser

curl nel container:
  curl --verbose localhost

curl da host di php:
  curl --verbose localhost                <-- OK

curl da 'fuori'
  curl --verbose 'http://10.133.94.60'     <-- OK

------------------------------------------------------- Richiesta di servizio PHP da gothings-v01-03

                                                                                                    IN CORSO
curl --verbose 'http://10.133.94.60/template.php'

curl -v -H 'x-ash: bla' -H 'x-num: blu' 'http://10.133.94.60/testcurl.php'
  <-- inserzione di custom header









                                                                                     Utilities -FINE  |
=====================================================================================================/



                                                                      *** PHP Service - v0.00.1 ***
---------------------------------------------------------------------------------------------------\
                                                                                  *** PHP Service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------

                                                                                 *** PHP Service ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@




@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-10-21
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                                   *** Copyright ***

http://placeimg.com/
  <-- downloaded many images - vedi: .../backup1st/icons&images/utility images/placeimg



© 2020 Masuga Design | Follow PlaceIMG on Twitter

Creative Commons Attribution
Author Attribution

Images generated are for layout use only and fall under creative commons licenses.
For extended use please contact the original image author(s) below:

Images from 500px and Flickr.

    Pedro Gómez Fernández
    Flemming Christiansen
    Tay
    Marcell Tóth
    Deepak & Vagisha
    Toper Domingo
    Sumank
    Ganzhya
    Miguel Osvaldo
    Jose Luis Mg
    Mattia Terrando
    Zeb Andrews
    Aproposnix Jones
    Tom Rinkus Jr
    Oliver Weigel
    Evgeny Tchebotarev
    Anokarina
    Johan Larsson
    Aaron Tyree
    Margo Rita
    Ulvi Dashdamirli
    Shridhar Devalla
    Dmitry Kurilo
    Alexander Kuznetsov
    Andor Auber
    Tony Wood
    Jason Barnes
    Meng Tian
    William K
    Koke Di River
    Jay West
    Garry Knight
    Asyraaf Azahari
    Yuell Lisondra
    Alijava
    Frank Vroom
    Lindsey Gee
    Dave Young
    Jenny Downing
    Ramyo
    André Banyai
    Cookbook Man
    Dinner Series
    Dave77459
    Jeffreyw
    Kimtaro
    billywarhol
    lacylouwho

Close
                                                                                   *** Copyright ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@









@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-09-28
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                             *** WP Multisite 04 ***


------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-08-14
                                                                             *** WP Multisite 04 ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                           *** WPMulti v0.01.04 ***
evoluzione di WPMulti v0.01.03
  installazione di wordpress, versione multisite
  strategia di bootstrap in:    GOTHINGS cloud v04     strategia di bootstrap
  conf nginx:  wpm
- il wp multisite WPM e' eseguito sulla droplet gothings v01.03
  --> usa il db nella droplet  gothings-v09
- ancora da aggiustare:
      gocloud-wpm
      wpmdirs.tar.gz

-------------------------- sezioni:

      FUTURO da fare  |  <-- Idee interessanti da fare in futuro

          Dati UTILI  |  <-- informazioni di base & configurazione
        Ref tecniche  |  <-- Riferimenti tecnici utili per wordpress
      Prog Utilities  |  <-- Utility for programming & debug

  expand & creazione  |           <-- note alla seconda installazione (questa e' la terza)
         Fase EXPAND  |                  <-- da completare
           Fase INIT  |                    <-- da rifare ex-novo & documentare a futura memoria
WP multisite install  |  <-- 1.o ~quasi~ funzionamento
   WP secure install  |  <-- usa certbot by letsencrypt                         OK
                             rinnovo automatico del certificato                 DA FARE
              WP-API  |  <-- collegamento da COSE a wordpress                   DA FARE
       Mailgun EMAIL  |  <-- transactions email per l'amministratore            OK - DA ESPANDERE
 Custom Fields - ACF  |  <-- usa custom fields per i dati delle cose            DA VEDERE
  CF7 - Contact Form  |  <-- form per interazioni con l'utente                  IN CORSO
           WP Things  |  <-- memorizzazione delle COSE in wordpress             IN CORSO
         WP WebHooks  |  <-- interazione con wordpress                          DA FARE

    Roba DA GUARDARE  |  <-- references da rivedere in futuro

---------------------------
            Use PODS  |  <-- ABBANDONATO                                        KO


Parti da rivedere & completare:
- installazione WP multisite                                                     da documentare
- securizzazione del db tramite script eseguiti sul db con comandi remoti mysql
    --> vedi PHP Service



=====================================================================================================\
                                                                                            WP Multi  |
                                                                                          Dati UTILI  |

--------------------------------------------------------------------------------
Database server sulla droplet v09:

    Server: 10.133.94.60                   internal network
            wpuser   penna_matita_gomma    wp user & pwd
            104.248.95.29/20               external IP   <-- chiuso dal firewall
            telnet 104.248.95.29 3306      verifica chiusura fw       
    Server type: MariaDB
    Server connection: SSL is not being used
    Server version: 10.4.12-MariaDB-1:10.4.12+maria~bionic - mariadb.org binary distribution
    Protocol version: 10
    User: root@10.133.3.65
    Server charset: cp1252 West European (latin1)

====> aggiustati:
        - firewall per bloccare accesso a mysql dal pubblico  (gothings-public)
        - accesso root & wpuser solo da rete interna

--------------------------------------------------------------------------------
Valori usati nel DB sulla droplet v09

ROOT_PWD_OLD="root_pwd"
ROOT_PWD="GTH2020_quattro_marzo"
WPUSER="wpuser"
WPUSER_PWD="penna_matita_gomma"
WPDATABASE="gtlite"
GOTHINGSNET="10.133.%"
ERRCOUNT=0
LOGFILE="dbconfig.log"

$table_prefix = 'GoTh01_';

--------------------------------------------------------------------------------
===> esempi per mysql da terminale ...

      mysql -u root -pGTH2020_quattro_marzo
      show databases;
      select host, user from mysql.user;
      mysql -u wpuser -ppenna_matita_gomma

      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      ALTER USER 'wpuser'@'172.29.%' IDENTIFIED BY 'penna_matita_gomma';
      ALTER USER 'root'@'172.29.%' IDENTIFIED BY 'GTH2020_quattro_marzo';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.%';

      GRANT ALL PRIVILEGES ON *.* TO 'root'@'172.29.%' IDENTIFIED BY 'GTH2020_quattro_marzo';   ??
      show grants for 'wpuser'@'10.133.%';

    PERICOLOSO!
      DROP DATABASE gtlite;
        <-- as root

                                                                                   Dati UTILI - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                        Ref tecniche  |

----------------------------------------------------------------Riferimenti tecnici utili per wordpress

https://vegibit.com/the-top-100-most-commonly-used-wordpress-functions/
  <-- le 100 funzioni piu' usate

https://css-tricks.com/back-basics-wordpress-css-understanding-native-classes/
  <-- CSS : classi native

https://www.wpbeginner.com/wp-themes/default-wordpress-generated-css-cheat-sheet-for-beginners/
  <-- CSS cheat sheet (beginners)



                                                                                 Ref tecniche - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                  expand & creazione  |
I programmi stanno in wpm:   .../WP-Sviluppi/gothings/wpm/

wordpress sta nella droplet gothings-v01-03:
      ssh yesfi@188.166.70.203

il database mariadb sta nella droplet gothings-v09:
      ssh yesfi@104.248.95.29

Si usano i 'dati utili' riportati sopra

Si aggiusta gocloud-wpm per avere una installazione 'semi-manuale'
  - lo script chiede di fare a mano le operazioni necessarie all'installazione
  - lo script gestisce automaticamente il ciclo di vita del container

------------ expand & creazione contenitore
riepilogo passi preliminari:
- ~/dockrepo/dockimages/wpm/*.json definisce la configurazione della app wpm
- se uno dei file richiesti non esiste lo si scarica da github
    --> si scarica SOLO se non e' presente
    --> puo' essere modificato in loco durante lo sviluppo
  - il file wpmexpand.json
    --> garantisce la presenza iniziale dei dati necessari in:
          ~/dockrepo/sysdata/wpm     per la configurazione


SVILUPPO:
  ===> vedi (circa riga 5300 & 6100):   4.o tentativo
       (precedenti sviluppi wordpress)

                                                                           expand & creazione - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                            WP Multi  |
                                                                                         Fase EXPAND  |

- verifyexpand
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}expand.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'espansione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
    <-- per l'espansione e' richiesta la sudo password di yesfi
    <-- errori nella fase di espansione NON CONSENTONO di andare avanti
                                                                                                    DA FARE
- NOTA di sicurezza:
    - il file di configurazione .env-wp contiene valori NON VALIDI
    - nella fase init .env-wp verra' sostituito con una versione VALIDA e piu' SICURA

======> verifyexpand e' a posto


                                                                                  Fase EXPAND - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                            WP Multi  |
                                                                                           Fase INIT  |

                                                                                                    IN CORSO
- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'inizializzazione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
- il dir dockrepo/sysdata/wp/ DEVE contenere il file di configurazione gothingswp.yml
    <-- se non esiste:  ERRORE 4
- il dir .../docksecrets/${APPNAME} DEVE contenere il file di configurazione .env-${APPNAME}
    <-- VERIFICA:                                                                                   DA FARE
    <-- questo file sara' quello effettivamente usato per la creazione del container
    <-- il file NON E' scaricabile da github per motivi di sicurezza
    <-- il file sara' generato 'in loco' da una apposita app
    <-- per ora, il file e' inserito manualmente

                                                                                                    DA FARE
- aggiustare wpinit.sh:     leggere da wpconfig.json i valori "veri"
                            mettere i valori in wp-config.php
- procedura di lettura valori da tastiera per cambio pwd etc.
- AGGIUSTARE dbsecure.sh    aggiungere una opzione "vai avanti anche se ci sono stati errori"
                              <-- potrebbe servire quando viene eseguita piu' volte
- aggiustare nome container phpmyadmin --> myadminlocal ?  myadmin_l(ocal) ?  myadmin_g(eneric) ?



                                                                                    Fase INIT - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                WP multisite install  |
refs. essenziali:

- ref principale per iniziare il lavoro
    https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
  - seguito 'a posteriori' per definire la struttura
    --> da ri-usare per la configurazione https


- useful hints for wp multisite setup
    https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
  - per organizzare la fase iniziale di installazione del multisite
  - si e' seguito manualmente, si sono fatti esperimenti con le funzioni di php-helper e si
    sono eseguiti cambiamenti di configurazione prima di arrivare ai primi vagiti
    --> va eseguita una nuova installazione passo-passo, a futura memoria
  - utile per definire il wp-config.php
  - utile per organizzare il db
    --> nel nostro caso e' stato fatto indipendentemente e su una droplet differente
  - eseguita creazione di siti, cambi di tema ed installazione plugin

Passi importanti:
- aggiustamenti conf nginx
  - definizione del sito in wpm
    - nomi espliciti per i siti principali
    - aggiunto il dominio base (senza www : gothings.org)
    - NON usato *.gothings.org

SCOGLI trovati:
  - i vari siti sono editabili, ma:
  - il sito www non e' editabile
    --> il CORS non funziona nemmeno dopo molti tentativi ...
  - usato il ref.: https://designanddevelop.com/change-the-primary-blog-in-wordpress-multisite/
    per correggere la tabella OPTIONS  
    --> campo option id=2  option name=home
          option value  http://gothings.org --> http://www.gothings.org
  - ad ora: tutto OK

Passo successivo:
  - aggiungere https
    -->  letsencrypt

DA AGGIUSTARE:
  - sistemare il CORS
    --> provare ad eliminare le aggiunte?


Prove ancora da fare:
  - aggiungere il dominio *.gothings.org


Refs. ancora da vedere:
  https://wordpress.org/plugins/nginx-helper/
    <-- aggiustamenti sulla configurazione nginx per letsencrypt

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- rivedere i consigli sui plugin 'indispensabili'



                                                                         WP multisite install - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                   WP secure install  |


-------------------------------------------------------------------------------------------------------
                                                                              aggiustamenti preliminari
------------------- aggiusta nginx wildcard
- in wpm si abilita *.gothings.org
  --> prove di edit su tutti i siti gia' definiti
      ==> OK
- prova creazione sito
  --> il sito inesistente e' preso in carico da wordpress
      --> questione NOBLOGREDIRECT da risolvere: vedi DA FARE sotto
- il sito creato non e' ancora visibile ...
- eliminato CORS da wpm (in sites_enabled)
- il sito appena creato e' rediretto su https ...
...
  - inizialmente non si vedeva nemmeno correggendo https: --> http:
  - la mattina dopo si vede normalmente
    --> ??
        forse cache, forse DNS vecchio


-------------------------------------------------------------------------------------------------------
                                                                                      prova letsencrypt
ref.s usati:
1.
  https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04
2.
  https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
3.
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- nostro esempio + letsencrypt

--------- ??
- problema: il redirect 80-->443 va fatto su TUTTI i domini?
    --> solo quelli da proteggere funzionerebbe, ma e' meglio di no!
- l'esempio, alla fine, dovrebbe funzionare comunque
    --> cercare di mantenere test.gothings.org fuori dal coro                   DA FARE

==> si sono fatte 3 prove  <-- la terza e' quella giusta


---------------------- 3.a prova

- ref.3: https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
          <-- nostro esempio + letsencrypt
- file netbeans necessari in:  .../gothings/base/dockrepo/sysdata/certbot/
- file eseguibile droplet:  .../dockrepo/sysdata/certbot/go-letsencrypt

    ====>  OK, certificati generati

Situazione dirs:
    .../sysdata/nginxdata/    <-- TUTTI i file necessari a nginx:
.
├── certbot_etc
│   ├── accounts [error opening dir]
│   ├── archive [error opening dir]
│   ├── csr
│   │   └── 0000_csr-certbot.pem
│   ├── etc_letsencrypt.tar.gz
│   ├── keys [error opening dir]
│   ├── live [error opening dir]
│   ├── make_letsencript_bk
│   ├── renewal
│   │   └── gothings.org.conf
│   └── renewal-hooks
│       ├── deploy
│       ├── post
│       └── pre
├── conf.d
│   └── globallog.conf
├── nginx.conf
├── pwd_pma_pass
│   └── dbadmin_pma_pass
├── sites-enabled
│   ├── myadmin
│   └── wpm                  <-- qui aggiungiamo wpms
└── ssl
    ├── bearer.lua
    ├── genkeys
    ├── hliteserver.crt
    └── hliteserver.key
15 directories, 13 files

---------------------------------------
- spezzato wpm in wpm+wpms   <-- parte sicura su wordpress + tutto il resto
- nella droplet, in ~/dockrepo/sysdata/certbot, si usa lo script
      ./go-letsencrypt
  netbeans: .../gothings/base/dockrepo/sysdata/certbot/go-letsencrypt
- restart nginx   <-- RICORDA

==>  seguendo il ref. 3 tutto funziona immediatamente

siti che sono rimasti fuori:
  test.gothings.org                                     <-- verificare sicurezza
  iot.gothings.org                  <-- portare in https                        DA FARE
  phpmyadmin.gothings.org           <-- portare in https

--------------------------------------------------------------------------------
portare phpmyadmin sotto https:
- eliminare myadmin in sites_enabled
- togliere phpmyadmin da sites_enabled/wpm
- aggiungere phpmyadmin con porta 443 a wpms
  --> OK, funziona
  --> certbot da aggiornare                                                     DA FARE

==> ancora NON FUNZIONA bene, non si riesce ad aggiornare le pagine in wordpress
    per la trasformazione http --> https introdotta dal proxy
- va avvertito il wordpress delle situazione:
ref.s:
  https://wordpress.org/support/article/administration-over-ssl/
    <-- suggerimenti ufficiali
  https://stackoverflow.com/questions/30702490/how-to-fix-wordpress-https-issues-when-behind-an-amazon-load-balancer
    <-- consiglio per wp-config.php: togliere pezzetto vecchio HTTP_X_FORWARDED_PROTO
- va anche introdotto il nuovo setheader:
      add_header HTTP_X_FORWARDED_PROTO "https" always;
  nella configurazione nginx

                                                                                IN CORSO


--------------------------------------------------------------
                                                                                DA FARE

- verificare sicurezza di test.gothings.org

- rinnovo automatico
- wildcard domain
    --> cerca:   use wildcard domain letsencrypt
        https://letsencrypt.org/docs/client-options/
        https://letsencrypt.org/docs/client-options/
        https://id-rsa.pub/post/certbot-auto-dns-validation-with-lexicon/
    su premium:
        https://medium.com/@saurabh6790/generate-wildcard-ssl-certificate-using-lets-encrypt-certbot-273e432794d7



altre cose DA FARE:
  https://gist.githubusercontent.com/dejanmarkovic/8323792/raw/1212b3c4ae57bd65964a6878f275eeff3ac70f56/NOBLOGREDIRECT%2520explained%2520and%2520fix
    <-- correzione al NOBLOGREDIRECT


--------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  PROVE VECCHIE

---- ho cercato di riordinare le idee:
  - nginx e' stato generato con l'accesso al dir /etc/letsencrypt/ come previsto da certbot
  - in: .../gothings/base/dockrepo/sysdata/base/gothingscertbot.yml
    abbiamo la dichiarazione per creare il container certbot
  - manca ancora il site-enabled/certbot

--------- ref.1
---------------------- 1.a prova
- 1.a installazione NON automatica, su gothings-v01-03
  - si installa certbot (NO docker)
      sudo add-apt-repository ppa:certbot/certbot
      sudo apt install python-certbot-nginx
      sudo certbot --nginx -d gothings.org -d www.gothings.org
    risponde:
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Plugins selected: Authenticator nginx, Installer nginx
Enter email address (used for urgent renewal and security notices) (Enter 'c' to
cancel):       <-- yesflorence@gmail.com

ERROR  <==== !!!!

---------------------- 2.a prova
ref.:  https://marcotini.com/come-configurare-lets-encrypt-con-nginx
- si lascia la configuirazione wpm  (dovrebbe gia' essere giusta ...
- si segue il tutorial
    --> seleziona caso 1: nginx, solo certificato, NO installer
    --> domini:  gothings.org www.gothings.org
    --> ERRORE:  nginx: [error] invalid PID number "" in "/run/nginx.pid"
        ( stesso errore della 1.a prova)

DIAGNOSI:  certbot va eseguito DENTRO il docker che contiene nginx
           - se lavoriamo con: 'docker exec -ti nginx bash' dovrebbe funzionare ...


Ancora da vedere:
  https://github.com/10up/wp-local-docker
  https://github.com/visiblevc/wordpress-starter
  
  https://wordpress.org/support/article/administration-over-ssl/

?
  https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion/issues/326
    <-- architettura (proxy & letsencrip) + (nginx & php-fpm)
    <-- prestazioni?   (fare prova ??)


                                                                            WP secure install - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                              WP-API  |
Esperimenti per utilizzare WP assiene a GoThings

-------------------------------  Plugins utili (?)


Akismet Anti-Spam
ARI Adminer
BackWPup
Debug This
Duplicate Page
Hello Dolly
Increase Maximum Upload File Size
Jetpack by WordPress.com
Mailgun
Page Builder by SiteOrigin
SiteOrigin CSS
SiteOrigin Widgets Bundle
Widgets for SiteOrigin
WP Rollback

Duplicator                                     <-- site migration & backup
                                                   (free == no multisite?)

-------------------------------  Consigli Woojon:

olsen light theme

Admin Menu Editor
WP Custom Admin Interface

-------------------------------------------------
-------------------------------------------------

-------------------------------  Temi hlitetech

Ample
Caos
Creative Blog
Slightly
Twenty Fifteen
Twenty Seventeen
Twenty Sixteen

-------------------------------  Temi attivati

Twenty *
olsen light theme
...

-------------------------------------------------
-------------------------------------------------


--- vedi sotto:    Advanced Custom Fields - ACF  |


shortcodes ultimate:
  https://wordpress.org/plugins/shortcodes-ultimate/
  https://getshortcodes.com/docs/post-meta/


https://since1979.dev/add-custom-acf-fields-to-the-wp-rest-api/


- per ora si lascia tutto nelle tabelle meta del DB di WP
- fare prove sui siti:   www   things   wpwork





------------------------------------------------------------------------------  PROVA  DA FARE
-------  Shortcodes Ultimate - SU

- si installa SU
- si prova qualche shortcode predefinito

- si lavora su:   things.*
  -

- si testa https://getshortcodes.com/docs/post-meta/
   <-- riece a leggere un field da ACF ?
- fare prove sui fields definiti con ACF



---- tutorials
https://d5creation.com/shortcodes-ultimate/
  <-- esempio interessante, con custom field

-------------------------------------------altre prove DA FARE
https://getshortcodes.com/docs/ajax/
  <-- si riesce a far girare un "aggiornatore" js?
      lo potremmo collegare ad un service che remotizza i dati della raspberry

https://getshortcodes.com/add-ons/add-ons-bundle/
  <-- Shortcode Creator: forse possiamo costruire uno shortcode "universale"
      per leggere valori da una nostra API

https://gist.github.com/kosso/47004c9fa71920b441f3cd0c35894409
  <-- un plugin-demo per aggiungere custom fields a REST API
----------------------------------------------------------------

--------------------------------------------------------------------------------
                                                                                DA FARE
- si verifica la wordpress rest API
- si va al passo successivo



----------------------------------------------------------------  DA CONSIDERARE
https://themify.me/builder
  <-- page builder, vedere se puo' sostituire Site Origin Builder

https://it.wordpress.org/plugins/custom-field-suite/
  <-- forse e' piu' interessante di ACF

https://deliciousbrains.com/creating-custom-table-php-wordpress/
  <-- tutorial per creare tabelle nel DB

https://mac-blog.org.ua/wordpress-custom-database-table-example-full/
  <-- plugin per creare una tabella nel database                                DA VEDERE MEGLIO

https://wordpress.org/plugins/shortcodes-ultimate/
  <-- interessante & molto usato ...                                            DA VEDERE MEGLIO

https://premium.wpmudev.org/blog/creating-database-tables-for-plugins/
  <-- 

----> SHORTCODES?
https://wordpress.org/plugins/snippy/
  <-- una specie di assemblatore (di 'bits') per costruire i tuoi shortcodes

https://wordpress.org/plugins/synved-shortcodes/
  <-- obsoleto, ma contiene un editor di shortcodes per inserire tue modifiche ...

http://applyfilters.fm/podcast/episode-12-custom-tables/
  <--


----> CHILD THEMES?
https://wordpress.stackexchange.com/questions/51984/how-to-display-data-from-custom-table-in-wordpress-database
  <-- read data from custom table


https://wordpress.org/plugins/simple-custom-post-order/#%0Ais%20simple%20custom%20post%20order%20free%3F%0A
  <-- ordinare una lista di post ???

https://www.wpbeginner.com/wp-tutorials/wordpress-custom-fields-101-tips-tricks-and-hacks/
  <-- vademecum interessante

------ uso di FORMS
https://stackoverflow.com/questions/34186926/is-it-possible-to-place-a-http-post-and-get-request-for-a-specific-button-click
  <-- esempio di HTTP-CLIENT che 'riempe' un form

https://contactform7.com/
  <-- e' possibile mettere dati nel WP DB 
  <-- add-on utile:  


--------------------------------------------------------------------------------
-------------------------------------------------- ref.s per il passo successivo

-------------------------------------- Site Builder by Site Origin
https://it.wordpress.org/plugins/siteorigin-panels/
  <-- funziona anche nel multisite
      <-- network activate + configure each site - eventually: export/import
  <-- doc: https://siteorigin.com/page-builder/documentation/
  <-- widget: https://siteorigin.com/docs/page-builder/
  <-- widgwet bundle: https://siteorigin.com/docs/widgets-bundle/
  <-- prova il tema: polestar
  <-- usa Duplicator per migrare il plugin
  <-- multilanguage: consigliato il plugin:
        https://wordpress.org/plugins/polylang/
---------------------------------------------------------------------

cerca:  "wordpress plugin design tutorial"
  <-- se devi sviluppare un plugin

https://barn2.co.uk/pods-wordpress-custom-post-types-fields-taxonomies/
  <-- pods tutorial
  <-- DA LEGGERE prima di andare avanti

---------- ref pods spostati in pods ---


--------------------------------------------------------------------------------
--------------------------------------------------------- plugins da considerare

https://it.wordpress.org/plugins/wp-private-content-plus/
  <--sembra avere le funzioni che servono

https://it.wordpress.org/plugins/jonradio-private-site/
  <-- da vedere

https://wordpress.org/plugins/subway/
  <-- forza il login ...


------------------------------------------------------------  Tutorial DA VEDERE
https://usersinsights.com/wordpress-private-page/
  <--



--------------------------------------------------------------------------------
----------------------------------------------------- altre ref.s da considerare

-------------------- utenti
https://wordpress.org/plugins/user-switching/
  https://www.wpbeginner.com/plugins/how-to-instantly-switch-between-user-accounts-in-wordpress/

https://wordpress.org/plugins/fakerpress/
  <-- random content


-------------------- varie

https://developer.wordpress.com/calypso/
https://github.com/Automattic/wp-calypso
  <-- una SPA come front-end WP, con uso della REST API
  <=========== NO : usa l'hosting di wordpress.com ..


https://www.wpbeginner.com/wp-tutorials/wordpress-custom-fields-101-tips-tricks-and-hacks/
  <-- tutorial su Custom Fields

https://rapidapi.com/blog/how-to-call-an-api-from-wordpress/
  <-- al contrario: vai da WP ad una api esterna !!
https://rapidapi.com/blog/integrate-external-api-wordpress/
      <-- copiati su pocket: wp api plugin

https://www.toptal.com/wordpress/beginners-guide-wordpress-rest-api
  <-- un interessante esempio WP REST API sviluppato su codepen
  <--                                                   codepen DA VEDERE ?

https://www.sitepoint.com/feathers-js-guide/
  <-- feathersjs : costruisci un API server con express/nodejs
https://morphatic.com/2019/04/15/why-i-choose-feathersjs-as-my-api-framework-of-choice-when-working-with-college-students/
  <-- altra discussione su feathersjs


-------------------------------------------------
-------------------------------------------------


---------------------------------  NOTE di sviluppo
- definito un secondo sito:   cloud.gothings.org                          <== OK

- Installato backwpup                                                     <== OK
  --> ref.: https://libre-software.net/wordpress-multisite-free-backup-plugins/
              <-- il migliore e' backwpup
  - effettuato backup 2 volte: il DB e' nel file: gtlite.sql

- upgrade a WP version 5.4.2
  --> NON va: serve un accesso ftp o sftp                                       DA FARE

- proviamo a fare una migrazione con backwpup + wordpress export
  - definito & scaricato
       

-------------------------------------------------
-------------------------------------------------

---------------------------------------- DA VEDERE

  https://since1979.dev/add-custom-acf-fields-to-the-wp-rest-api/
    <-- sembra buono

  https://www.gavsblog.com/blog/adding-fields-to-the-wordpress-rest-api
    <-- Extending the WordPress API 

  https://wordpress.org/plugins/acf-to-rest-api/
  https://github.com/airesvsg/acf-to-rest-api
    <-- ACF to api

  https://www.wpbeginner.com/wp-tutorials/wordpress-custom-fields-101-tips-tricks-and-hacks/
    <-- interessante

  https://wordpress.org/support/topic/custom-field-data-and-custom-rest-api-fields/
    <-- ??

  https://wordpress.org/plugins/custom-field-list-widget/

  https://wordpress.org/plugins/get-custom-field-values/
  https://coffee2code.com/wp-plugins/get-custom-field-values/
    <--  DA VEDERE !!


------------------------------------  RISULTATO ??

https://it.wordpress.org/plugins/custom-field-suite/
  <-- add custom fields to your posts


-------------------------------------------------
-------------------------------------------------


--------------------------------------------------------------------------------
--------------------------------------------------------------------  Prova PODS
                                                               NON SONO RIUSCITO AD USARE I PODS !!
- prova PODS ref.s:
    https://blog.stefanxo.com/2014/02/how-to-create-a-pods-page/
      <-- tutorial 'esterno'
    https://docs.pods.io/tutorials/choosing-pods-advanced-content-types-and-pods-pages/
      <-- tutorial 'interno'

- problema multisite:
    <-- va DISATTIVATO a livello network e abilitato sul singolo sito
        --> superadmin gestisce le definizioni
        --> pare sia possibile attivare i singoli site-admin
        --> il superadmin vede il Pods Admin sui singoli siti
            ==> attivato su wpwork & things
Prove:
- si gestisce qualche pagina di esempio
                                                                                IN CORSO
------------ tentiamo una tassonomia su things.gothings.org

  sensor --> genre -->  analog, counter, boolean

  sensor --> admin       
             --> Author  (per controllo accesso)  <ruolo?

provare il tutorial:
https://themify.me/blog/property-listing-builder-pro-pods

altre ref.s:
https://designtlc.com/using-pods-create-simple-effective-custom-post-types/
  <-- esempio tassonomie (4 tax) per uno studio legale (1 CPT)

https://www.fixrunner.com/custom-wordpress-taxonomy/
  <-- tutorial di base

https://www.tsohost.com/blog/how-to-create-custom-post-types-in-wordpress-the-right-way
  <-- tutorial di base

https://www.wpbeginner.com/glossary/category/
  <-- tutorial di base

https://wordpress.stackexchange.com/questions/289211/allowing-admins-to-edit-pod-templates-on-a-network-multisite-install
  <-- abilita i site-administrators nel multisite


-------------???
entities:
    thing       --> sensor   --> thg_user
    thg_user    <=> thing
    sensor  --> [values]

====> domanda: se si defiscono nuovi Content Types o Taxonomies, vanno su tutti
      i singoli siti o funzionano sito per sito singolarmente?

======> PODS abbandonato
        non sono riuscito a far vedere un valore da un pod in una pagina


------------------------------------------------------- ref pods archiviati qui:
https://docs.pods.io/getting-started/beginners-quick-start/
  <-- leggere per cominciare

https://docs.pods.io/tutorials/
  <-- un sacco di tutorials

https://pods.io/
  <-- sito ufficiale


https://pods.io/docs/build/extending-core-wordpress-rest-api-routes-with-pods/
  <-- ?

https://pods.io/docs/learn/what-is-pods/
  <-- ?

https://www.ostraining.com/blog/wordpress/introduction-to-pods/
  <-- tutorial di base
  <-- come definire template (for books)

--------------------------------------------------------------------------------

                                                                                       WP-API - fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                            WP Multi  |
                                                                        Advanced Custom Fields - ACF  |

--------------------------------------------------  Advanced Custom Fields - ACF

- si prova a far lavorare insieme ACF & Shortcodes Ultimate
- si installa ACF
  - NON attivare come network
  - si attiva su www
  - si attiva e si vede anche su altri siti
- definita la categoria 'meter' (simile a quanto fatto con pods)
- seguiamo i tutorials:
    https://www.advancedcustomfields.com/resources/creating-a-field-group/
      <-- abbiamo definito il gruppo 'meter'
      <-- abbiamo definito il gruppo 'thing'
      per estendere il concetto:  https://www.advancedcustomfields.com/resources/field-settings/
    https://www.advancedcustomfields.com/resources/getting-started-with-acf/
      <-- guardiamo in parallelo:  https://kinsta.com/it/blog/advanced-custom-fields/
      - aggiungiamo una pagina su www.*

-----> PROVA attuale
ref.:  https://itsmereal.com/frontend-post-submission-edit-advanced-custom-fields/
         <-- template, form <-- ACF create
         <-- needs PHP programming
esito:
  title:          thing 01
shortcode:        [acf field=”thing_ip_address” post_id=”118″]                                                                                                                                                                         
va alla pagina:   https://things.gothings.org/2020/09/15/thing-01/
====> da verificare come funziona
  - Funziona, ma la logica sembra diversa da quanto ci serve
    ====> RIPROVARE dopo aver visto come funziona il collegamento con CF7

--------- ref. ACF + CF7
https://www.advancedcustomfields.com/resources/code-examples/
https://www.advancedcustomfields.com/resources/displaying-custom-field-values-in-your-theme/
  <-- php interessanti per le operazioni di base

spezzoni di codice utili:
  http://penguin-arts.com/how-to-create-custom-post-type-from-contact-form-7/
  https://penguin-arts.com/how-to-update-acf-fields-with-contact-form-7/

https://wordpress.stackexchange.com/questions/287893/acf-contact-form-7
  <-- php snippet per visualizzare un ACF in un field CF7

https://support.advancedcustomfields.com/forums/topic/get-all-fields-by-group-id/
  <-- php snippet per ottenere tutti i fields di un gruppo


-->
https://studio.bio/making-advanced-custom-fields-acf-work-for-you-and-your-clients/
  <-- esempio INTERSSANTE : da provare!


                                                                                SONO QUI


-----> PROVE non portate in fondo ...

https://www.andreadegiovine.it/risorse/plugin/custom-post-types?doc
  <-- plugin DA PROVARE !

----- definizione di pagine specifiche per i custom fields

----- PROVA iniziale
ref.:
https://moometric.com/integrations/wp/contact-form-7-zapier-webhook-json-post/
  <-- vedi webhooks



ref. per i templates:
  https://www.greengeeks.com/tutorials/article/how-to-create-a-custom-wordpress-page-template/
  https://www.greengeeks.com/tutorials/article/how-to-create-a-template-for-a-single-post-in-wordpress/
  https://www.greengeeks.com/tutorials/article/create-add-custom-page-templates-wordpress/
    <-- beginner's instructions

                                                                                SONO QUI


=== sto cercando tutorials ....
https://torquemag.io/2016/04/use-advanced-custom-fields-depth-tutorial/
  <-- esteso tutorial di base


                                                                 Advanced Custom Fields - ACF - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                      Prog Utilities  |

-------------------------------------------------------------  Utility for programming & debug


https://wordpress.org/plugins/user-switching/
  <-- cambio di uetente VELOCE

https://wordpress.org/plugins/debug-this/
  <-- consente il debug su singoli elementi utili

https://wordpress.org/plugins/quick-edit-template-link/
  <-- debug template

---- Future Utilities ??

https://wordpress.org/plugins/page-scroll-to-id/
  <-- utile per gestire le ancore anche non-header

https://wordpress.org/plugins/redis-cache/
https://wordpress.org/plugins/wp-redis/
  <-- REDIS object cache
https://wordpress.org/plugins/optimize-redis-post-views/
  <-- REDIS post counter (esempio di programmazione redis?)

https://wordpress.org/plugins/nginx-helper/
  <-- NGINX


                                                                               Prog Utilities - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                           WP Things  |
memorizzazione delle COSE in wordpress

strategie diverse nelle varie fasi?

------------------------ Str 0
Things key nel plugin Profile Extra Fields
- pro:
  - gestione front & back OK
- con:
  - da fare shortcode per far vedere i fields nei sub-sites
- alternative:
    passare da acf?


------------------------ Str 1
Define Things using Advanced Custom Fileds (ACF)
  --> use the 'user' custom field type
- pro:
  - dovrebbe funzionare dappertutto
- con:
  - non e' immediato ... vanno capite diverse cose ...
  - DA INVESTIGARE
- alternative:
    ??
refs.:
Official doc
https://www.advancedcustomfields.com/resources/create-a-front-end-form/
  <-- front-end form
https://www.advancedcustomfields.com/resources/user/
  <-- doc: user field



https://www.quickcleancode.com/how-to-use-advanced-custom-fields-to-create-user-groups/
  <-- acf user group
https://usersinsights.com/acf-user-profile/
  <-- create user profile
https://noface.co.uk/user-profiles-advanced-custom-fields/
  <-- esempio user profile
https://adaptiveweb.com.au/handle-post-and-get-requests-in-wordpress-using-admin-post-php/
  <-- helper per sopra


https://adaptiveweb.com.au/use-acf-form-to-update-custom-user-fields/
  <-- esempio completo ...   ?
https://adaptiveweb.com.au/handle-post-and-get-requests-in-wordpress-using-admin-post-php/
  <-- aux per sopra


--------------------------------------------------------------------------------
Prerequisite:                                               Shortcode GET DB ROW

Appare consigliabile usare tabelle specifiche per le COSE:
- Ci si puo' svincolare da modifiche & ridefinizioni di wordpress db
- e' possibile sviluppare plugin diversi per scopi e/o siti diversi
--> serve programmare l'accesso al db

----- Lettura da una tabella
- la facciamo con uno shortcode per poter scrivere nel front-end
refs:
https://developer.wordpress.org/reference/functions/shortcode_atts/
  <-- definizione degli argomenti dello shortcode

https://developer.wordpress.org/reference/classes/wpdb/prepare/
https://www.wpbeginner.com/wp-tutorials/how-to-add-a-shortcode-in-wordpress/
https://wordpress.stackexchange.com/questions/330498/wordpress-shortcode-show-database-row
  <-- shortcode che LEGGE una riga del DB
  <-- tabella prefissata
  <-- prova eseguita OK!

----- Lettura tabelle 'network'
- user & altre tabelle globali sono raggiunte usando:  $wpdb->base_prefix

https://codex.wordpress.org/Creating_Tables_with_Plugins
  <-- regole per le tabelle del DB
  <-- esempi di creazione & init
- va aggiustato il prefisso:  $wpdb->base_prefix

======> FUNZIONA
        la prova 4 fornisce il valore del campo richiesto
        fatto un minimo di test, direi che e' accettabile

----
altri ref.s parzialmente utili:
  
https://www.smashingmagazine.com/2012/05/wordpress-shortcodes-complete-guide/
  <-- tutorials sugli shortcode

https://codex.wordpress.org/Shortcode_API
  <-- API

https://stackoverflow.com/questions/55718614/shortcode-attributes-that-query-the-database
  <-- shorcode che LEGGE una riga del DB

https://generatewp.com/snippet/bbpr7y8/
  <-- esempio shortcode dbquery

https://portalintegrators.com/wordpress-shortcode-with-database/
  <-- esempio che SCRIVE nel DB

https://stackoverflow.com/questions/42177033/retrieve-data-from-database-using-shortcode
  <-- esempio che legge (non chiaro, usa la funzione shortcode_atts)


--------------------------------------------------------------------------------
------------------------------------------------------------ acf GROUPS & FIELDS
scopo: get all fields / groups
refs. :
https://www.grzegorowski.com/how-to-get-list-of-all-acf-fields
  <-- ritorna tutti i field come [post_name->post_title]
  <-- e' stato MOLTO utile
https://support.advancedcustomfields.com/forums/topic/how-to-get-all-acf-groups-or-field-for-specific-post-type/
  <-- esempio di query sul db, con join (post, postmeta), per avere groups con determinate rules


https://dream-encode.com/acf-get-all-fields-in-a-field-group/
  <-- esempio per avere i fields appartenenti ad un gruppo
https://support.advancedcustomfields.com/forums/topic/get-all-field-groups-related-to-post/
  <-- simile a sopra, menziona il 'local ISON': https://www.advancedcustomfields.com/resources/local-json/
  <-- potrebbe essere utile in futuro

- in db-posts i post_type che servono sono solo:   acf-field-group  &  acf-field

vedi:  acf on frontend  |

-------------------------------------- template per i test

1.a prova:
  - si prova a stampare TUTTI gli acf-field-group & fields
  - template name:  listing-things.php
  pagina:  https://things.gothings.org/test-pages/debug-things/
  Stampa il gruppo seguito dai relativi fields
    <-- si leggono i valori da db
    <-- possiamo costruire array dei valori che ci interessano
    <-- sono SOLO le definizioni
    <-- i valori utente vanno ancora trovati !!!
  ref che sono stati utili:
    https://www.grzegorowski.com/how-to-get-list-of-all-acf-fields
    https://www.smashingmagazine.com/2015/06/wordpress-custom-page-templates/

potrebbe essere utile anche:
  https://support.advancedcustomfields.com/forums/topic/how-to-get-all-acf-groups-or-field-for-specific-post-type/
  https://dream-encode.com/acf-get-all-fields-in-a-field-group/


Come si trovano i valori per il singolo utente ?



------------------------------------------------------------------------ FUTURO?
https://metabox.io/plugins/mb-user-meta/
  <-- Sembra risolutivo ...                                DA VERIFICARE
  <-- 39$ unlimited sites/1 year support ...
  <-- il metabox base potrebbe comunque essere utile ...
  <-- elimina o no il bisogno di ACF?
      <-- no, e' necessario usare MB Custom Tables, che costa 49$



                                                                                    WP Things - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                     User management  |
*** COPIA VECCHIA ***
--------------------------------------------------------------------------------
--------------------------------------  personalizzazione della DASHBOARD utente
refs:
https://wordpress.org/plugins/frontend-dashboard/
  <-- plugin per spostare la dashboard utente nel fron-end
  <-- caricati anche plugin accessori per template ed altro ...

====> grande CONFUSIONE !!
        <-- si sovrappone a theme-my-login
        <-- si sovrappone anche a profile-extra-fields
          <== servira' un lavoro di ricucitura                                  DA FARE



VERIFICARE se puo' sostituire theme-my-login

--------------------------------------------------------------------------------
------------------------------------------  shortcode: display user display name

- utility per mostrare il nome utente nel front-end
https://www.webhostinghero.com/show-username-in-wordpress-sidebar/
  <-- shortcode to display current username


--------------------------------------------------------------------------------
----------------------------------------------------------  login & registration
Scopo:
  gestire la registrazione utente nel multisite

https://wordpress.org/plugins/theme-my-login/#%0Awhere%20can%20i%20find%20documentation%3F%0A
  <-- plugin per il login
  <-- usato anche se ha inconvenienti (vedi sotto)

https://docs.thememylogin.com/
  <-- installato plugin per la pagina di login
https://www.wpbeginner.com/plugins/how-to-create-custom-login-page-for-wordpress/
  <-- tutorial
- non e' stato banale e ci sono alcuni inconvenienti
  - il plugin esegue redirect strani e interferisce con i menu
  - un rimedio e' usare custom link nei menu mandando tutto su www
- il file .../admin/settings.php e' stato aggiustato come indicato in:
    https://wordpress.org/support/topic/multisite-error-options-page-not-found/
====> vanno aggiustati i menu di TUTTI i siti                                   IN CORSO
- la definizione dei redirect e' quella default
====> i link 'lost password' & 'reset password' vanno testati                   IN CORSO

----> registration
--> si sono usati i campi condizionati
      <--  hanno funzionato
--> da verificare se servono per il sito things
- L'utente e' unico, ma deve registrarsi sugli altri siti:
    things    serve per le COSE
    cloud     serve per i servizi cloud
    ?         -- la cosa va studiata --
  - per ora si fa a mano
  - verificare se la cosa e' semplificata nel form (dati default?)
    --> login su things
====> registrazione automatica su n siti dopo www                               DA FARE
  --> vanno modificati i menu di login


--------------------------------------------------------------------------------
---------------------------------------------------------  v.2 user registration 
ref. da vedere:
https://wordpress.org/plugins/user-registration/
  <-- buono, da vedere ...
https://wordpress.org/plugins/ultimate-member/
  <-- sembra molto completo
  <-- vedere cosa puo' sostituire
  <-- da vedere il funzionamento sul multisite: un login X sito?

https://wordpress.org/plugins/paid-member-subscriptions/
  <-- sembra buono
  <-- si integra con elementor
  <-- SEMBRA facile da usare ...
https://wordpress.org/plugins/ht-contactform/            <-- VEDERE & AGGIORNARE


--------------------------------------------------------------------------------
------------------ gestione things Secret
- pagina di richiesta del segreto                                               IN CORSO
    <-- prova 1: verifica spedizione email con i dati
                                                                                SONO QUI


---------------------------------------------------------------------  DA VEDERE

https://wordpress.org/plugins/complianz-gdpr/
  <-- cookie legality for GDPR (sembra molto completo)


                                                                              User management - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                  CF7 - Contact Form  |


Contact Form 7 permette di usare il contact form per cercare la COSA nel DB

Obiettivi:
- Realizzare la pagina FIND-MY-RASPI
  - permettere a chiunque di trovare l'indirizzo locale della sua raspi
      <-- anche SENZA fare nient'altro
      <-- nel caso che utilizi GOTHINGS
          <-- in realta' e' ancora da fare !!!
  - permettere una facile iscrizione al sito
      <-- da VERIFICARE
  - aggiornare i dati di utente
      <-- procedimento ancora da chiarire

----------------------------------------------------------------------- fase 0 -
- verificare che 'potrebbe anche funzionare'
    <-- e' possibile interagire con i dati di utente e quelli della raspi
    <-- forse serve un plugin apposito
  <== visto un monte di references (per i vagamente utili vedi i ref cf7 sotto)


----------------------------------------------------------------------- fase 1 -
- prova di uso del plugin 'profile extra fields'
refs:
https://wordpress.org/plugins/profile-extra-fields/
  <-- sembra vicino a quello che serve ...
https://docs.google.com/document/d/1dS8WUgdJOa4O5Ft48oe3z4iGTyN0cXC-SBBDoeHbChk
  <-- guida
<-- vedi anche i REF cf7 sotto
https://support.bestwebsoft.com/hc/en-us
  <-- SUPPORTO - user: gloves    pwd: pippolino.20

--- Strategia
Verificare che il passaggio dati avvenga con sufficiente affidabilita',
ovvero che i dati vengano sempre conservati nel profilo dell'utente

<-- ora il plugin e' abilitato sul network

---> Ha avuto fasi alterne ...
- sembra funzionare OK su www
- lo shorcode per la tabella sembra funzionare OK
- lo shortcode per i fields NON funziona su things

===> la cosa e' preoccupante, ma non decisiva ...
     proseguiamo le prove per vedere cosa succede

------------------------------------------------ errore extra fields:
subj: On WP multisite the prflxtrflds_field shortcode functions on main site only
message:
Shortcode prflxtrflds_user_data functions perfectly, it renders the required table on every site of my multisite experimental installation.
However,  the prflxtrflds_field shortcode functions on main site only, it never returns data on any of the other sites in the installation.
I need access to the current user extra data fields on every site. Is there anything I can do?
Thank you for your help.
----> aggiunto nella richiesta agli autori:
Best regards,
Franco
PS- access to test page:
https://things.gothings.org/users/things-access/
user:  user10
user login pwd: testuser10pwd
user email: testuser10@gothings.org
----> NON si riesce a postare senza una licenza,
      posto il quesito sopra su wordpress.org
-------------------------------------------------------------------


----------------------------------------------------------------------- Fase 2 -
- prova di funzionamento della strategia prevista
--- Strategia
- si usa il form cf7 per far immettere dall'utente attuale un segreto
- si esegue un codice nostro PRIMA dell'invio della mail
--> l'utente vedra' il risultato dell'operazione nella pagina eseguita
    dopo l'invio, con un link html alla raspi sulla LAN
--> eventuale email di verifica all'utente                           <-- DA FARE in una fase successiva
Refs.:
https://contactform7.com/setting-default-values-to-the-logged-in-user/
  <-- riferimenti dell'utente nella form
  <-- sembrano funzionare sempre
https://www.wpguru.com.au/generate-dynamic-tag-contact-form-7/
  <-- dynamic tags

- pagina di richiesta del segreto
    <-- ricordarsi di metterlo in un campo invisibile dalla email               DA FARE

------ Analisi del funzionamento di extra fields
Premessa:
- esistono gli "usermeta", globali nel multisite ...
- sono usabili:
  ref. https://carlofontanos.com/adding-extra-user-profile-fields-in-wordpress-admin/
- il plugin "Profile Extra Fields" memorizza i dati in tabelle globali di tipo:
    GoTh01_prflxtrflds_fields_id          field_id field_name required show_default show_always description field_type_id
                                            <-- associazione con la definizione del campo
    GoTh01_prflxtrflds_fields_meta        meta_id  field_id  show_in  value 
                                            <-- visibilita?
    GoTh01_prflxtrflds_fields_values      value_id  field_id  value_name  order
                                            <-- associazione con il tipo di valore del campo
    GoTh01_prflxtrflds_roles_and_fields   role_id  field_id  field_order  editable  visible
                                            <-- visibilita & ruoli
    GoTh01_prflxtrflds_roles_id           role_id  role  role_name
                                            <-- associazione numero --> ruolo
    GoTh01_prflxtrflds_user_field_data    id  field_id  user_id  user_value
                                            <-- tabella dei valori per fields e user
    GoTh01_prflxtrflds_user_roles         user_id  role_id
                                            <-- associazione user --> # di ruolo

===> "Profile Extra Fields" sembra ideale per le operazioni di immissione
     dei campi extra nel profilo di utente
- la pagina del find-my-raspi puo' semplicemente chiedere il segreto e farne
  l'acquisizione SENZA il contributo del plugin
- sembra davvero la 'separation of concern' maggiore possibile:
    --> extra fields sistema l'acquisizione del valore sia in front- che in back-end
    --> la verifica viene fatta da PHP sul lato server



--------------------------------------------------------------------------------
======> Fasi future (idee) ...

- opzione per registrare l'utente

- dopo n email: avvisare l'utente

- non mandare l'email (se gia' mandata ...)

- verifica sendgrid:
    https://wordpress.org/plugins/sendgrid-email-delivery-simplified/
      <-- al posto di mailgun?

--------------------------------------------------------------------------------
======> Fasi ancora da vedere ...

------------------------------------------------------------------------- fase a
- aggiungere la registrazione dell'utente
  refs.:
    https://www.mootpoint.org/blog/wordpress-contact-form-7-user-registration/
      <-- esempio di programmazione per la verifica dei dati
    https://wordpress.org/plugins/frontend-registration-contact-form-7/
      <-- aggiunge la registrazione dell'utente


------------------------------------------------------------------------- fase b
- usare il 'partecipant DB'
  --> DB indipendente per le COSE
  --> interfacce front & back con il WP
  --> accesso lato API personalizzabile
- verificare funzionamento & stabilita'
https://wordpress.org/plugins/participants-database/
  <-- plugin utile                                                              <-- DA VERIFICARE
https://xnau.com/work/wordpress-plugins/participants-database/gdpr-compliance-and-participants-database/
  <-- considerazioni GDPR


------------------------------------------------------------------------- fase c
- usare un 'member' plugin
https://usersinsights.com/wordpress-user-profile-front-end/
  <-- verificare la leggibilita' dei dati di utente ...                         <-- DA VERIFICARE


------------------------------------------------------------------------- fase d
- usare un ninja tables
https://wordpress.org/plugins/ninja-tables/
  <-- sembra avere molte/quasi tutte le capability che servono ...              <-- DA VERIFICARE
https://wpmanageninja.com/docs/ninja-tables/configuring-tables/frontend-editing/
  <-- doc per rendere 'private to user' i dati immessi nel front-end

- verificare funzionamento & stabilita':
  --> DB indipendente per le COSE       ?
  --> interfacce front & back con il WP ?
  --> accesso lato API personalizzabile ?


------------------------------------------------------------------------- fase f  NO
- usare 'metaBOX'                                      a PAGAMENTO - ed e' caro!
https://wordpress.org/plugins/meta-box/
  <-- anche questo sembra usabile                     - complicato da capire ...
https://docs.metabox.io/extensions/mb-user-meta/
  <-- estensione per metabox


--------------------------------------------------------------------------------
----------------------------------------------------------------------- REFS 
https://www.youcanwp.com/contact-form-7-tutorial-from-beginner-to-pro/
  <-- tutorial completo, interessante

https://contactform7.com/editing-form-template/
https://themeisle.com/blog/how-to-set-up-contact-form-7/
  <--Consigli utili per riempire la form

-------- Ref. usati per lo sviluppo:
https://contactform7.com/docs/
  <-- DOC base originale
https://sevenspark.com/docs/contact-form-7-dynamic-text-extension/quick-start
  <-- gestione dei campi dinamici

https://www.elegantthemes.com/blog/tips-tricks/how-to-customize-the-style-of-contact-form-7-to-match-your-website
  <-- aggiustamenti sullo stile del form

-------- Ref. per gli sviluppi:
https://itsmereal.com/frontend-post-submission-edit-advanced-custom-fields/
  <-- edit advanced custom field ACF
  <-- codice per far funzionare bottoni e altro nel front-end
  <--  "  "   "  mostrare cose all'autore del post ... e altro ...
https://penguin-arts.com/how-to-update-acf-fields-with-contact-form-7/
  <-- collegamento tra cf7 & acf
https://www.howtosolutions.net/2020/05/wordpress-contact-form-7-fixing-shortcode-not-working-template-mail-body/
  <-- per mettere shortcodes nella form cf7
https://contactform7.com/getting-default-values-from-shortcode-attributes/
  <-- shortcode & attributi ...  NON E' CHIARO!

https://blog.cf7skins.com/save-contact-form-7-wordpress-database/
  <-- interessante
https://wordpress.org/plugins/contact-form-7-skins/
  <-- plugin per migliorare l'aspetto ...
https://blog.cf7skins.com/use-a-suitable-from-address-in-contact-form-7/
  <-- consigli utili

https://contactform7.com/2018/04/16/how-to-make-privacy-friendly-contact-forms/
  <-- consigli GDPR

https://wordpress.org/plugins/contact-form-7-honeypot/
  <-- honeypot anti-spam per cf7

https://wordpress.org/plugins/wpcf7-redirect/
  <-- redirect after submit

https://sos-wp.it/come-modificare-e-personalizzare-il-layout-di-contact-form-7/
  <-- ??

https://wordpress.org/plugins/cf7-grid-layout/
  <-- sembra avere un tag cf7 per aggiungere i custom fields       DA CONFERMARE

https://wordpress.stackexchange.com/questions/287893/acf-contact-form-7
  <-- php snippet per visualizzare un ACF in un field CF7

https://carlofontanos.com/adding-extra-user-profile-fields-in-wordpress-admin/
  <-- esempio di aggiunta campi al profilo (campi standard)
  <-- potenzialmente sostituisce il plugin 'profile extra fields'

https://stackoverflow.com/questions/56533702/cf7-hiding-wpcf7-mail-sent-ok-after-5-seconds
  <-- tecnica interessante per il 'dopo submit'


                                                                           CF7 - Contact Form - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                       Mailgun EMAIL  |
-----------------------------------  Set mail sending on multisite using mailgun

Servizio esterno: MAILGUN

-------------  configurazione mailgun
- subdomain:  mailthing.gothings.org
- DNS su namecheap / privatemail            <-- vedi sotto:  Aggiunte in privatemail:
- plugin:  MAILGUN
- wp-config.php:
      define('MAILGUN_USEAPI', true);
      define('MAILGUN_APIKEY', '258c7e70eb0ce3d00ce57143a5169c0b-bd350f28-370c54f9');
      define('MAILGUN_DOMAIN', 'mailthing.gothings.org' );
      define('MAILGUN_SECURE', true);
      // Set the from name and from address
      define('MAILGUN_FROM_NAME', 'WP Admin');
      define('MAILGUN_FROM_ADDRESS', 'wpadmin@gothings.org');

ref.s:
https://app.eu.mailgun.com/
  <-- connessione al sito mailgun
  <-- adminuser:   yesflorence@gmail.com
https://guides.wp-bullet.com/how-to-use-mailgun-with-wordpress-multisite-http-api-or-smtp/
  <-- main tutorial from mailgun
https://help.mailgun.com/hc/en-us/articles/203357040-Can-I-use-the-same-domain-name-for-Mailgun-and-for-Google-Apps-or-another-email-server-
  <-- tx & RX su mailgun      *** NON HA FUNZIONATO ***
      <-- namecheap non consente l'aggiunta di records MX per il subdomain
          <-- forse perche' aggiusta automaticamente per il suo privateemail


--------------- Aggiunte in privatemail:
- record aggiunti al DNS:
    CNAME   email.mailthing             eu.mailgun.org.
    CNAME   mailthing                   gothings.org
    TXT     krs._domainkey.mailthing    k=rsa; p=MIIBIjANBgkqh....
    TXT     mailthing                   v=spf1 include:eu.mailgun.org ~all

filtro 'test'  -->  tutte le email con TO che contiene 'testuser' vanno nel folder 'test'

filtro 'wpadmin'  -->  tutte le email con TO che contiene 'wpadmin' vanno nel folder 'wpadmin'

stato attuale (2020-08-25):
- sembra funzionare

------------------  Prove multisite
In effetti ci sono stati diversi problemi:
- setup del multisite difficoltoso
- mail spedite solo da www
--> molte prove e ricerche
...

-------------------- situazione attuale
- aggiunti plugin utili:
    Mail logging - WP Mail Catcher      utile per verificare il livello WP
                                        --> da abilitare su ogni sito
    WP Mail SMTP                        il plugin ufficiale non funziona (Mailgun for wordpress)
                                        --> setup in wp-config
                                            --> dat comuni a tutti i siti
                                            --> setup finale sul singolo sito
    Contact Form 7  (CF7)               Semplici Form per interagire con l'utente
                                        --> sembra funzionare
===========> prime prove: OK
             --> verificare casi speciali

DA verificare:
  - eliminazione "force address"
  - parametro 'Set the return-path to match the From Email '  ??
  - parametri dinamici ed altro per CF7



-------------------------------------------------------  DA FARE / VEDERE MEGLIO
- come usare mailgun per gestire una posta interna
    <-- spedire email di allarme
    <-- gestire forms che mandano email
    <-- limitare l'uso delle email dei NON amministratori
    <-- pods che mandano emails
    <-- ???


                                                                                Mailgun EMAIL - fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                            WP Multi  |
                                                                                         WP WebHooks  |

                                                                                MOLTE PROVE DA FARE !!!
https://wordpress.org/plugins/wp-webhooks/
https://wordpress.org/plugins/cf7-to-zapier/#%0Acan%20i%20help%20you%3F%0A
https://underconstructionpage.com/wp-webhooks-connect-integrate-wordpress/
  <-- sembra fare al caso nostro  -- VERIFICARE --

                                                                                IN CORSO


--- tutorials utili

https://codeburst.io/whats-a-webhook-1827b07a3ffa
https://webhook.site/
  <-- per verificare eventi (email) in tempo reale !!
 https://support.atlassian.com/bitbucket-cloud/docs/create-and-trigger-a-webhook-tutorial/
  <-- come bitbucket consente ai clienti la creazione di webhooks

https://www.getvero.com/resources/webhooks/
  <-- spiegazione dettagliata (beginner)

https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjugay_qujrAhUpMewKHTeyBHMQFjACegQIDBAB&url=https%3A%2F%2Fmoometric.com%2Fintegrations%2Fwp%2Fcontact-form-7-zapier-webhook-json-post%2F&usg=AOvVaw0KIcU_epbBPDqjqgIDVK-p
  <-- un esempio completo con zapier
  <-- provare ?

https://wordpress.org/plugins/cf7-to-zapier/#%0Acan%20i%20help%20you%3F%0A
https://moometric.com/integrations/wp/contact-form-7-zapier-webhook-json-post/
https://github.com/Vizir/cf7-to-zapier
  <-- ref da guardare



                                                                                  WP WebHooks - fine  |
=====================================================================================================/






=====================================================================================================\
                                                                                            WP Multi  |
                                                                                    Roba DA GUARDARE  |

------------------- NGROK                                   e' === Himage SNAT ?
- SNAT equivalente a quello di himage.com
    https://ngrok.com/product
      <-- servizio testabile gratis
      <-- sembra analogo a quanto visto con la vpn per HLITE raspi ..,
      <-- per testare se la versione WP funziona ...


---------------------------------  DA STUDIARE

DB
  https://deliciousbrains.com/tour-wordpress-database/
    <-- descrizione dei contenuti del WP database, anche multisite
  https://deliciousbrains.com/creating-custom-table-php-wordpress/
    <-- informazioni importanti per le tabelle nel DB

------------------------------------- Per lo sviluppo                           SVILUPPO

-------- AGGIORNARE IL SITO
https://kinsta.com/blog/change-wordpress-theme/
  <-- come cambiare tema al tuo sito
  <-- consigli su come fare lo staging del sito attuale
https://wordherd.io/partners/kinsta/
  <-- migrazione a pagamento


--------------------- autenticazione, WP-API & external APP                     AUTHENTICATION
https://wordpress.org/plugins/jwt-authentication-for-wp-rest-api/
  <-- plugin per JWT su rest api
  <-- e' ancora aggiornato, ma sembra obsoleto
      <-- e' vaido solo per versioni vecchie ??
https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/
  <-- doc necessaria !
https://wordpress.stackexchange.com/questions/268665/set-up-wp-authentication-from-external-api
  <-- discussione interessante ...



https://wordpress.org/plugins/fakerpress/                                       DA FARE
https://github.com/bordoni/fakerpress                                           appena funziona un po'
  <-- per riempire i siti durante lo sviluppo

https://wordpress.org/plugins/user-switching/
https://www.wpbeginner.com/plugins/how-to-instantly-switch-between-user-accounts-in-wordpress/
  <-- per provare i vari utenti ...



---------------------------------  DA VEDERE

  https://wordpress.org/support/article/editing-wp-config-php/
    <-- tips per WP-CONFIG.PHP
    <-- DA STUDIARE BENE !!!

  https://cpothemes.com/install-setup-wordpress-multisite-network
    <-- install wp multisite

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
  https://www.wpbeginner.com/wp-tutorials/useful-wordpress-configuration-tricks-that-you-may-not-know/
    <-- help & suggerimenti vari

  https://www.brianshim.com/webtricks/map-domain-name-wordpress-page-post/
    <-- mappaggio URL con apache .htaccess, forse indica come fare con nginx

  https://wordpress.stackexchange.com/questions/130076/multisite-redirect-to-appropriate-domain-if-subdomain-doesnt-exist
    <-- caso strano non-existent
  https://gist.github.com/dejanmarkovic/8323792
    <-- NOBLOGREDIRECT explained and fix

  https://www.slant.co/options/4899/alternatives/~navicat-for-mysql-alternatives
    <-- gestione mysql db      <-- alternative a phpmyadmin
    <-- vedi: adminer   dbschema

  https://wordpress.org/support/article/administration-over-ssl/
    <-- consigli di configurazione per SSL  

  https://designanddevelop.com/change-the-primary-blog-in-wordpress-multisite/
    <-- INTERESSANTE  (anche come cambiare il primary site)

  https://code.tutsplus.com/articles/quick-tip-upgrade-your-wordpress-site-via-ssh--wp-27691
    <-- update tramite ssh2  (modulo NON installato in docker wp img)


  https://www.hostgator.com/help/article/how-to-change-a-wordpress-multisite-primary-domain
    <-- elenca le tabelle per cambiare il primary domain

  https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    <-- altri suggerimenti DA VEDERE




- per vedere se la email esiste in WP:
    https://stackoverflow.com/questions/29504337/how-do-i-check-if-email-submitted-via-contact-form-7-exists-in-my-database
      <-- funzione di verifica esistenza email

  https://stackoverflow.com/questions/7412261/can-i-have-conditional-fields-using-contact-form-7-plugin-in-wordpress
    <-- verifiche per i conditional fields


- da vedere:
  https://premium.wpmudev.org/blog/customizing-contact-form-7-plugins/
    <-- add styles to cf7





  https://enable-cors.org/server_nginx.html
    <-- DA VEDERE se applicabile


  https://wordpress.org/support/article/nginx/
    <-- suggerimenti vari DA STUDIARE ...

  https://wordpress.org/plugins/nginx-helper/
    <-- suggerimenti vari DA STUDIARE ...




----------------------------------  ESEMPI
ref.:
  https://stackoverflow.com/questions/1653308/access-control-allow-origin-multiple-origin-domains
    <-- ci sono anche altre risposte interessanti ...

For Nginx users to allow CORS for multiple domains. I like the @marshall's example although his anwers only matches one domain. To match a list of domain and subdomain this regex make it ease to work with fonts:

location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
   if ( $http_origin ~* (https?://(.+\.)?(domain1|domain2|domain3)\.(?:me|co|com)$) ) {
      add_header "Access-Control-Allow-Origin" "$http_origin";
   }
}

This will only echo "Access-Control-Allow-Origin" headers that matches with the given list of domains.

-----------------------------------------
ref.:
  https://enable-cors.org/server_nginx.html
    <-- esempio verboso

-----------------------------------------
ref.:
  http://rustyrazorblade.com/post/2013/2013-10-31-cors-with-wildcard-domains-and-nginx/
    <-- sembra l'esempio 'GIUSTO'

-----------------------------------------
ref.:


                                                                             Roba DA GUARDARE - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                      FUTURO da fare  |
https://wordpress.org/plugins/geoip-detect/
  <-- usa geo-IP per verificare localizzazione thing & user
  ====> cerca: IFTTT alternatives
          https://github.com/huginn/huginn
            <-- local ifttt open source
          https://alternativeto.net/software/ifttt/?platform=self-hosted
            <-- elenco di alternative ...



                                                                               FUTURO da fare - fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                            WP Multi  |
                                                                                               START  |

                                                                                                fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                            WP Multi  |
                                                                                            Use PODS  |
                                                                                         ABBANDONATO  |
-----------------------------------------------------  Use pods for thing's data

*** vedi anche: WP-API  |

-------- Preliminari
Configurazione per vedere 'Pods Admin' & 'Sensors' nella dashboard:
  admin:   yesflorence
   siti:   things        <-- entrambi
           wpwork        <-- solo 'Pods Admin'  (non sono stati creat Pods)
           www  cloud  consumi  pluto
                         <-- niente, il plugin pods 

ref.s:
https://pods.io/docs/learn/shortcodes/pods/
https://docs.pods.io/displaying-pods/magic-tags/using-magic-tags/


Display a field from the current post
[pods field="my_custom_field"]
[pods]{@my_custom_field}[/pods]
==>
[pods field="sensor-name"]
[pods]{@sensor-value}[/pods]






firefox:
vedi ultima risposta in:
  https://askubuntu.com/questions/1076412/firefox-freezing-with-100-cpu-usage-for-30-seconds-when-launching-chromium?noredirect=1
cerca:   network.cookie.cookieBehavior       <-- dice: [4]
in  about:config  -->
services.sync.prefs.sync.network.cookie.cookieBehavior  true
  --> set to false





                                                                                         ABBANDONATO  |
                                                                                     Use PODS - fine  |
=====================================================================================================/




                                                                           *** WPMulti v0.01.04 ***
---------------------------------------------------------------------------------------------------\ 2020-08-14
                                                                             *** WP Multisite 04 ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE


                                                                             *** WP Multisite 04 ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-08-14
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                       *** WP Multisite v0.01.03 ***


------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-03-14
                                                                                *** WP Multisite ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                           *** WPMulti v0.01.03 ***

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ CORREZIONE  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  vedi:  *** WPMulti v0.01.03 ***
  Nuova scrittura per l'installazione di wordpress, versione multisite
  Correzione in corso: cambio da WP Service a WP Multi
  Qualcosa andra' in PHP Service
  Cambio nome su github:   WP -->  WPM
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


--------------------------
NOTE                                                                            2020-08-02

- Questa versione deriva dallo sviluppo wp-multi fatto in precedenza
- Il nome della app nel repository github diviene:   WPM                                           <==  DA CAMBIARE !
vedi:
  strategia di bootstrap in:    GOTHINGS cloud v04     strategia di bootstrap
  e integrare il tutto in :     gocloud: strategia di bootstrap

-------------
- il wp multisite WPM e' eseguito sulla droplet gothings v01.03
  --> usa il db nella droplet  gothings-v09

==> Si sviluppa in:  ~/NetBeansProjects/WP-Sviluppi/gothings/wpm/               2020-08-02

    si fanno ora le prove di installazione per la produzione                    IN CORSO

---------------
pre-requisiti:
  contenuto in dockimages/wpm
  gocloud-wpm
  wpmdirs.tar.gz

---------------
verifyexpand() ???



Parti da rivedere & completare:
- passaggio da WP a WPmultisite nell'installazione                              DA FARE
- securizzazione del db tramite script eseguiti sul db con comandi remoti mysql
    --> vedi PHP Service



=====================================================================================================\
                                                                                            WP Multi  |
                                                                                  Dati UTILI - start  |

--------------------------------------------------------------------------------
Database server sulla droplet v09:

    Server: 10.133.94.60                   internal network
            wpuser   penna_matita_gomma    wp user & pwd
            104.248.95.29/20               external IP   <-- chiuso dal firewall
            telnet 104.248.95.29 3306      verifica chiusura fw       
    Server type: MariaDB
    Server connection: SSL is not being used
    Server version: 10.4.12-MariaDB-1:10.4.12+maria~bionic - mariadb.org binary distribution
    Protocol version: 10
    User: root@10.133.3.65
    Server charset: cp1252 West European (latin1)

====> aggiustati:
        - firewall per bloccare accesso a mysql dal pubblico  (gothings-public)
        - accesso root & wpuser solo da rete interna

--------------------------------------------------------------------------------
Valori usati nel DB sulla droplet v09

ROOT_PWD_OLD="root_pwd"
ROOT_PWD="GTH2020_quattro_marzo"
WPUSER="wpuser"
WPUSER_PWD="penna_matita_gomma"
WPDATABASE="gtlite"
GOTHINGSNET="10.133.%"
ERRCOUNT=0
LOGFILE="dbconfig.log"

$table_prefix = 'GoTh01_';

--------------------------------------------------------------------------------
===> esempi per mysql da terminale ...

      mysql -u root -pGTH2020_quattro_marzo
      show databases;
      select host, user from mysql.user;
      mysql -u wpuser -ppenna_matita_gomma

      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      ALTER USER 'wpuser'@'172.29.%' IDENTIFIED BY 'penna_matita_gomma';
      ALTER USER 'root'@'172.29.%' IDENTIFIED BY 'GTH2020_quattro_marzo';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.%';

      GRANT ALL PRIVILEGES ON *.* TO 'root'@'172.29.%' IDENTIFIED BY 'GTH2020_quattro_marzo';   ??
      show grants for 'wpuser'@'10.133.%';

    PERICOLOSO!
      DROP DATABASE gtlite;
        <-- as root

--------------------------------------------------------------------------------
ref.:
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- ref principale per iniziare il lavoro

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- useful hints for wp multisite setup

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04
    <-- install phpmyadmin

  https://easyengine.io/tutorials/docker-wordpress/
    <-- sembra buono
  https://www.slideshare.net/rtcamp/easyengine-command-line-tool-to-manage-wordpress-sites-on-nginx-server-wordcampmumbai14
    <-- vedi struttura dir consigliata



                                                                                   Dati UTILI - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                            WP Multi  |
                                                                                  expand & creazione  |
I programmi stanno in wpm:   .../WP-Sviluppi/gothings/wpm/

wordpress sta nella droplet gothings-v01-03:
      ssh yesfi@188.166.70.203

il database mariadb sta nella droplet gothings-v09:
      ssh yesfi@104.248.95.29

Si usano i 'dati utili' riportati sopra

Si aggiusta gocloud-wpm per avere una installazione 'semi-manuale'
  - lo script chiede di fare a mano le operazioni necessarie all'installazione
  - lo script gestisce automaticamente il ciclo di vita del container

------------ expand & creazione contenitore
riepilogo passi preliminari:
- ~/dockrepo/dockimages/wpm/*.json definisce la configurazione della app wpm
- se uno dei file richiesti non esiste lo si scarica da github
    --> si scarica SOLO se non e' presente
    --> puo' essere modificato in loco durante lo sviluppo
  - il file wpmexpand.json
    --> garantisce la presenza iniziale dei dati necessari in:
          ~/dockrepo/sysdata/wpm     per la configurazione
          
    





SVILUPPO:
  ===> vedi (circa riga 5300 & 6100):   4.o tentativo
       (precedenti sviluppi wordpress)

                                                                           expand & creazione - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                            WP Multi  |
                                                                                         Fase EXPAND  |

- verifyexpand
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}expand.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'espansione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
    <-- per l'espansione e' richiesta la sudo password di yesfi
    <-- errori nella fase di espansione NON CONSENTONO di andare avanti
                                                                                                    DA FARE
- NOTA di sicurezza:
    - il file di configurazione .env-wp contiene valori NON VALIDI
    - nella fase init .env-wp verra' sostituito con una versione VALIDA e piu' SICURA

======> verifyexpand e' a posto


                                                                                  Fase EXPAND - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                            WP Multi  |
                                                                                           Fase INIT  |

                                                                                                    IN CORSO
- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'inizializzazione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
- il dir dockrepo/sysdata/wp/ DEVE contenere il file di configurazione gothingswp.yml
    <-- se non esiste:  ERRORE 4
- il dir .../docksecrets/${APPNAME} DEVE contenere il file di configurazione .env-${APPNAME}
    <-- VERIFICA:                                                                                   DA FARE
    <-- questo file sara' quello effettivamente usato per la creazione del container
    <-- il file NON E' scaricabile da github per motivi di sicurezza
    <-- il file sara' generato 'in loco' da una apposita app
    <-- per ora, il file e' inserito manualmente

                                                                                                    DA FARE
- aggiustare wpinit.sh:     leggere da wpconfig.json i valori "veri"
                            mettere i valori in wp-config.php
- procedura di lettura valori da tastiera per cambio pwd etc.
- AGGIUSTARE dbsecure.sh    aggiungere una opzione "vai avanti anche se ci sono stati errori"
                              <-- potrebbe servire quando viene eseguita piu' volte
- aggiustare nome container phpmyadmin --> myadminlocal ?  myadmin_l(ocal) ?  myadmin_g(eneric) ?



                                                                                    Fase INIT - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                         wordpress multisite install  |
refs. essenziali:

- ref principale per iniziare il lavoro
    https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
  - seguito 'a posteriori' per definire la struttura
    --> da ri-usare per la configurazione https


- useful hints for wp multisite setup
    https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
  - per organizzare la fase iniziale di installazione del multisite
  - si e' seguito manualmente, si sono fatti esperimenti con le funzioni di php-helper e si
    sono eseguiti cambiamenti di configurazione prima di arrivare ai primi vagiti
    --> va eseguita una nuova installazione passo-passo, a futura memoria
  - utile per definire il wp-config.php
  - utile per organizzare il db
    --> nel nostro caso e' stato fatto indipendentemente e su una droplet differente
  - eseguita creazione di siti, cambi di tema ed installazione plugin

Passi importanti:
- aggiustamenti conf nginx
  - definizione del sito in wpm
    - nomi espliciti per i siti principali
    - aggiunto il dominio base (senza www : gothings.org)
    - NON usato *.gothings.org

SCOGLI trovati:
  - i vari siti sono editabili, ma:
  - il sito www non e' editabile
    --> il CORS non funziona nemmeno dopo molti tentativi ...
  - usato il ref.: https://designanddevelop.com/change-the-primary-blog-in-wordpress-multisite/
    per correggere la tabella OPTIONS  
    --> campo option id=2  option name=home
          option value  http://gothings.org --> http://www.gothings.org
  - ad ora: tutto OK

Passo successivo:
  - aggiungere https
    -->  letsencrypt

DA AGGIUSTARE:
  - sistemare il CORS
    --> provare ad eliminare le aggiunte?


Prove ancora da fare:
  - aggiungere il dominio *.gothings.org


Refs. ancora da vedere:
  https://wordpress.org/plugins/nginx-helper/
    <-- aggiustamenti sulla configurazione nginx per lets'encrypt

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- rivedere i consigli sui plugin 'indispensabili'



                                                                  wordpress multisite install - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                        WP MULTISITE  |

  https://cpothemes.com/install-setup-wordpress-multisite-network
    <-- install wp multisite



Stampa errori:                                                                                      DA FARE
  - aggiungere variabili per chiarire le cause ...   ???
  - si dovrebbe sapere:
     fase
     sottofase dove e' causato
     


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ seguito DA AGGIUSTARE

                                                                                                    IN CORSO
- prova con myadmin, per verificare il collegamento al db
    <-- fatto in locale, senza admin ...:  OK
- sostituzione valori SIMULATA:
    1.- si copia wp-config.beans.php sopra wp-config.php
    2.- si aggiusta in wpinit.sh o meglio in wpinstall.sh
          <-- init aggiusta il sdb (va olo creato il db)
          <-- install aggiusta il php



                                                                                 WP MULTISITE - fine  |
=====================================================================================================/





=====================================================================================================\
                                                                                            WP Multi  |
                                                                                      WP-API - START  |
Esperimenti per utilizzare WP assiene a GoThings

-------------------------------  Plugins utili (?)

Advanced Custom Fields
Akismet Anti-Spam
ARI Adminer
BackWPup
Debug This
Duplicate Page
Hello Dolly
Increase Maximum Upload File Size
Jetpack by WordPress.com
Mailgun
Page Builder by SiteOrigin
SiteOrigin CSS
SiteOrigin Widgets Bundle
Widgets for SiteOrigin
WP Rollback

Duplicator                                     <-- site migration & backup
                                                   (free == no multisite?)


-------------------------------  Consigli Woojon:

olsen light theme

Admin Menu Editor
WP Custom Admin Interface


-------------------------------------------------
-------------------------------------------------





-------------------------------  Temi hlitetech

Ample
Caos
Creative Blog
Slightly
Twenty Fifteen
Twenty Seventeen
Twenty Sixteen

-------------------------------  Temi attivati

olsen light theme


-------------------------------------------------
-------------------------------------------------


---------------------------------  NOTE di sviluppo
- definito un secondo sito:   cloud.gothings.org                          <== OK

- Installato backwpup                                                     <== OK
  --> ref.: https://libre-software.net/wordpress-multisite-free-backup-plugins/
              <-- il migliore e' backwpup
  - effettuato backup 2 volte: il DB e' nel file: gtlite.sql

- upgrade a WP version 5.4.2
  --> NON va: serve un accesso ftp o sftp                                       DA FARE

- proviamo a fare una migrazione con backwpup + wordpress export
  - definito & scaricato
       

-------------------------------------------------
-------------------------------------------------

---------------------------------------- DA VEDERE

  https://since1979.dev/add-custom-acf-fields-to-the-wp-rest-api/
    <-- sembra buono

  https://www.gavsblog.com/blog/adding-fields-to-the-wordpress-rest-api
    <-- Extending the WordPress API 

  https://wordpress.org/plugins/acf-to-rest-api/
  https://github.com/airesvsg/acf-to-rest-api
    <-- ACF to api

  https://wordpress.org/support/topic/custom-field-data-and-custom-rest-api-fields/
    <-- ??

  https://wordpress.org/plugins/custom-field-list-widget/

  https://wordpress.org/plugins/get-custom-field-values/
  https://coffee2code.com/wp-plugins/get-custom-field-values/
    <--  DA VEDERE !!


------------------------------------  RISULTATO ??

https://it.wordpress.org/plugins/custom-field-suite/
  <-- add custom fields to your posts


-------------------------------------------------
-------------------------------------------------








                                                                                       WP-API - fine  |
=====================================================================================================/






=====================================================================================================\
                                                                                            WP Multi  |
                                                                                    Roba DA GUARDARE  |

  https://wordpress.org/support/article/editing-wp-config-php/
    <-- tips per WP-CONFIG.PHP
    <-- DA STUDIARE BENE !!!

  https://cpothemes.com/install-setup-wordpress-multisite-network
    <-- install wp multisite

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
  https://www.wpbeginner.com/wp-tutorials/useful-wordpress-configuration-tricks-that-you-may-not-know/
    <-- help & suggerimenti vari

  https://www.brianshim.com/webtricks/map-domain-name-wordpress-page-post/
    <-- mappaggio URL con apache .htaccess, forse indica come fare con nginx

  https://wordpress.stackexchange.com/questions/130076/multisite-redirect-to-appropriate-domain-if-subdomain-doesnt-exist
    <-- caso strano non-existent
  https://gist.github.com/dejanmarkovic/8323792
    <-- NOBLOGREDIRECT explained and fix

  https://www.slant.co/options/4899/alternatives/~navicat-for-mysql-alternatives
    <-- gestione mysql db      <-- alternative a phpmyadmin
    <-- vedi: adminer   dbschema

  https://wordpress.org/support/article/administration-over-ssl/
    <-- consigli di configurazione per SSL  

  https://designanddevelop.com/change-the-primary-blog-in-wordpress-multisite/
    <-- INTERESSANTE  (anche come cambiare il primary site)

  https://code.tutsplus.com/articles/quick-tip-upgrade-your-wordpress-site-via-ssh--wp-27691
    <-- update tramite ssh2  (modulo NON installato in docker wp img)


  https://www.hostgator.com/help/article/how-to-change-a-wordpress-multisite-primary-domain
    <-- elenca le tabelle per cambiare il primary domain

  https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    <-- altri suggerimenti DA VEDERE





  https://enable-cors.org/server_nginx.html
    <-- DA VEDERE se applicabile


  https://wordpress.org/support/article/nginx/
    <-- suggerimenti vari DA STUDIARE ...

  https://wordpress.org/plugins/nginx-helper/
    <-- suggerimenti vari DA STUDIARE ...




----------------------------------  ESEMPI
ref.:
  https://stackoverflow.com/questions/1653308/access-control-allow-origin-multiple-origin-domains
    <-- ci sono anche altre risposte interessanti ...

For Nginx users to allow CORS for multiple domains. I like the @marshall's example although his anwers only matches one domain. To match a list of domain and subdomain this regex make it ease to work with fonts:

location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
   if ( $http_origin ~* (https?://(.+\.)?(domain1|domain2|domain3)\.(?:me|co|com)$) ) {
      add_header "Access-Control-Allow-Origin" "$http_origin";
   }
}

This will only echo "Access-Control-Allow-Origin" headers that matches with the given list of domains.

-----------------------------------------
ref.:
  https://enable-cors.org/server_nginx.html
    <-- esempio verboso

-----------------------------------------
ref.:
  http://rustyrazorblade.com/post/2013/2013-10-31-cors-with-wildcard-domains-and-nginx/
    <-- sembra l'esempio 'GIUSTO'

-----------------------------------------
ref.:


                                                                             Roba DA GUARDARE - fine  |
=====================================================================================================/




=====================================================================================================\
                                                                                            WP Multi  |
                                                                                               START  |

                                                                                                fine  |
=====================================================================================================/




                                                                           *** WPMulti v0.01.03 ***
---------------------------------------------------------------------------------------------------\
                                                                                *** WP Multisite ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE


                                                                       *** WP Multisite v0.01.03 ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
---------------------------------------------------------------------------------------------------- 2020-08-14
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-08-02
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                      *** WP Service - v0.01.03  ***

------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-03-14
                                                                                  *** WP Service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                     *** WP Service - v0.01.03  ***

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ CORREZIONE  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  Questa sezione diviene:  WPMulti - v0.01.03
    --> in realta' e' ora:  *** PHP Service - v0.00.1 ***
  perche' si sono mischiate parti relative al PHP Service con la parte WP
  e' meglio separare la sezione worpress da quella PHP
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

--------------------------
NOTE                                                                            2020-08-01

- Questa versione deriva dallo sviluppo wp-multi fatto in precedenza
- Adesso il 'WP Service' diviene un container di aiuto per la gestione 
  del mariadb nella droplet v09
- L'idea e' che il php agisca sul db per automatizzare operazioni di 
  creazione e gestione del wp multi

Il nome della app diviene:   PHP                                           <==  DA CAMBIARE !

-------------
- il nuovo wp multisite e' eseguito va sulla droplet gothings v01.03
- nella droplet  gothings-v09 - db ci sono vecchi file, sembra provenienti da 
  ~/NetBeansProjects/WP-Sviluppi/gothings/wpmulti-dev/wp-dev/ che ho salvato 
  in ~/NetBeansProjects/WP-Sviluppi/gothings/wpmulti-dev/wp-dev/v09_backup
  e cancellati dalla droplet

==> Si sviluppa in:  ~/NetBeansProjects/WP-Sviluppi/gothings/wp/
    si fanno ora le prove di installazione per la produzione                    2020-08-01

---------------


Parti da rivedere & completare:
- passaggio da WP a WPmultisite nell'installazione
- securizzazione del db tramite script eseguiti sul db con comandi remoti mysql
    --> script in ???

--------------------------

                                                                                                    DA FARE
Installazione di wordpress multisite per gothings-cloud-apps

- altro tentativo di generalizzazione di gocloud-<appname>

ref.:
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- ref principale per iniziare il lavoro

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- useful hints for wp multisite setup

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04
    <-- install phpmyadmin

  https://easyengine.io/tutorials/docker-wordpress/
    <-- sembra buono
  https://www.slideshare.net/rtcamp/easyengine-command-line-tool-to-manage-wordpress-sites-on-nginx-server-wordcampmumbai14
    <-- vedi struttura dir consigliata


=====================================================================================================\
                                                                                          WP Service  |
                                                                                  Dati UTILI - start  |

Database server
    Server: 10.133.94.60                   internal network
            wpuser   penna_matita_gomma    wp user & pwd
            104.248.95.29/20               external IP   <-- chiuso dal firewall
            telnet 104.248.95.29 3306      verifica chiusura fw       
    Server type: MariaDB
    Server connection: SSL is not being used
    Server version: 10.4.12-MariaDB-1:10.4.12+maria~bionic - mariadb.org binary distribution
    Protocol version: 10
    User: root@10.133.3.65
    Server charset: cp1252 West European (latin1)

====> aggiustati:
        - firewall per bloccare accesso a mysql dal pubblico  (gothings-public)
        - accesso root & wpuser solo da rete interna

  ----------------------
    prove da remoto:
      mysql -u wpuser -h 10.133.94.60 -p
      mysql -u root -h 10.133.94.60 -p
      mysql -u root -h localhost -p

      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.3.65';
  ----------------------

Valori usati dalla 1.a versione di config.sh

ROOT_PWD_OLD="root_pwd"
ROOT_PWD="GTH2020_quattro_marzo"
WPUSER="wpuser"
WPUSER_PWD="penna_matita_gomma"
WPDATABASE="gtlite"
GOTHINGSNET="10.133.%"
ERRCOUNT=0
LOGFILE="dbconfig.log"


db ip:  10.133.94.60
$table_prefix = 'GoTh01_';

===> mysql da terminale ...

      mysql -u root -pGTH2020_quattro_marzo
      show databases;
      select host, user from mysql.user;
      mysql -u wpuser -ppenna_matita_gomma

      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      ALTER USER 'wpuser'@'172.29.%' IDENTIFIED BY 'penna_matita_gomma';
      ALTER USER 'root'@'172.29.%' IDENTIFIED BY 'GTH2020_quattro_marzo';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.%';

      GRANT ALL PRIVILEGES ON *.* TO 'root'@'172.29.%' IDENTIFIED BY 'GTH2020_quattro_marzo';   ??
      show grants for 'wpuser'@'10.133.%';

    PERICOLOSO!
      DROP DATABASE gtlite;
        <-- as root

---
      ROOT_PWD_OLD="root_pwd"
      ROOT_PWD="GTH2020_quattro_marzo"
      WPUSER="wpuser"
      WPUSER_PWD="penna_matita_gomma"
      WPDATABASE="gtlite"
      GOTHINGSNET="10.133.%"
      ERRCOUNT=0
      LOGFILE="dbconfig.log"
                                                                                   Dati UTILI - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                          WP Service  |
                                                                                         Fase EXPAND  |

- verifyexpand
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}expand.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'espansione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
    <-- per l'espansione e' richiesta la sudo password di yesfi
    <-- errori nella fase di espansione NON CONSENTONO di andare avanti
                                                                                                    DA FARE
- NOTA di sicurezza:
    - il file di configurazione .env-wp contiene valori NON VALIDI
    - nella fase init .env-wp verra' sostituito con una versione VALIDA e piu' SICURA

======> verifyexpand e' a posto


                                                                                  Fase EXPAND - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                          WP Service  |
                                                                                           Fase INIT  |

                                                                                                    IN CORSO
- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'inizializzazione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
- il dir dockrepo/sysdata/wp/ DEVE contenere il file di configurazione gothingswp.yml
    <-- se non esiste:  ERRORE 4
- il dir .../docksecrets/${APPNAME} DEVE contenere il file di configurazione .env-${APPNAME}
    <-- VERIFICA:                                                                                   DA FARE
    <-- questo file sara' quello effettivamente usato per la creazione del container
    <-- il file NON E' scaricabile da github per motivi di sicurezza
    <-- il file sara' generato 'in loco' da una apposita app
    <-- per ora, il file e' inserito manualmente

                                                                                                    DA FARE
- aggiustare wpinit.sh:     leggere da wpconfig.json i valori "veri"
                            mettere i valori in wp-config.php
- procedura di lettura valori da tastiera per cambio pwd etc.
- AGGIUSTARE dbsecure.sh    aggiungere una opzione "vai avanti anche se ci sono stati errori"
                              <-- potrebbe servire quando viene eseguita piu' volte
- aggiustare nome container phpmyadmin --> myadminlocal ?  myadmin_l(ocal) ?  myadmin_g(eneric) ?



                                                                                    Fase INIT - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                          WP Service  |
                                                                                      Funzione CLEAR  |
*** funzione specifica per wordpress ***
  wpclear.sh
Ogni applicazione avra' una <appname>clear.sh, richiamata dall'applicativo principale
****************************************

-------- funzione CLEAR
obiettivo:
  tornare alla situazione iniziale nei dir e nel database

realizzazione:
  - si esegue una copia del db gtlite su gtlite_bk
  - si eliminano TUTTI i file generati da wordpress
      <-- files di nome wp-*
      <-- altri files: index.php, license.txt, xmlrpc.php, readme.html, .htaccess
      <-- dirs: wp-admin, wp-includes, wp-content
  - si eliminano TUTTE le tabelle wordpress in gtlite
  - si rileggono i file di configurazione wpinit.json e wpinstall.json da github
      <-- per il momento NON si legge wpexpand.json per non usare wpdirs.tar.gz
          in fase di sviluppo

Problema:
  dare ALL GRANTS a wpuser sul db gtlite_bk        <--    fare in verifyinit ??                     DA FARE


----------------------------------------------------------------------------------------------------

ref. usati:
  https://www.supportsages.com/php-script-to-change-mysql-table-prefix/
    <-- script MOLTO interessante
    <-- HTML per leggere le pwd etc.         <-- usare .env ? 

  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
    <-- usata versione cli come template 
    <--  (thanks to Richard Maurer)

  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- questo NON HA FUNZIONATO

  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <-- myscli version per copytables
    <-- anche questo SEMBRA NON FUNZIONARE


altri ref.:
--------------  RENAME  DUMP  database
ref.:
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- rename database
    <-- dump database
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- altro script, in bash
  https://stackoverflow.com/questions/12190000/rename-mysql-database
    <-- alcuni suggerimenti utili ...

automysqlbackup
  https://sourceforge.net/projects/automysqlbackup/files/latest/download
    <-- Automatic MySQL Backup
    <-- bash script da vedere: backup schedulato ...
  http://www.ducea.com/2006/05/27/backup-your-mysql-databases-automatically-with-automysqlbackup/
    <-- tutorial

use PHP to alter the db ref.:
  https://www.supportsages.com/php-script-to-change-mysql-table-prefix/
    <-- script MOLTO interessante
    <-- HTML per leggere le pwd etc.         <-- usare .env ? 

  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <--mysqlcli version for 'copytables'

  https://helloacm.com/duplicate-a-mysql-table-copy-table-duplicate-database-php-script/
    <--  insert --> select  

-----
  http://www.learningaboutelectronics.com/Articles/How-to-rename-a-MySQL-table-using-PHP.php
    <-- PHP script
  https://gist.github.com/yireo/5919293
    <-- gist ~~= al php visto sopra

  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- sembra buono ...


--------------  RENAME  DUMP  database
ref.: https://phoenixnap.com/kb/how-to-rename-a-mysql-database
        <-- rename database
        <-- dump database

  https://stackoverflow.com/questions/22199557/assign-an-existing-user-to-mysql-databases/22199886
    <-- mysql query to grant privileges to user


--------------------------------------------------------------------------- comandi utili:

mysql -u root -pGTH2020_quattro_marzo

10.133.94.60/gtlite_bk/  http://phpmyadmin.gothings.org/db_sql.php?db=gtlite_bk
Your SQL query has been executed successfully.

show grants for 'wpuser'@'10.133.%';

GRANT USAGE ON *.* TO 'wpuser'@'10.133.%' IDENTIFI... 
GRANT ALL PRIVILEGES ON `gtlite`.* TO 'wpuser'@'10... 
GRANT ALL PRIVILEGES ON `gtlite_bk`.* TO 'wpuser'@... 

-------------------------------------------------------------------------------------------


                                                                               Funzione CLEAR - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                          WP Service  |
                                                                                        WP MULTISITE  |

  https://cpothemes.com/install-setup-wordpress-multisite-network
    <-- install wp multisite


                                                                                 WP MULTISITE - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                          WP Service  |
                                                                                    Roba DA GUARDARE  |

  https://wordpress.org/support/article/editing-wp-config-php/
    <-- tips per WP-CONFIG.PHP

  https://cpothemes.com/install-setup-wordpress-multisite-network
    <-- install wp multisite

  https://www.brianshim.com/webtricks/map-domain-name-wordpress-page-post/
    <-- mappaggio URL con apache .htaccess, forse indica come fare con nginx

  https://wordpress.stackexchange.com/questions/130076/multisite-redirect-to-appropriate-domain-if-subdomain-doesnt-exist
    <-- caso strano non-existent
  https://gist.github.com/dejanmarkovic/8323792
    <-- NOBLOGREDIRECT explained and fix

  https://www.slant.co/options/4899/alternatives/~navicat-for-mysql-alternatives
    <-- gestione mysql db      <-- alternative a phpmyadmin
    <-- vedi: adminer   dbschema


                                                                             Roba DA GUARDARE - fine  |
=====================================================================================================/


Stampa errori:                                                                                      DA FARE
  - aggiungere variabili per chiarire le cause ...   ???
  - si dovrebbe sapere:
     fase
     sottofase dove e' causato
     


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ seguito DA AGGIUSTARE

                                                                                                    IN CORSO
- prova con myadmin, per verificare il collegamento al db
    <-- fatto in locale, senza admin ...:  OK
- sostituzione valori SIMULATA:
    1.- si copia wp-config.beans.php sopra wp-config.php
    2.- si aggiusta in wpinit.sh o meglio in wpinstall.sh
          <-- init aggiusta il sdb (va olo creato il db)
          <-- install aggiusta il php




=====================================================================================================\
                                                                                          WP Service  |
                                                                                               START  |

                                                                                                fine  |
=====================================================================================================/


                                                                     *** WP Service - v0.01.03  ***
---------------------------------------------------------------------------------------------------\
                                                                                  *** WP Service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE

                                                                      *** WP Service - v0.01.03  ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
---------------------------------------------------------------------------------------------------- 2020-08-02
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@







@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-03-26
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                      *** WP Service - v0.01.02  ***

------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-03-14
                                                                                  *** WP Service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                     *** WP Service - v0.01.02  ***

Installazione di wordpress multisite per gothings-cloud-apps

- altro tentativo di generalizzazione di gocloud-<appname>

ref.:
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- ref principale per iniziare il lavoro

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- useful hints for wp multisite setup

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04
    <-- install phpmyadmin

  https://easyengine.io/tutorials/docker-wordpress/
    <-- sembra buono
  https://www.slideshare.net/rtcamp/easyengine-command-line-tool-to-manage-wordpress-sites-on-nginx-server-wordcampmumbai14
    <-- vedi struttura dir consigliata


=====================================================================================================\
                                                                                          Dati UTILI |

Database server
    Server: 10.133.94.60 via TCP/IP
    Server type: MariaDB
    Server connection: SSL is not being used Documentation
    Server version: 10.4.12-MariaDB-1:10.4.12+maria~bionic - mariadb.org binary distribution
    Protocol version: 10
    User: root@10.133.3.65
    Server charset: cp1252 West European (latin1)

====> aggiustati:
        - firewall per bloccare accesso a mysql dal pubblico  (gothings-public)
        - accesso root & wpuser solo da rete interna

  ----------------------
    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.3.65';
  ----------------------

Valori usati dalla 1.a versione di config.sh

ROOT_PWD_OLD="root_pwd"
ROOT_PWD="GTH2020_quattro_marzo"
WPUSER="wpuser"
WPUSER_PWD="penna_matita_gomma"
WPDATABASE="gtlite"
GOTHINGSNET="10.133.%"
ERRCOUNT=0
LOGFILE="dbconfig.log"


db ip:  10.133.94.60
$table_prefix = 'GoTh01_';

===> mysql da terminale ...

      mysql -u root -pGTH2020_quattro_marzo
      show databases;
      select host, user from mysql.user;
      mysql -u wpuser -ppenna_matita_gomma

      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.%';
      show grants for 'wpuser'@'10.133.%';

    PERICOLOSO!
      DROP DATABASE gtlite;
        <-- as root

---
      ROOT_PWD_OLD="root_pwd"
      ROOT_PWD="GTH2020_quattro_marzo"
      WPUSER="wpuser"
      WPUSER_PWD="penna_matita_gomma"
      WPDATABASE="gtlite"
      GOTHINGSNET="10.133.%"
      ERRCOUNT=0
      LOGFILE="dbconfig.log"
                                                                                   Dati UTILI - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                         Fase EXPAND  |

- verifyexpand
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}expand.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'espansione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
    <-- per l'espansione e' richiesta la sudo password di yesfi
    <-- errori nella fase di espansione NON CONSENTONO di andare avanti
                                                                                                    DA FARE
- NOTA di sicurezza:
    - il file di configurazione .env-wp contiene valori NON VALIDI
    - nella fase init .env-wp verra' sostituito con una versione VALIDA e piu' SICURA

======> verifyexpand e' a posto


                                                                                  Fase EXPAND - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                           Fase INIT  |

- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- verifica esistenza file dockrepo/dockimages/${APPNAME}/${APPNAME}init.json
    <-- se non esiste lo scarica da github
    <-- il .json mantiene lo status dell'espansione iniziale ( todo / done )
    <-- se 'todo' viene eseguita l'inizializzazione
        <-- poi il .json viene aggiornato:  'done'
        <-- si mantiene traccia della versione precedente
- il dir dockrepo/sysdata/wp/ DEVE contenere il file di configurazione gothingswp.yml
    <-- se non esiste:  ERRORE 4
- il dir .../docksecrets/${APPNAME} DEVE contenere il file di configurazione .env-${APPNAME}
    <-- VERIFICA:                                                                                   DA FARE
    <-- questo file sara' quello effettivamente usato per la creazione del container
    <-- il file NON E' scaricabile da github per motivi di sicurezza
    <-- il file sara' generato 'in loco' da una apposita app
    <-- per ora, il file e' inserito manualmente
- 

                                                                                                    DA FARE
- aggiustare .env-wp:       mettere valori NON VALIDI                                          FATTO
- aggiustare wpinit.sh:     leggere da wpconfig.json i valori "veri"
                            mettere i valori in wp-config.php
                            ELIMINARE wp-config.beans.php da wpdirs.tar.gz                     FATTO
- procedura di lettura valori da tastiera per cambio pwd etc.
- AGGIUSTARE dbsecure.sh    aggiungere una opzione "vai avanti anche se ci sono stati errori"
                              <-- potrebbe servire quando viene eseguita piu' volte
- aggiustare nome container phpmyadmin --> myadminlocal ?  myadmin_l(ocal) ?  myadmin_g(eneric) ?




                                                                                    Fase INIT - fine  |
=====================================================================================================/


=====================================================================================================\
                                                                                      Funzione CLEAR  |

@@@@@@@@@@  VERSIONE INIZIALE incasinata ...          @@@@@@@@@@@@
@@@@@@@@@@  ripulire e descrivere il risultato finale @@@@@@@@@@@@
                                                                                                    DA FARE
- funzione CLEAR:           rivedere procedura: cancella che cosa?
                              <-- ELIMINARE i file usati nello sviluppo
                            rileggere wpinit.json e wpinstall.json da github


------------------------------------------------------------------------------- definizione problema

in mysql:
--------------  RENAME  DUMP  database
ref.:
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- rename database
    <-- dump database
  https://phoenixnap.com/kb/how-to-rename-a-mysql-database
    <-- altro script, in bash
  https://stackoverflow.com/questions/12190000/rename-mysql-database
    <-- alcuni suggerimenti utili ...

automysqlbackup
  https://sourceforge.net/projects/automysqlbackup/files/latest/download
    <-- Automatic MySQL Backup
    <-- bash script da vedere: backup schedulato ...
  http://www.ducea.com/2006/05/27/backup-your-mysql-databases-automatically-with-automysqlbackup/
    <-- tutorial


-------------------------------------------------------------

use PHP to alter the db:
ref.:
  https://www.supportsages.com/php-script-to-change-mysql-table-prefix/
    <-- script MOLTO interessante
    <-- HTML per leggere le pwd etc.         <-- usare .env ? 

  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <--mysqlcli version for 'copytables'

  https://helloacm.com/duplicate-a-mysql-table-copy-table-duplicate-database-php-script/
    <--  insert --> select  

-----
  http://www.learningaboutelectronics.com/Articles/How-to-rename-a-MySQL-table-using-PHP.php
    <-- PHP script
  https://gist.github.com/yireo/5919293
    <-- gist ~~= al php visto sopra

  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- sembra buono ...







dockrepo/sysdata/var_www/html/
├── giuseppe.php
├── index.html
├── index.lua
├── index.php
├── license.txt
├── readme.html
├── wp-activate.php
├── wp-admin
├── wp-blog-header.php
├── wp-comments-post.php
├── wp-config-sample.php
├── wp-config.beans.php
├── wp-config.php
├── wp-content
├── wp-cron.php
├── wp-includes
├── wp-links-opml.php
├── wp-load.php
├── wp-login.php
├── wp-mail.php
├── wp-settings.php
├── wp-signup.php
├── wp-trackback.php
└── xmlrpc.php



--------------  RENAME  DUMP  database
ref.: https://phoenixnap.com/kb/how-to-rename-a-mysql-database
        <-- rename database
        <-- dump database

  https://stackoverflow.com/questions/22199557/assign-an-existing-user-to-mysql-databases/22199886
    <-- mysql query to grant privileges to user

  

Problema:
  dare ALL GRANTS a wpuser sul db gtlite_bk        <--    fare in verifyinit ??                     DA FARE


mysql -u root -pGTH2020_quattro_marzo

ref. usati:
  https://www.matteomattei.com/how-to-clone-mysql-database-schema-in-php/
    <-- usata versione cli come template 
    <--  (thanks to Richard Maurer)

  https://www.matteomattei.com/how-to-backup-mysql-data-and-schema-in-php/
    <-- questo NON HA FUNZIONATO


  https://stackoverflow.com/questions/50649207/how-to-copy-all-the-tables-from-one-database-to-another-database-using-php
    <-- myscli version per copytables
    <-- anche questo SEMBRA NON FUNZIONARE


10.133.94.60/gtlite_bk/  http://phpmyadmin.gothings.org/db_sql.php?db=gtlite_bk
Your SQL query has been executed successfully.

show grants for 'wpuser'@'10.133.%';

GRANT USAGE ON *.* TO 'wpuser'@'10.133.%' IDENTIFI... 
GRANT ALL PRIVILEGES ON `gtlite`.* TO 'wpuser'@'10... 
GRANT ALL PRIVILEGES ON `gtlite_bk`.* TO 'wpuser'@... 




                                                                               Funzione CLEAR - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                        WP MULTISITE  |

  https://cpothemes.com/install-setup-wordpress-multisite-network
    <-- install wp multisite


                                                                                 WP MULTISITE - fine  |
=====================================================================================================/



=====================================================================================================\
                                                                                    Roba DA GUARDARE  |

  https://wordpress.org/support/article/editing-wp-config-php/
    <-- tips per WP-CONFIG.PHP

  https://cpothemes.com/install-setup-wordpress-multisite-network
    <-- install wp multisite

  https://www.brianshim.com/webtricks/map-domain-name-wordpress-page-post/
    <-- mappaggio URL con apache .htaccess, forse indica come fare con nginx

  https://wordpress.stackexchange.com/questions/130076/multisite-redirect-to-appropriate-domain-if-subdomain-doesnt-exist
    <-- caso strano non-existent
  https://gist.github.com/dejanmarkovic/8323792
    <-- NOBLOGREDIRECT explained and fix

  https://www.slant.co/options/4899/alternatives/~navicat-for-mysql-alternatives
    <-- gestione mysql db      <-- alternative a phpmyadmin
    <-- vedi: adminer   dbschema


                                                                             Roba DA GUARDARE - fine  |
=====================================================================================================/


Stampa errori:                                                                                      DA FARE
  - aggiungere variabili per chiarire le cause ...   ???
  - si dovrebbe sapere:
     fase
     sottofase dove e' causato
     


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ seguito DA AGGIUSTARE


- prova con myadmin, per verificare il collegamento al db
    <-- fatto in locale, senza admin ...:  OK
- sostituzione valori SIMULATA:
    1.- si copia wp-config.beans.php sopra wp-config.php
    2.- si aggiusta in wpinit.sh o meglio in wpinstall.sh
          <-- init aggiusta il sdb (va olo creato il db)
          <-- install aggiusta il php




=====================================================================================================\
                                                                                               START  |
                                                                                                fine  |
=====================================================================================================/


                                                                     *** WP Service - v0.01.02  ***
---------------------------------------------------------------------------------------------------\
                                                                                  *** WP Service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE

                                                                      *** WP Service - v0.01.02  ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@







@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-00-00
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                      *** WP Service - v0.01.01  ***


------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-03-14
                                                                                  *** WP Service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                     *** WP Service - v0.01.01  ***

Installazione di wordpress multisite per gothings-cloud-apps

- altro tentativo di generalizzazione di gocloud-<appname>

ref.:
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- ref principale per iniziare il lavoro

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- useful hints for wp multisite setup

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04
    <-- install phpmyadmin

  https://easyengine.io/tutorials/docker-wordpress/
    <-- sembra buono
  https://www.slideshare.net/rtcamp/easyengine-command-line-tool-to-manage-wordpress-sites-on-nginx-server-wordcampmumbai14
    <-- vedi struttura dir consigliata

  https://github.com/docker-library/wordpress/pull/142
    <-- inizializzazione 'EXTRA' per wordpress


------------------------- dati utili

Database server
    Server: 10.133.94.60 via TCP/IP
    Server type: MariaDB
    Server connection: SSL is not being used Documentation
    Server version: 10.4.12-MariaDB-1:10.4.12+maria~bionic - mariadb.org binary distribution
    Protocol version: 10
    User: root@10.133.3.65
    Server charset: cp1252 West European (latin1)

GRANT ALL PRIVILEGES ON wpdata.* TO 'wpuser'@'10.133.%';
show grants for 'wpuser'@'10.133.%';

====> aggiustati:
        - firewall per bloccare accesso a mysql dal pubblico  (gothings-public)
        - accesso root & wpuser solo da rete interna

  ----------------------
    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'wpuser'@'10.133.3.65' IDENTIFIED BY 'penna_matita_gomma';
      DROP USER 'wpuser'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'wpuser'@'10.133.3.65';
  ----------------------

Valori usati dalla 1.a versione di config.sh

ROOT_PWD_OLD="root_pwd"
ROOT_PWD="GTH2020_quattro_marzo"
WPUSER="wpuser"
WPUSER_PWD="penna_matita_gomma"
WPDATABASE="gtlite"
GOTHINGSNET="10.133.%"
ERRCOUNT=0
LOGFILE="dbconfig.log"

--------------------------------------------------------------------------------

---------------  Installazione wp - fase expand



                                                                     *** WP Service - v0.01.01  ***
---------------------------------------------------------------------------------------------------\
                                                                                  *** WP Service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------


                                                                      *** WP Service - v0.01.01  ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@







@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-01-27 ?
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                          *** GOTHINGS cloud v03 ***

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-01-27
                                                                          *** GOTHINGS cloud v03 ***/----------
---------------------------------------------------------------------------------------------------/
                                                    *** Cloud v03 - droplet base  + db separato ***


-------------------------------------------------------------------------------------------------v03
Preparazione per v03:
- 1 droplet SOLO per il db
    si parte con la 'piccola' da 5 euro, che potra' crescere ...
- 1 droplet per TUTTE le altre funzioni:
    - nginx proxy per tutti i servizi:
        test server       sito statico per verifica rapida delle funzionalita'
        redis             keystore principale
        gothings-base     per i servizi essenziali: compreso il server degli eventi
        php-fpm           per TUTTI i wp-multisite definiti
                          ogni wp-multisite ha una sua doc root specifica
- supporto certbot per i siti https
- espansione/migrazione dei siti verso altre droplet
----------------------------------------------------------------------------------------------------

creata droplet gothings-v09-base                          <-- ora si chiama:   gothings-v01-03
    public IPv4       188.166.70.203
    private ip        10.133.3.65




                                                    *** Cloud v03 - droplet base  + db separato ***
---------------------------------------------------------------------------------------------------\
                                                                          *** GOTHINGS cloud v03 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-
                                                                             *** GOTHINGS Helper ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                     *** Helper container - v01 ***

scopo:
  container transitorio per configurare/installare/testare/..?.. un altro container
    --> esportare la strategia al contenitori wordpress
    --> esportare la strategia ad altri servizi che necessitano di inizializzazione

implementazione:
  un contenitore con una applicazione nodejs che aiuta l'utente a raggiungere lo scopo


====================================================================================================\
                                                                               Ricerche preliminari |

------- run multiple node js scripts

  https://itnext.io/4-solutions-to-run-multiple-node-js-or-npm-commands-simultaneously-9edaa6215a93
    <-- discussione su diversi modi ... Da Vedere

  https://github.com/paigen11/mysql-registration-passport
    <--  MySQL Registration with JWT & Passport Authentication - vedi anche prossimi 2 ref

  https://medium.com/@paigen11/using-docker-docker-compose-to-improve-your-full-stack-application-development-1e41280748f4
    <-- esempio di docker 'api & client & mysql' con nodejs

  https://medium.com/@paigen11/sequelize-the-orm-for-sql-databases-with-nodejs-daa7c6d5aca3
    <-- ORM (Object Relational Mapping) su node js, esempio interessante con 'sequelize'

------- node concurrency in generale
  https://itnext.io/multi-threading-and-multi-process-in-node-js-ffa5bb5cde98
  https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop
    <-- buona descrizione 'event loop' in node js
  https://blog.logrocket.com/node-js-multithreading-what-are-worker-threads-and-why-do-they-matter-48ab102f8b10/
    <-- DA GUARDARE
  https://corgibytes.com/blog/2017/04/18/npm-tips/
    <--  NPM pre & post scripts
  https://www.fpcomplete.com/blog/2016/12/concurrency-and-node
    <-- da guardare ?

CONCLUSIONE:
  - INTERESSANTE, si potrebbe automatizzare il tutto
  - COMPLICATO, da NON includere in MVP

  ==> usare un phpmyadmin temporaneo sulla stessa droplet di db

FUTURO:
  ==> usare helper con node js per automatizzare il processo di configurazione iniziale

                                                                                                    |
====================================================================================================/




----------------------------------------------------------------------------------------------------
------------------------------------------------------------------  HELPER container:  1.o tentativo

sperimentazione:
- si parte da 'cloudlog'
    <-- si ottiene un server http
- per ora si lavora con 'docker exec ..', poi si procedera' programmaticamente


======================================================  RIPASSO dell'installazione di una app NODEJS

fase expand:  === a tutti gli altri ...    NON si prevedono problemi
                                                                                                    DA RIVEDERE
::=====>  aggiungere uno script per eventuali dir mancanti?
          mettere script pre & post?

-----------------------------------------------------------------------------  Strategia fase expand

Per il contenitore <app>:
  - si genera l'archivio <app> con lo script make-<app>dirstar.gz
      <-- contenuto di dockrepo/sysdata>/* per tutta la <app>
  - l'archivio e' memorizzato su github
      <-- l'indirizzo di lettura e':
            https://raw.githubusercontent.com/fpirri/gothings-apps/master/<app>/<app>dirs.tar.gz
  - la fase di espansione e' controllata dal file in ~/dockrepo/dockimages/<app>/<app>expand.json
      <-- se il file non e' presente sulla droplet lo script lo scarica da github:
            https://raw.githubusercontent.com/fpirri/gothings-apps/master/<app>/dockrepo/dockimages/<app>/<app>expand.json" 
  - lo 'status' in <app>expand.json determina ...


====================================================================================================

mysql -u wpuser -puser_pwd
mysql -u root -proot_pwd
select host, user from mysql.user;


-------------------------------------------------------------------------- utilita' da db
--------------------------------------- ambiente di sviluppo



Droplet:   gothings-v01-03       <--  base, wordpress & phpmyadmin
   public IP    188.166.70.203
  private IP    10.133.3.65
           db:  

Droplet:   gothings-v09          <--  db                                               *** sottotitolo diverso per ogni versione storica ***

   public IP    104.248.95.29
  private IP    10.133.94.60




===> mysql da terminale ...

      mysql -u root --password=HiLite_2008_GoCloud_2020
        oppure:       -->    pwd: HiLite_2008_GoCloud_2020
      show databases;
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT

    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'Pluto1945'@'10.133.3.65' IDENTIFIED BY 'Himage_2019_IoT';
      DROP USER 'Pluto1945'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'Pluto1945'@'10.133.3.65';
  ----------------------




                                                                     *** Helper container - v01 ***
---------------------------------------------------------------------------------------------------\
                                                                             *** GOTHINGS Helper ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-02-24
                                                                                  *** DB service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                                     *** DB service - v0.01.04  ***

Definisci, installa ed usa MARIADB in gothings

- usa la versione GENERALIZZATA di gocloud-xxx

doc:
  .../WP-Sviluppi/gothings/README.gothings.cloud

NOTE:
- definito UFW per VIETARE SEMPRE accesso al db dall'esterno                         TESTARE MEGLIO?
- UFW: accesso permeso dalla rete interna di gothins (10:133.0.0/16)                 TESTARE MEGLIO?

                                                                                                    DA FARE
- aggiornare gli script per il db: accesso permesso per wpuser @ 10.133.%            TESTARE MEGLIO?


--------------------  FIREWALL UFW su DigitalOcean (DO)
nome: gothings-public
      8 Rules / 2 Droplets

Inbound Rules

Type      Protocol    Port Range      Sources  
ICMP     ICMP                        All IPv4  All IPv6
SSH       TCP        22              All IPv4  All IPv6
HTTP      TCP        80              All IPv4  All IPv6
HTTPS    TCP        443            All IPv4  All IPv6
MySQL    TCP        3306           10.133.0.0/16

Rules for incoming traffic. Only the specified ports will accept inbound connections.
All other traffic will be blocked.
    
Outbound Rules

Type     Protocol    Port Range     Destinations  
ICMP     ICMP                      All IPv4  All IPv6
All TCP  TCP        All ports      All IPv4  All IPv6
All UDP  UDP        All ports      All IPv4  All IPv6

Firewall rules for outbound traffic. Outbound traffic will only be allowed to the specified ports.
All other traffic will be blocked.


---------------------  inizializzazione sicura di MariaDB
- alla creazione la root password e' TOTALMENTE insicura
    <-- viene generata da un file pubblico
- si usa un file generato dall'utente per impostare gli utenti ammessi & le loro pwd
    <-- lo script dbsecure gira lo script config.sh all'interno della droplet
    <-- config.sh cambia la root password ed elimina gli accessi remoti pericolosi
    <-- viene ammesso l'accesso solo dalla rete (privata) dell'utente DO

                                                                                                    FUTURO
- da definire un dbconfig.json che consente di personalizzare facilmente db (e altre applicazioni)
    <-- helper in node js


=====================================================================================================\
---------------------------------------------------------------- 3.o sviluppo: init MariaDB con bash |

                                                RISULTATO:

Configurazione 'sicura' di db con bash nel contenitore

Implementazione:
  - lo script bash fa vedere TUTTI gli utenti attivi
      --> dovrebbe esserci solo root da localost e da TUTTI i remoti
  - si aggiorna la root password
  - d'ora in avanti si usa la nuova password
  - si definisce una root con accesso da tutta la rete privata
  - si elimina l'utente root da tutti i remoti
  - si crea un database nuovo
  - si crea l'utente wpuser, con accesso da tutta la rete privata
  - si concede a wpuser TUTTI i diritti sul database appena creato


comando exec script:
  docker exec -ti db bash -c /opt/mysql/dbconfig/config.sh

elenca gli utenti:
  mysql -u root -proot_pwd -e 'select host, user from mysql.user;'
  mysql -u root -pGTH2020_quattro_marzo -e 'select host, user from mysql.user;'

cambia root password:
  mysql -u root -proot_pwd -e "SET PASSWORD FOR root@localhost = PASSWORD('GTH2020_quattro_marzo')";

ora dovrebbe funzionare:
  mysql -u root -pGTH2020_quattro_marzo -e 'select host, user from mysql.user;'

elimina user:
  DROP USER 'root'@'%';
  DROP USER 'root'@'10.133.%';

comandi:
  mysql -u root -proot_pwd -e 'select host, user from mysql.user;'
  mysql -u root -proot_pwd -e "SET PASSWORD FOR root@localhost = PASSWORD('GTH2020_quattro_marzo')";
  mysql -u root -pROOTPWD -e 'select host, user from mysql.user;'

  GRANT ALL PRIVILEGES ON wpdata.* TO 'wpuser'@'10.133.%';
  show grants for 'wpuser'@'10.133.%';

COMMAND create user & password with privilege over database:
  GRANT ALL PRIVILEGES ON ${WPDATABASE}.* TO '${WPUSER}'@'localhost' IDENTIFIED BY '${WPUSER_PWD}'
  GRANT ALL PRIVILEGES ON ${WPDATABASE}.* TO '${WPUSER}'@'${GOTHINGSNET}'

elimina database:
  DROP DATABASE ${WPDATABASE}
  mysql -u root -pROOTPWD -e "DROP DATABASE ${WPDATABASE}";
  mysql -u root -pGTH2020_quattro_marzo -e "DROP DATABASE gtlite";
  mysql -u root -pGTH2020_quattro_marzo -e "SHOW databases";

multiple queries:
mysql -u USER -pPASSWORD <<EOF
SQL_QUERY 1
SQL_QUERY 2
SQL_QUERY N
EOF

      create user 'user2020'@'10.133.3.65' IDENTIFIED BY 'pwd2020';
      drop user 'Pluto1945'@'10.133.3.65';
      grant all privileges on  gtlite.* TO 'Pluto1945'@'10.133.3.65';


--> verifica db:

refs:
  https://www.a2hosting.com/kb/developer-corner/mysql/managing-mysql-databases-and-users-from-the-command-line
  https://stackoverflow.com/questions/42223657/change-mysql-root-user-password-using-shell-script

chiamata script:
    docker exec -ti db bash -c /opt/mysql/dbconfig/config.sh
controllo vecchia root:
    mysql -u root -proot_pwd -e 'select host, user from mysql.user;'
    

=======>  lo script FUNZIONA quando richiamato con 'docker exec',
          dobbiamo verificarlo su richiamo in gocloud-db                                            DA FARE

=======>  lo script FUNZIONA su richiamo in gocloud-db
          in corso: segnalazione & blocco su gocloud-db

                                                                  <=== VERIFICARE cos e' stato fatto
- completare l'esecuzione CLEAR all'interno del menu
- eseguire il clear nella valutazione envinronment LA PRIMA VOLTA & in STARTAPP  (?)
- FARE versione generalizzata di:
  - verifyinit su db
  - verifyinstall su db
  - verifyenv su db
- verificare la correttezza della generalizzazione su wp
NOTE:
  - prima fase: esecuzione simulata degli script di init/install/env
  - 2.a fase: effettiva lettura dei valori dal json

?- eventuale generalizzazione del processo di esecuzione per tutti i <any>.json

- db: copia di salvataggio del database PRIMA del CLEAR effettivo

- operazioni da prevedere:
  - pagina web, da apposito contenitore, per scrivere il dbconfig.json
  - copia di salvataggio del db per l'eventuale ripristino
  - dare istruzioni web per il ripristino
                                         --------------------------------------------- fine verifica

--------------- DELETE database
ref.: https://www.cyberciti.biz/faq/how-do-i-empty-mysql-database/

--------------  RENAME  DUMP  database
ref.: https://phoenixnap.com/kb/how-to-rename-a-mysql-database
        <-- rename database
        <-- dump database



                                                                                                fine |
=====================================================================================================/


=====================================================================================================\
---------------------------------------------------------- 2.o sviluppo: init MariaDB con phpmyadmin |

                                                RISULTATO:  possibile lavorare alla soluzione 'bash'
                                                            con adeguata sicurezza
Generazione db con pwd 'sicura'

ref.:
1.
  https://github.com/docker-library/mariadb/issues/99
    <-- start db with  '--skip-grant-tables'
2.
  https://mariadb.com/kb/en/installing-and-using-mariadb-via-docker/
    <-- suggerimenti per mariadb su docker
3.
  https://www.techrepublic.com/article/how-to-set-change-and-recover-a-mysql-root-password/
    <-- discussione sulla 'root password'

idea base per la produzione:                                                                        DA RIVEDERE
  - eliminare accesso da fuori al port 3306 di mysql
    - usare 'uncomplicated firewall' UFW su eth0
    - rimane il collegamento tra i container
    - si usera' nginx per arrivare a phpmyadmin e da esso a mariadb
  - start con una password da usare solo inizialmente
    - quando sara' disponibile https si potra' usare phpmyadmin.gothings.org
      - ora, nello sviluppo iniziale, faremo proprio cosi' !
  - costruire un container apposito per il cambio della root pwd
    - mettere uno script nel container per cambiare la password
      <-- vedi lo sviluppo iniziale sotto
 
  - si puo' usare lo stesso metodo per configurare wordpress
    --> ci pensiamo dopo

procedimento per lo sviluppo iniziale:
  - si inizializza il db con .env-db-init
    - ovvero si usano nomi e pwd in stile 'tutorial'
  - si fara' lo stesso con wordpress
  - si mette l'opzione 'distruggi tutto' nei menu' di controllo
  - si fanno tutte le prove del caso

successivamente si passera' alla fase di produzione


--------------- sviluppo 

Droplet:   gothings-v09          <--  db
   public IP    104.248.95.29
  private IP    10.133.94.60

===> .env-db-init
        MYSQL_ROOT_PASSWORD=root_pwd
        MYSQL_DATABASE=wpdata
        MYSQL_USER=wpuser
        MYSQL_PASSWORD=wpuser_pwd

====> mysql da terminale ...

      mysql -u wpuser -puser_pwd
      mysql -u root -proot_pwd
      select host, user from mysql.user;
      create user 'user2020'@'10.133.3.65' IDENTIFIED BY 'pwd2020';
      drop user 'Pluto1945'@'10.133.3.65';
      grant all privileges on  gtlite.* TO 'Pluto1945'@'10.133.3.65';


  ... si aggiustano i diritti per rimanere sulla rete interna ...

private IP:
  - e' una rete /16
  - ogni droplet ha un proprio IP
  

la via maestra e':    USARE DOCKER SWARM

----------------------------------------------------------
setup con phpmyadmin in gothings-v01-03:

Database server
    Server: 10.133.94.60 via TCP/IP
    Server type: MariaDB
    Server connection: SSL is not being used Documentation
    Server version: 10.4.12-MariaDB-1:10.4.12+maria~bionic - mariadb.org binary distribution
    Protocol version: 10
    User: root@10.133.3.65
    Server charset: cp1252 West European (latin1)

GRANT ALL PRIVILEGES ON wpdata.* TO 'wpuser'@'10.133.%';
show grants for 'wpuser'@'10.133.%';

====> aggiustati:
        - firewall per bloccare accesso a mysql dal pubblico  (gothings-public)
        - accesso root & wpuser solo da rete interna

  ----------------------
    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'Pluto1945'@'10.133.3.65' IDENTIFIED BY 'Himage_2019_IoT';
      DROP USER 'Pluto1945'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'Pluto1945'@'10.133.3.65';
  ----------------------
                                                                                                fine |
=====================================================================================================/


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------  HELPER container
                                                                                           RIMANDATO
sperimentazione:
scopo:  determinare una strategia per l'inizializzazione del conmtenitore db
          --> esportare la strategia al contenitori wordpress
          --> esportare la strategia ad altri servizi che necessitano di inizializzazione
ref.
  http://bigdatums.net/2017/11/07/how-to-keep-docker-containers-running/
    <-- trucco semplicissimo per mantenere aperto un contenitore
- OK, il contenitore non muore

ref.
  https://www.linode.com/docs/databases/mysql/create-an-ssh-tunnel-for-mysql-remote-access/
    <-- tutorial
- proviamo la versione ssh ...
      ssh root@172.29.196.187 -L 3307:127.0.0.1:3306 -N
         ===> NON FUNZIONA !!!     db non ha ssh



=====================================================================================================\
                                                                 1.o sviluppo: prove di comprensione |
--------------------------------------- ambiente di sviluppo

Droplet:   gothings-v01-03       <--  base, wordpress & phpmyadmin
   public IP    188.166.70.203
  private IP    10.133.3.65
           db:  

Droplet:   gothings-v09          <--  db
   public IP    104.248.95.29
  private IP    10.133.94.60

===> ha funzionato ....

      mysql -u root --password=HiLite_2008_GoCloud_2020
        oppure:   mysql -u root -p    -->    pwd: HiLite_2008_GoCloud_2020
      show databases;
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT

    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'Pluto1945'@'10.133.3.65' IDENTIFIED BY 'Himage_2019_IoT';
      DROP USER 'Pluto1945'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'Pluto1945'@'10.133.3.65';
----------------------
                                                                                                fine |
=====================================================================================================/


                                                                     *** DB service - v0.01.04  ***
---------------------------------------------------------------------------------------------------\
                                                                                  *** DB service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-02-24
                                                                          *** PhpMyAdmin service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                             *** PhpMyAdmin service - v0.01.02  ***

*****  NOTA:  PhpMyAdmin e' NON SICURO con il protocollo HTTP  *****
       <-- usare myadmin SOLO il minimo necessario !!
       <-- fare PAUSE sul container quando non lo si usa
       <-- con certbot sara' di nuovo usabile


Definisci, installa ed usa phpmyadmin in gothings

- immagine ufficiale da dockerhub
    https://hub.docker.com/r/phpmyadmin/phpmyadmin/
- configurazione 'with arbitrary server'
- apache server integrato
- uso con proxy_pass da gothings

doc:
  .../WP-Sviluppi/gothings/README.gothings.cloud


Risultato:
  - il container funziona con indirizzo esterno:
      http://188.166.70.203:7007/
  - il passaggio dal proxy nginx NON FUNZIONA
      <-- sembra ci siano dei problemi di sicurezza
      <-- a phpmyadmin 'non piace' la configurazione del proxy
===> riprovare quando avremo messo HTTPS ??

CONCLUSIONE:
- e' possibile montare phpmyadmin sulla stessa droplet di nginx
- la droplet diviene raggiungibile come:     http://phpmyadmin.gothings.org/

NOTA:
  vista l'elevata mole di attacchi a phpmyadmin e' consigliabile FERMARE
  phpmyadmin quando non serve !!!

*** controllo environment ancora da fare ! ***                                                      DA FARE


NOTA:
in questo e negli altri servizi e' opportuno OBBLIGARE un cambio di password
rispetto a quanto memorizzato su github


---------------------------------------------------------------------------------  SERVIZIO 'MYADMIN

--------------------------------------- 
phpmyadmin per vedere db:
      server:   10.133.94.60
    username:   Pluto1945
    password:   Himage_2019_IoT
---------------------------------------
                                         <==@@@@@ FALSO?    <-- DA VERIFICARE !!!  @@@@@@@@@@@@@@@@@  DA FARE
da internet:
    http://178.128.143.208:7007

  curl --verbose --header 'Host: phpmyadmin.gothings.org' 'http://10.133.3.65:7007/'

  curl --verbose 'http://10.133.3.65:7007/'


----------------------------------------------------------------------------------------------------
                                                                                     test phpmyadmin

connessione da phpmyadmin@gothings-v01-03  verso  <vedi sopra: ... per vedere db>

  Database server

    Server: 10.133.94.60 via TCP/IP
    Server type: MySQL
    Server connection: SSL is not being used Documentation
    Server version: 8.0.19 - MySQL Community Server - GPL
    Protocol version: 10
    User: Pluto1945@10.133.3.65
    Server charset: UTF-8 Unicode (utf8mb4)

  Web server

    Apache/2.4.38 (Debian)
    Database client version: libmysql - mysqlnd 7.4.1
    PHP extension: mysqliDocumentation curlDocumentation mbstringDocumentation
    PHP version: 7.4.1



----------------------------------------------------------------------------------------------------
--------------------------------------- sviluppo

#
#  ===================================================================
#  
#  Definisci, installa ed usa phpmyadmin in gothings
#  
#  - immagine ufficiale da dockerhub
#      https://hub.docker.com/r/phpmyadmin/phpmyadmin/
#  - configurazione 'with arbitrary server'
#  - apache server integrato
#  - uso con proxy_pass da gothings
#  
#  doc:
#    .../WP-Sviluppi/gothings/README.gothings.cloud
#    
#


Droplet:   gothings-v01-03       <--  base, wordpress & phpmyadmin
   public IP    188.166.70.203
  private IP    10.133.3.65
           db:  

Droplet:   gothings-v09          <--  db
   public IP    104.248.95.29
  private IP    10.133.94.60




===> mysql da terminale ...

      mysql -u root --password=HiLite_2008_GoCloud_2020
        oppure:   mysql -u root -p    -->    pwd: HiLite_2008_GoCloud_2020
      show databases;
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT

    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'Pluto1945'@'10.133.3.65' IDENTIFIED BY 'Himage_2019_IoT';
      DROP USER 'Pluto1945'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'Pluto1945'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'Pluto1945'@'%';
  ----------------------



                                                             *** PhpMyAdmin service - v0.01.02  ***
---------------------------------------------------------------------------------------------------\
                                                                          *** PhpMyAdmin service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------

                                                                          *** GOTHINGS cloud v03 ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@










@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-02-23
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                              *** PhpMyAdmin service - v0.01.01  ***


------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2020-02-20
                                                                          *** PhpMyAdmin service ***/-------------
---------------------------------------------------------------------------------------------------/
                                                             *** PhpMyAdmin service - v0.01.01  ***

----------------------------------------------------------------------------------------------------
  ERRORE corretto !!!
------------------------

===> il container non rispondeva bene per via del ling all'host locale:  'ports  7007:80'
     - la soluzione e' mettere 'expose 80' nel compose.yml, cosi nginx puo' connettersi
       al container
--> memorizzato nello storico
----------------------------------------------------------------------------------------------------


Definisci, installa ed usa phpmyadmin in gothings

- immagine ufficiale da dockerhub
    https://hub.docker.com/r/phpmyadmin/phpmyadmin/
- configurazione 'with arbitrary server'
- apache server integrato
- uso con proxy_pass da gothings

doc:
  .../WP-Sviluppi/gothings/README.gothings.cloud


Risultato:
  - il container funziona con indirizzo esterno:
      http://188.166.70.203:7007/
  - il passaggio dal proxy nginx NON FUNZIONA
      <-- sembra ci siano dei problemi di sicurezza
      <-- a phpmyadmin 'non piace' la configurazione del proxy
===> riprovare quando avremo messo HTTPS ??

CONCLUSIONE ATTUALE:
- posso usare phpmyadmin per esplorazioni veloci usando:  http://188.166.70.203:7007/
- meglio disabilitare phpmyadmin quando non serve ...
- si abbandona l'idea di installare phpmyadmin.gothings.org come servizio

==> si sviluppa il servizio 'myadmin' come templaste di un servizio generico (vedi sotto)


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Analisi degli errori:
  - phpmyadmin svolge controlli di sicurezza interni
  - il servizio myadmin attraverso nginx produce gli errori:
    1.
      2020/02/22 08:08:38 [error] 65#65: *4338
      connect() failed (111: Connection refused) while connecting to upstream,
      client: 37.252.78.6,
      server: phpmyadmin.gothings.org,
      request: "GET / HTTP/1.1",
      upstream: "http://172.29.196.189:7007/",
      host: "188.166.70.203:80"
        <-- sembra una richiesta da fuori, con IP 37.252.78.6  
      |02 37.252.78.6 [22/Feb/2020:08:08:38 +0000] 502 163 &| |PhpMyAdmin| |&
        <-- il browser mostra l'errore 502
    2.
      2020/02/22 08:12:00 [error] 65#65:
      *4340 connect() failed (111: Connection refused) while connecting to upstream,
      client: 185.236.68.79,
      server: phpmyadmin.gothings.org,
      request: "GET / HTTP/1.1",
      upstream: "http://172.29.196.189:7007/",
      host: "178.128.143.208:80"
        <-- richiesta da pala
      |02 185.236.68.79 [22/Feb/2020:08:12:00 +0000] 502 565 &| |PhpMyAdmin| |&
        <-- il browser mostra l'errore 502
    3.
      2020/02/22 08:13:47 [error] 65#65: *4344
      connect() failed (111: Connection refused) while connecting to upstream,
      client: 62.211.106.74,
      server: phpmyadmin.gothings.org,
      request: "GET / HTTP/1.1",
      upstream: "http://172.29.196.189:7007/",
      host: "phpmyadmin.gothings.org"
        <-- richiesta da pala
      |02 62.211.106.74 [22/Feb/2020:08:13:47 +0000] 502 163 &| |PhpMyAdmin| |&
        <-- il browser mostra l'errore 502
    4.
      2020/02/22 08:19:47 [error] 65#65: *4346
      connect() failed (111: Connection refused) while connecting to upstream,
      client: 62.211.106.74,
      server: phpmyadmin.gothings.org,
      request: "GET / HTTP/1.1",
      upstream: "http://172.29.196.189:7007/",
      host: "phpmyadmin.gothings.org"
        <-- richiesta da pala
      |02 62.211.106.74 [22/Feb/2020:08:19:47 +0000] 502 163 &| |PhpMyAdmin| |&
        <-- il browser mostra l'errore 502
  - client che si sono connessi:
      2020/02/22 07:43:12   client: 118.24.169.221, server: phpmyadmin.gothings.org
      2020/02/22 07:43:15   client: 118.24.169.221, server: phpmyadmin.gothings.org
      2020/02/22 07:43:18   client: 118.24.169.221, server: phpmyadmin.gothings.org
      2020/02/22 08:03:03   client: 62.211.106.74,  server: phpmyadmin.gothings.org
      2020/02/22 08:08:38   client: 37.252.78.6,    server: phpmyadmin.gothings.org
      2020/02/22 08:12:00   client: 185.236.68.79,  server: phpmyadmin.gothings.org
      2020/02/22 08:13:47   client: 62.211.106.74,  server: phpmyadmin.gothings.org
      2020/02/22 08:19:47   client: 62.211.106.74,  server: phpmyadmin.gothings.org
  - altri client:  
      37.26.63.180
      141.101.76.246
      141.101.105.44
      45.152.6.58
      222.186.19.221
      141.101.105.44
il mio indirizzo adesso e':   62.211.106.74

  - usando:   https://www.findip-address.com/<IP ADDRESS>
    si trova di tutto:  Amsterdam, Baku Azerbajan, Los Angeles, Jiangsu China, ...
     --> usando 'phpmyadmin.gothings.org' abbiamo detto a tutti che abbiamo un sito interessante ...

----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------  SERVIZIO 'MYADMIN

--------------------------------------- 
phpmyadmin per vedere db:
      server:   10.133.94.60
    username:   Pluto1945
    password:   Himage_2019_IoT
---------------------------------------
da internet:
    http://178.128.143.208:7007

  curl --verbose --header 'Host: phpmyadmin.gothings.org' 'http://10.133.3.65:7007/'

  curl --verbose 'http://10.133.3.65:7007/'




----------------------------------------------------------------------------------------------------
--------------------------------------- ambiente di sviluppo



Droplet:   gothings-v01-03       <--  base, wordpress & phpmyadmin
   public IP    188.166.70.203
  private IP    10.133.3.65
           db:  

Droplet:   gothings-v09          <--  db
   public IP    104.248.95.29
  private IP    10.133.94.60




===> mysql da terminale ...

      mysql -u root --password=HiLite_2008_GoCloud_2020
        oppure:   mysql -u root -p    -->    pwd: HiLite_2008_GoCloud_2020
      show databases;
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT

    prove da remoto:
      select host, user, authentication_string from mysql.user;
      select host, user from mysql.user;
      CREATE USER 'Pluto1945'@'10.133.3.65' IDENTIFIED BY 'Himage_2019_IoT';
      DROP USER 'Pluto1945'@'10.133.3.65';
      GRANT ALL PRIVILEGES ON gtlite.* TO 'Pluto1945'@'10.133.3.65';
  ----------------------



                                                             *** PhpMyAdmin service - v0.01.01  ***
---------------------------------------------------------------------------------------------------\
                                                                          *** PhpMyAdmin service ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------


                                                              *** PhpMyAdmin service - v0.01.01  ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-02-09
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                          *** GOTHINGS cloud v02 ***


---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-02-08
                                                                          *** GOTHINGS cloud v02 ***/----------
---------------------------------------------------------------------------------------------------/
                                                                      *** Strategie - cloud v02 ***


------------------------------------------------------------------------  Servizi cloud per GOTHINGS

- La parte base contiene:
  - nginx              http proxy, TUTTO il traffico web passa da qui
  - redis              keystore per i dati di sistema, compreslo il network
  - logspout           acquisisce i logs e li invia alla applicazione node di gestione
  - cloud-node         3 funzioni:  'app' di base, 'user' app di debug, gestore degli eventi
  - certbot            applicativo per i certificati di letsencrypt

- la parte applicativa e' un sito wordpress multisite + certbot per i certificati di sicurezza
  - MariaDB            database service per parte base + wordpress
  - WP-FPM             motore PHP per wordpress & altro
  - certbot            applicativo per i certificati di letsencrypt

NOTA: per certbot non si sa ancora come si deve fare

--------------------------------------------------------------------  Funzionalita' nella parte base
- nginx
              http proxy, TUTTO il traffico web passa da qui

- redis
              keystore per i dati di sistema, compreslo il network

- logspout
           acquisisce i logs e li invia alla applicazione node di gestione

- cloud-node
         3 funzioni:  'app' di base, 'user' app di debug, gestore degli eventi


-------------------------------------------------------------------  Funzionalita' lato utente & IoT
-------------- Proposta di classificazione degli utenti gothings
                                                                                                    DA RIVEDERE
  - utenti WP pubblici
    - ricevono informazioni su gothings
    - sono anonimi, ma possono registrarsi su wp-multi
    - ricezione di info da alcune applicazioni IoT gothings
    - nessun controllo su IoT

  - utenti WP registrati
    - semplice registrazione in stile wordpress
    - tutto quanto vale per gli utenti WP pubblici
    - accesso ad ulteriori informazioni tramite siti WP 'sociali'
    - ricezione di info da alcune applicazioni IoT gothings
    - nessun controllo su IoT

  - utenti gothings
    - registrazione di secondo livello,
      - disclaimer per il tipo di servizio (nessuna responsabilita')
      - servizio gratuito, senza garanzie
      - possibilita' di passaggio 'a pago' nel futuro
    - tutto quanto vale per gli utenti WP registrati
    - possono registrare una loro LAN per scambio dati con applicazioni IoT gothings
    - area dedicata sul cloud per dati da/verso IoT (ampiezza controllata)
    - uso di una API IoT predefinita
    - possibilita' di scambio dati con applicazioni IoT tramite API
      - limitazioni sul # di operazioni

  - amministratori gothings
    - registrazione di terzo livello (automatica ?, Con approvazione?)
      - per ora, gratuita e con risorse limitate
      - forse, nel futuro, diventera' a pago
    - tutto quanto vale per gli utenti gothings
    - sito wp gothings dedicato
      - nome di subdominio registrato a livello gothings
      - amministrazione di livello WP per il subdominio
    - ampliamento (limitato) dell'area dedicata sul cloud per dati da/verso IoT
    - upgrade sui limiti operativi

  - sviluppatori gothings
    - ulteriore registrazione, non automatica,
    - tutto quanto vale per gli utenti WP registrati
    - ulteriore ampliamento dell'area dedicata sul cloud per dati da/verso IoT
    - possibilita' di registrare piu' LAN per scambio dati con applicazioni IoT gothings
    - possibilita' di estensioni:
      - estensione dell'API

  - partner gothings
    - solo con accordo scritto,
    - tutto quanto vale per gli utenti gli sviluppatori gothings
    - passaggio ad una droplet propria
    - discussione su tutto il resto

----------------------------------------------------------------------------------------------------



-------------- URLs

  - utenti WP pubblici:                                                www.gothings.org/path/
                                                                     cloud.gothings.org/path/
                                                                    things.gothings.org/path/
                                                                    wpwrok.gothings.org/path/
                                                                           gothings.org/path/
    path:  /iot/<pagina wp>
      - navigazione sulle URL predefinite:   www, cloud, things & wpwork
      - si vedono varie informazioni:
          pubblicizzazione delle funzionalita' di gothings
          descrizioni varie e prerequisiti per gothings
      - i siti 'superiori' non mostrano praticamente niente
          per i siti 'superiori' la registrazione e' praticamente indispensabile

      cloud       informazioni tecniche piu' approfondite
                  registrazione wp (per utenti wp registrati)
                  TUTTI possono registrarsi
      things      registrazione praticamente indispensabile
                    - dati IoT volatili senza registrazione (es.: cancellati alle 4 di notte)
                  ulteriori informazioni tecniche
                  ritenzione dei dati IoT
      wpwork      sito chiuso in mancanza di registrazione
      <none>      necessario al processo di installazione
                  *** trovare alternativa ?***

  - utenti WP registrati:                                              www.gothings.org/path/
                                                                     cloud.gothings.org/path/
                                                                    things.gothings.org/path/
                                                                    wpwrok.gothings.org/path/
    path:  /iot/<pagina wp>
      - accesso controllato a pagine con i dati permanenti
        cloud       informazioni tecniche piu' approfondite
                    registrazione wp automatica
                    TUTTI possono registrarsi
        things      dati IoT permanenti, ma limitati (estensione e # di operazioni)
                    ulteriori informazioni tecniche
        wpwork      sito chiuso in mancanza di registrazione
      - semplice registrazione in stile wordpress
      - tutto quanto vale per gli utenti WP pubblici
      - accesso ad ulteriori informazioni tramite siti WP 'superiori'
      - ricezione di info da alcune applicazioni IoT gothings
      - nessun controllo su IoT

                                                                                                    DA RIVEDERE
  - utenti gothings
    - registrazione di secondo livello,
      - disclaimer per il tipo di servizio (nessuna responsabilita')
      - servizio gratuito, senza garanzie
      - possibilita' di passaggio 'a pago' nel futuro
    - tutto quanto vale per gli utenti WP registrati
    - possono registrare una loro LAN per scambio dati con applicazioni IoT gothings
    - area dedicata sul cloud per dati da/verso IoT (ampiezza controllata)
    - uso di una API IoT predefinita
    - possibilita' di scambio dati con applicazioni IoT tramite API
      - limitazioni sul # di operazioni

  - amministratori gothings
    - registrazione di terzo livello (automatica ?, Con approvazione?)
      - per ora, gratuita e con risorse limitate
      - forse, nel futuro, diventera' a pago
    - tutto quanto vale per gli utenti gothings
    - sito wp gothings dedicato
      - nome di subdominio registrato a livello gothings
      - amministrazione di livello WP per il subdominio
    - ampliamento (limitato) dell'area dedicata sul cloud per dati da/verso IoT
    - upgrade sui limiti operativi

  - sviluppatori gothings
    - ulteriore registrazione, non automatica,
    - tutto quanto vale per gli utenti WP registrati
    - ulteriore ampliamento dell'area dedicata sul cloud per dati da/verso IoT
    - possibilita' di registrare piu' LAN per scambio dati con applicazioni IoT gothings
    - possibilita' di estensioni:
      - estensione dell'API

  - partner gothings


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------  ELIMINARE ?
---------------------------------------------------------------------------------------------  refs.

------------------------------
UTILIZZATI:

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- ref principale per iniziare il lavoro

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- useful hints for wp multisite setup

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04
    <-- install phpmyadmin

------------------------------
DA VEDERE:

  https://serge.frezefond.com/2015/12/using-json-as-dynamic-columns-with-mariadb/
  https://www.wix.engineering/post/scaling-to-100m-mysql-is-a-better-nosql
    <-- uso del JSON nel DB come se fosse nosql


------------------------------
VARI INTERESSANTI:

  https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04
    <-- https & let's encrypt

  https://tarunlalwani.com/post/request-capturing-nginx-lua/
    <-- interessante sistema per "guardare" cosa fa nginx  (log, statistiche, ...)

  https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
    <-- AVVERTENZE varie, anche per PHP

  https://wordpress.org/plugins/better-search-replace/
    <-- DA VEDERE per la migrazione di WP da un server ad un altro                        MIGRATE WP

  https://easyengine.io/
  https://easyengine.io/tutorials/redis/
    <-- buoni consigli per REDIS
  https://easyengine.io/tutorials/docker-wordpress/
    <-- sembra buono
  https://www.slideshare.net/rtcamp/easyengine-command-line-tool-to-manage-wordpress-sites-on-nginx-server-wordcampmumbai14
    <-- vedi struttura dir consigliata
  https://easyengine.io/tutorials/wpcli/finding-faulty-plugin/
    <-- wp-plugin debug




                                                                      *** Strategie - cloud v02 ***
---------------------------------------------------------------------------------------------------\
                                                                          *** GOTHINGS cloud v02 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-01-27
                                                                          *** GOTHINGS cloud v03 ***/----------
---------------------------------------------------------------------------------------------------/
                                                    *** Cloud v03 - droplet base  + db separato ***


-------------------------------------------------------------------------------------------------v03
Preparazione per v03:
- 1 droplet SOLO per il db
    si parte con la 'piccola' da 5 euro, che potra' crescere ...
- 1 droplet per TUTTE le altre funzioni:
    - nginx proxy per tutti i servizi:
        test server       sito statico per verifica rapida delle funzionalita'
        redis             keystore principale
        gothings-base     per i servizi essenziali: compreso il server degli eventi
        php-fpm           per TUTTI i wp-multisite definiti
                          ogni wp-multisite ha una sua doc root specifica
- supporto certbot per i siti https
- espansione/migrazione dei siti verso altre droplet
----------------------------------------------------------------------------------------------------

creata droplet gothings-v09-base
    public IPv4       188.166.70.203
    private ip        10.133.3.65




                                                    *** Cloud v03 - droplet base  + db separato ***
---------------------------------------------------------------------------------------------------\
                                                                          *** GOTHINGS cloud v03 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------




---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-01-27
                                                                          *** GOTHINGS cloud v02 ***/----------
---------------------------------------------------------------------------------------------------/
                                           *** 1.a stesura di BASE + WPMULTI in droplet singola ***



----------------------------------------------------------------------------------------------------
Per il primo vagito del montaggio ~automatico di wordpress multisite su una droplet:
       ===>  vedere in STORIA :   *** 2.a stesura CLOUD droplet ***

----------------------------------------------------------------------------------------------------
Nel seguito:
  - parte cloud di gothings
  - processo di installazione della parte base di gothings e WPMULTI in droplet singola

----------------------------------------------------------------------------------------------------
Situazione attuale:
- test sulla 1.a configurazione wpmulti
    IN CORSO
- fatto:
    snapshot
    resize a 1GB della memoria droplet
    test di funzionamento:
      aggiornamento plugin
  altri test:                    DA FARE
    import dal vecchio hlite

- snapshot effettuati:
    gothings-v09-2GB-1owpmultiok        1.o setp funzionante per wp multisite             2020-02-07
    gothings-v09-1GB-plugin_update      configurazione per i primi test                   2020-02-07

----------------------------------------------------------------------------------------------------

====================================================================================================
                                                                INTERESSANTI - da rivedere in STORIA
----------------------------------------------------------------------------------------------------
                                                     NOTA di sviluppo: wordpress multisite esistenti
                                                                        NOTA di sviluppo: LOG FORMAT
Personalizzazione del debug a livello NGINX
                                                        test di una ipotesi di costruzione sul cloud

----------------------------------------------------------------------------------------------------
====================================================================================================


----------------------------------------------------------------------------------------------------
                                                                                          Situazione

Lavoro attuale:                                                                           2020-02-08

- gateway nginx personalizzabile che:
  --> da una richiesta http fa funzionare un sito interno qualunque (es. wpmulti di gothings)
      --> si usa l'header 'host' che il browser aggiunge sempre
      --> per curl o altro va inserito
      --> sito default quando l'header host non c'e' o non e' registrato                     DA FARE
- redirect da http a https                                                                   DA FARE
- integrazione con i certicati di letsencrypt                                                DA FARE


Lavoro futuro:                                                                               DA FARE
- realizzare droplet (indipendenti tra loro) per un mix-and-match di funzionalita'
- unificare i diversi siti dal punto di vista del network
  <-- es.: faccio un secondo 'consumi facili' e li scambio a livello di proxy
  <-- per ogni sito ho una versione stabile ed una di sviluppo, sostituibili tra loro
  <-- un server http ha un nome interno ed uno esterno
      <-- quello interno e' http
      <-- quello esterno e' https
- aggiungere sicurezza con https & JWT


----------------------------------------------------------------------------------------------------
                                                                                      WORK cloud v02

- server virtuali:                                                                 <-- REVISIONARE !

  test                      per verificare il funzionamento della parte wp-multi
                            usato SOLO per il test

  servizi                   site:  iot.gothings.org
                            usa i servizi:
                              app                    demo iniziale di una applicazione nodejs
                              user                   show logs, da estendere per il debug e per
                                                     la gestione degli eventi
                            pensato per app 'native' (DA SVILUPPARE in seguito)

  wordpress multisite       subdomain definiti per il sito pubblico wordpress
                            per ora: {}
                              www.gothings.org       sito principale
                              cloud.gothings.org     servizi aggiunti per utenti wp
                              things.gothings.org    servizi aggiunti per utenti gothings
                              wpwork.gothings.org    servizi aggiunti per gothings admin

  undefined                 pagina di avviso per i siti non definiti ...
                            DA AGGIUSTARE: potrebbe chiedere di registrarsi
                                           potrebbe attivare un container per una registrazione
                                             automatica usando redis
                                           si puo' 'sfruttare' un redirect ???
                                           forse conviene fare qualche esperimento manuale
  
*** aggiungere consumifacili ***


??????????????????????  DA QUI IN POI AGGIUSTARE  !!!  ???????????????                >>> INIZIO


IP addresses:
  178.62.237.244       consumifacili.com public IP
  178.128.143.208      DO floating IP (assegnato a gothings-v09)
  104.248.95.29        gothings-v09 public IP

  curl --verbose --header 'Host: www.gothings.com' 'http://178.128.143.208'

- aggiustato DNS per gothings.org & consumifacili.com

--> verifica db:
    ref.:  https://www.a2hosting.com/kb/developer-corner/mysql/managing-mysql-databases-and-users-from-the-command-line
===>
      ./down_wpmulti
      sudo rm -rf /home/yesfi/dockrepo/sysdata/dbdata/*
      ls -la /home/yesfi/dockrepo/sysdata/dbdata
      sudo cp /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.beans.php /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php
      cat /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php
      ./start_wpmulti
      ./showdock
      docker exec -ti db bash
      mysql -u root --password=HiLite_2008_GoCloud_2020
        oppure:   mysql -u root -p    -->    pwd: HiLite_2008_GoCloud_2020
      show databases;
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT
-->
    create user hlite:                                           <--  lo fa il container!!
      GRANT ALL PRIVILEGES ON *.* TO 'Pluto1945'@'localhost' IDENTIFIED BY 'Himage_2019_IoT';
-->
    verifica wp-config.php
      sudo cp /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.beans.php /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php
      cat /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php


----------------------------------------------------------------------------------------------------
-------- Script up/down per wpmulti
./start_wpmulti
  - start db, worpress & letsencrypt
  - 1.a volta: init di TUTTO
  - poi: ricostruisce i containers in stile 'up -d' con compose 

-./down_wpmulti
  - stop & destroy db, worpress & letsencrypt
  - db & wp-config inalterati

-./clear_wpmulti
  - ./down_wpmulti
  - azzera il db
  -

set_wp_multi ????



------------------------------------------------------------------------------- INSTALL WP MULTISITE
ref.:
  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/

1.- installa il wp standard con le opzioni:
    Site Title    Go to the internet of things
    Username      yesflorence
    Password      2020Himage.Boh:admin
    Your Email    yesflorence@gmail.com

    Search Engine Visibility  Si

    table prefix:  GoTh01_


4.o tentativo
- si parte con 
- init db & wordpress con
      ./start_wpmulti
- si lancia il 5-minutes-install
- si esegue il login ...
  - si girella sulla dashboard: sembra OK
- si controlla il log del db
  --> sembra buono
- proviamo:
      docker exec -ti db bash
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT
      use gtlite
      show tables;
        --> 12 tabelle
- si ferma il wordpress
      docker stop wordpress
- si aggiusta il multisite con
      ./set_wpmulti
- si riparte:
      ./start_wpmulti
@@@====> NON FUNZIONA !!!   <-- redirect infinito ...
    possibile causa:  fatto refresh di admin, sembra non possa andare bene ...



5.o tentativo
ref.
  https://instruction.austincc.edu/blog/2017/08/23/docker-for-wordpress-multisite/
    --> dice di abilitare subito il multisite con:
          define('WP_ALLOW_MULTISITE', true);
- si esegue piu' o meno come prima:
    ./clear_wp_multi
    ./start_wpmulti
- sembra funzionare, ma il subdomain include il www :
    site1.www.gothings.org  site2.www.gothings.org
- riproviamo modificando la url in wp-config.php
@@@===>   vicissitudini varie ...
          sembra che si debba mettere in wp-config.php il sito con il prefisso www
          ma che si debba chiamare il primo setup con la url SENZA il www
          sembra anche che il 'noblogredirect' sia utile ad evitare il redirect infinito ...
--> Si rifa' la prova dall'inizio in questo modo ....

@@@@@@@@@==========>   EUREKA !!!       Funziona.



+++>
repository gitlab da costruire ....

===> VERIFICARE come si riaggiustano keys & salts


++++++++++++++++++++++++++++++++
- la sezione nginx in gothingscloud.yml viene aggiustata secondo le indicazioni del tutorial


---------------- 2.o tentativo

----------- RAM
- per diminuire la ram usata dal db:
  ref.:
    https://mariadb.com/resources/blog/starting-mysql-on-low-memory-virtual-machines/
      <-- eliminare performance-schema


--------------------------------------------------------------------------------------------  FUTURO

improvement 01:
  - mettere un meccanismo per riconoscere i siti 'unregistered'  (subdomain inesistente)
    - se possibile, registralo automaticamente
    - oppure, segnalare il fatto

improvement 02:
  - spostare il PHP (e quindi wordpress) su una droplet diversa ...
    - usare redis anche per il sitename ???
  - osservazioni su come WP usa le directory (multisite da vedere)
      ref.: https://deliciousbrains.com/move-wordpress-root-subdirectory/
      ref da WP.ORG:  https://wordpress.org/support/article/giving-wordpress-its-own-directory/


improvement 03:
  - 

improvement 04:
  - mettere un meccanismo su nginx che scopre se un sito e' attualmente attivo
    - se e' ON, lo usa direttamente
      se e' OFF va su una pagina che ti consente di attivarlo
  - disabilitare i siti attivi dopo un certo intervallo?


------ refs DA GUARDARE

  https://www.shiphp.com/blog/2018/nginx-php-fpm-with-env
    <-- php-fpm con parametro da .env
    <-- 1 nginx verso 'tanti' php-fpm   (host singolo)

  https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion/issues/326
    <-- architettura (proxy & letsencrip) + (nginx & php-fpm)
    <-- prestazioni?   (fare prova ??)

Cercare:  docker overlay network  (swarm ?)




====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
??????????????????????  DA QUI IN POI AGGIUSTARE O ELIMINARE !!!  ???????????????                >>> INIZIO



----------------------------------------------------------------------------------------------------
                                                                                   refs interessanti

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04
    <-- semplice esempio che aggiunge phpmyadmin

da vedere
  https://easyengine.io/
    <-- sistema interessante per dare ordini ai containers (shell?)
    <-- sviluppo docker+WP con github / bitbucket / gitlab (?)

da vedere (forse)
  https://www.digitalocean.com/community/tutorials/how-to-dockerise-and-deploy-multiple-wordpress-applications-on-ubuntu

  https://www.sitepoint.com/deploying-wordpress-with-docker/

  https://stackoverflow.com/questions/54820303/how-to-call-redis-cli-get-using-bash
    <-- per usare REDIS dalla shell



                                           *** 1.a stesura di BASE + WPMULTI in droplet singola ***
---------------------------------------------------------------------------------------------------\
                                                                          *** GOTHINGS cloud v02 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------


                                                                          *** GOTHINGS cloud v02 ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@






@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-02-07
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                   *** 2.a stesura CLOUD droplet ***


Contenuto:   storia dei tentativi per far girare wordpress multisite su una droplet

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2020-01-27
                                                                          *** GOTHINGS cloud v02 ***/----------
---------------------------------------------------------------------------------------------------/
                                                                  *** 2.a stesura CLOUD droplet ***




------------------------------------------------------------------------  Servizi cloud per GOTHINGS

- La parte base si considera acquisita e contiene:
  - nginx              http proxy, TUTTO il traffico web passa da qui
  - redis              keystore per i dati di sistema, compreslo il network
  - logspout           acquisisce i logs e li invia alla applicazione node di gestione
  - cloud-node         3 funzioni:  'app' di base, 'user' app di debug, gestore degli eventi

- si aggiunge una parte applicativa, centrata su wordpress multisite
  - MariaDB            database service per parte base + wordpress
  - WP-FPM             motore PHP per wordpress & altro


--------------------------------------------------------------------  Funzionalita' nella parte base
- nginx
              http proxy, TUTTO il traffico web passa da qui

- redis
              keystore per i dati di sistema, compreslo il network

- logspout
           acquisisce i logs e li invia alla applicazione node di gestione

- cloud-node
         3 funzioni:  'app' di base, 'user' app di debug, gestore degli eventi


-------------------------------------------------------------------  Funzionalita' lato utente & IoT
-------------- Utenti

  - utenti WP pubblici
    - ricevono informazioni su gothings
    - sono anonimi, ma possono registrarsi su wp-multi
    - ricezione di info da alcune applicazioni IoT gothings
    - nessun controllo su IoT

  - utenti WP registrati
    - semplice registrazione in stile wordpress
    - tutto quanto vale per gli utenti WP pubblici
    - accesso ad ulteriori informazioni tramite siti WP 'sociali'
    - ricezione di info da alcune applicazioni IoT gothings
    - nessun controllo su IoT

  - utenti gothings
    - registrazione di secondo livello,
      - disclaimer per il tipo di servizio (nessuna responsabilita')
      - servizio gratuito, senza garanzie
      - possibilita' di passaggio 'a pago' nel futuro
    - tutto quanto vale per gli utenti WP registrati
    - possono registrare una loro LAN per scambio dati con applicazioni IoT gothings
    - area dedicata sul cloud per dati da/verso IoT (ampiezza controllata)
    - uso di una API IoT predefinita
    - possibilita' di scambio dati con applicazioni IoT tramite API
      - limitazioni sul # di operazioni

  - amministratori gothings
    - registrazione di terzo livello (automatica ?, Con approvazione?)
      - per ora, gratuita e con risorse limitate
      - forse, nel futuro, diventera' a pago
    - tutto quanto vale per gli utenti gothings
    - sito wp gothings dedicato
      - nome di subdominio registrato a livello gothings
      - amministrazione di livello WP per il subdominio
    - ampliamento (limitato) dell'area dedicata sul cloud per dati da/verso IoT
    - upgrade sui limiti operativi

  - sviluppatori gothings
    - ulteriore registrazione, non automatica,
    - tutto quanto vale per gli utenti WP registrati
    - ulteriore ampliamento dell'area dedicata sul cloud per dati da/verso IoT
    - possibilita' di registrare piu' LAN per scambio dati con applicazioni IoT gothings
    - possibilita' di estensioni:
      - estensione dell'API

  - partner gothings
    - solo con accordo scritto,
    - tutto quanto vale per gli utenti gli sviluppatori gothings
    - passaggio ad una droplet propria
    - discussione su tutto il resto


-------------- URLs

  - utenti WP pubblici:                                                www.gothings.org/path/
                                                                     cloud.gothings.org/path/
                                                                    things.gothings.org/path/
                                                                    wpwrok.gothings.org/path/
    path:  /iot/<pagina wp>
      - navigazione sulle URL predefinite:   www, cloud, things & wpwork
      - si vedono varie informazioni:
          pubblicizzazione delle funzionalita' di gothings
          descrizioni varie e prerequisiti per gothings
      - i siti 'superiori' non mostrano praticamente niente
          per i siti 'superiori' la registrazione e' praticamente indispensabile

      cloud       informazioni tecniche piu' approfondite
                  registrazione wp (per utenti wp registrati)
                  TUTTI possono registrarsi
      things      registrazione praticamente indispensabile
                    - dati IoT volatili senza registrazione (es.: cancellati alle 4 di notte)
                  ulteriori informazioni tecniche
                  ritenzione dei dati IoT
      wpwork      sito chiuso in mancanza di registrazione

  - utenti WP registrati:                                              www.gothings.org/path/
                                                                     cloud.gothings.org/path/
                                                                    things.gothings.org/path/
                                                                    wpwrok.gothings.org/path/
    path:  /iot/<pagina wp>
      - accesso controllato a pagine con i dati permanenti
        cloud       informazioni tecniche piu' approfondite
                    registrazione wp automatica
                    TUTTI possono registrarsi
        things      dati IoT permanenti, ma limitati (estensione e # di operazioni)
                    ulteriori informazioni tecniche
        wpwork      sito chiuso in mancanza di registrazione
      - semplice registrazione in stile wordpress
      - tutto quanto vale per gli utenti WP pubblici
      - accesso ad ulteriori informazioni tramite siti WP 'superiori'
      - ricezione di info da alcune applicazioni IoT gothings
      - nessun controllo su IoT


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  RIGUARDARE il seguito  @@@@@@@

  - utenti gothings
    - registrazione di secondo livello,
      - disclaimer per il tipo di servizio (nessuna responsabilita')
      - servizio gratuito, senza garanzie
      - possibilita' di passaggio 'a pago' nel futuro
    - tutto quanto vale per gli utenti WP registrati
    - possono registrare una loro LAN per scambio dati con applicazioni IoT gothings
    - area dedicata sul cloud per dati da/verso IoT (ampiezza controllata)
    - uso di una API IoT predefinita
    - possibilita' di scambio dati con applicazioni IoT tramite API
      - limitazioni sul # di operazioni

  - amministratori gothings
    - registrazione di terzo livello (automatica ?, Con approvazione?)
      - per ora, gratuita e con risorse limitate
      - forse, nel futuro, diventera' a pago
    - tutto quanto vale per gli utenti gothings
    - sito wp gothings dedicato
      - nome di subdominio registrato a livello gothings
      - amministrazione di livello WP per il subdominio
    - ampliamento (limitato) dell'area dedicata sul cloud per dati da/verso IoT
    - upgrade sui limiti operativi

  - sviluppatori gothings
    - ulteriore registrazione, non automatica,
    - tutto quanto vale per gli utenti WP registrati
    - ulteriore ampliamento dell'area dedicata sul cloud per dati da/verso IoT
    - possibilita' di registrare piu' LAN per scambio dati con applicazioni IoT gothings
    - possibilita' di estensioni:
      - estensione dell'API

  - partner gothings




---------------------------------------------------------------------------------------------  refs.

------------------------------
UTILIZZATI:

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- ref principale per iniziare il lavoro

  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/
    <-- useful hints for wp multisite setup

  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04
    <-- install phpmyadmin

------------------------------
VARI INTERESSANTI:

  https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04
    <-- https & let's encrypt

  https://tarunlalwani.com/post/request-capturing-nginx-lua/
    <-- interessante sistema per "guardare" cosa fa nginx  (log, statistiche, ...)

  https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
    <-- AVVERTENZE varie, anche per PHP

  https://wordpress.org/plugins/better-search-replace/
    <-- DA VEDERE per la migrazione di WP da un server ad un altro                        MIGRATE WP

  https://easyengine.io/
  https://easyengine.io/tutorials/redis/
    <-- buoni consigli per REDIS
  https://easyengine.io/tutorials/docker-wordpress/
    <-- sembra buono
  https://www.slideshare.net/rtcamp/easyengine-command-line-tool-to-manage-wordpress-sites-on-nginx-server-wordcampmumbai14
    <-- vedi struttura dir consigliata
  https://easyengine.io/tutorials/wpcli/finding-faulty-plugin/
    <-- wp-plugin debug


  https://forums.cpanel.net/threads/mysql-root-password-special-characters.645745/


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
                                                     NOTA di sviluppo: wordpress multisite esistenti


-------------------------------------------------------------------------------- Sito su 1&1 Mathema

============================== *.hlitetech   <-- docker wordpress multisite
- Sito Docker

ssh hlite@hlite.it       Pippoluccio.08

ssh dockusr@hlite.it     MarcStef7684

======== WP:  *.hlitetech.com
---------------  wordpress multisite admin
admin:  hliteadmin    Pippolino.08

==> usato all'inizio per i primi esperimenti di multisite
    - scarsa integrazione con docker


------------------------------------------------------------------------ Sito su DigitalOcean Franco

============================= *.cloud2run.it    <-- docker wordpress multisite

vedi 'multisite cloud2run' sul keystore

ssh yesdock@cloud2run.it     matty08
ssh yesdock@188.166.1.130    matty08

-----  wordpress multisite

www.cloud2run.it                   - Hlite Cloud
hliteadmin     Pippolino.08
email: yesflorence@gmail.com
  --> multisite primario

hlite.cloud2run.it                   - Hlite Framework
hlite         Pippolino.08
email: yesflorence@gmail.com

things.cloud2run.it                  - Internet Things
hlite         pippolino08
email:   hlitetech@gmail.com
               pippolino08

wpwork.cloud2run.it                  - sviluppi software
gloves2001@gmail.com          pippolino    (admin)
user : pwd
Stefano.bandb.florence@gmail.com : pippolino08

==> usato per i primi esperimenti di multisite con docker
    - si e' integrato anche il gloves napoletano
    - prove di gestione del multisite
    - eseguite prove con vpn e raspberry


---------------------------------------------------------- Sito consumifacili su DigitalOcean fpirri

============================= *.consumifacili.com    <-- wordpress multisite  (NO docker)

ssh yesfi@178.62.237.244     matty08

  NOTA  @@@--> al momento viene raggiunto tramite il proxy nginx di gothings:
                  gothings.org       droplet consumifacili-1 su DO yesflorence  (fpirri)
               178.128.143.208  -->  178.62.237.244

Droplet consumifacili-01:   hosting DO fpirri - no Docker

==> usato all'inizio per i primi esperimenti di multisite
    - NON USA docker
    - usato come upstream per il proxy gothings


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
                                                                        NOTA di sviluppo: LOG FORMAT
Personalizzazione del debug a livello NGINX

refs:
  https://www.tecmint.com/configure-custom-access-and-error-log-formats-in-nginx/
    <-- consigli su come formattare
  https://docs.nginx.com/nginx/admin-guide/monitoring/logging/
    <-- doc ufficiale
  https://serverfault.com/questions/498799/how-to-log-nginx-requests-made-to-a-specific-location-in-a-different-file
    <-- interessante: try_files & internal location & proxy_pass


log_format format_name 'set_of_variables_to_define_format';
  <-- DEVE essere messo a livello http   ==>  in globalloc.conf
      es.:  log_format gothings_base_fmt '$remote_addr [$time_local] "$request" $status $body_bytes_sent &{$debug_value}&';

access_log /path/to/log_file format_name;
  <-- DEVE essere messo nei server che vogliono usare il formato definito in log_format

=====> vedi come esempio il sites-enabled  'consumi'


----------------------------------------------------------------------------------------------------
------------------------------------------------------- test di una ipotesi di costruzione sul cloud

obiettivo:
  - realizzare droplet (indipendenti tra loro) per un mix-and-match di funzionalita'
  - unificare i diversi siti dal punto di vista del network
    <-- es.: faccio un secondo 'consumi facili' e li scambio a livello di proxy
    <-- per ogni sito ho una versione stabile ed una di sviluppo, sostituibili tra loro
    <-- un server http ha un nome interno ed uno esterno
        <-- quello interno e' http
        <-- quello esterno e' https


Prova 01 - da fare su gothings-v09 ----------------------------------
scopo:
  - formalizzare un gateway nginx che:
    --> da un <ip:x> faccia funzionare un sito interno qualunque (es. WP di consumifacili)
    --> base per un gateway personalizzabile
test:
- floating IP --> gothings-v09
- si arriva su http://<gothings>:xxx/ e si viene rediretti su http://www.consumifacili.com/
  <-- vediamo eventuali inconvenienti del gateway
- si aggiunge *.consumifacili con 
====> fatte correzioni varie, sia nella logica sia per un log utile al debug


Prova 02 - gothings-v09 in collaborazione con altri ... -------------
- floating IP --> droplet gothings-v09
- il browser chiede su http://<sito gothings>:80/ e si ottiene un <sito gothings interno>/
  - con curl si mette un ip:porta e si aggiusta <host> come richiesto dalla destinazione
    <-- VERIFICARE che sia possibile andare sulla droplet attuale come http://<ip> + host
- si verifica il funzionamento dei servizi in stile gothings:
  - si usa una url come:  https://<nome sito>.gothings.org/<service>/<anypath> dove:
      <nome sito>.gothings.org        nome pubblico di un sito gothings
      <service>                       nome di un servizio gothings 
      <anypath>                       path qualunque, anche con args, utile al servizio scelto
- consumifacili.com consente un accesso diretto al multisite
  - per i nomi gia' definiti e' si va alla droplet multisite
  - per nomi diversi va inventata una procedura specifica
    - fare un tentativo andando direttamente al PHP

                                                                          *** GOTHINGS cloud v02 ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





Prova 03 - integrazione di nginx con DB e PHP  ----------------------

scopo:
  - completamento architettura gateway per un pre-pretotipo del cloud gothings



Prova 04 - gothings-v09 come gateway generalizzato ------------------

scopo:
  - aggiungere sicurezza con https & JWT
  - pretoripo effettivo del cloud gothings
*** Step da definire ***


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------  PROVA 01
Prova 01 su gothings-v09

scopo:
  - formalizzare un gateway nginx che:
    --> da un <ip:x> faccia funzionare un sito interno qualunque (es. WP di consumifacili)
    --> base per un gateway personalizzabile

IP addresses:
  178.62.237.244       consumifacili.com public IP
  178.128.143.208      DO floating IP (assegnato a gothings-v09)
  104.248.95.29        gothings-v09 public IP


Sito interno: consumifacili.com -->  www.consumifacili.com -->  178.62.237.244
  Prova curl su droplet public IP:
    curl --verbose --header 'Host: www.consumifacili.com' 'http://178.62.237.244'
      <-- ritorna la homepage ...
    curl --verbose --header 'Host: www.consumifacili.com' 'http://178.62.237.244/come-e-dove-si-installa/'
      <-- ritorna la pagina 'come-e-dove-si-installa/'

Floating IP assegnato a gothings-v09:   178.128.143.208     <--
  Prova curl su droplet floating IP:
    curl --verbose --header 'Host: www.gothings.org' 'http://178.128.143.208'

    curl --verbose --header 'Host: www.gothings.org' 'http://104.248.95.29'

test:
1.
- aggiunto il sito "prova01" ai sites-enabled della droplet gothings
  --> il salto diretto a consumifacili.com funziona, ma e' una specie di redirect
      --> WP risponde come 'www.consumifacili.com'
2.
- modifiche:
  - DNS per www.consumifacili.com --> 178.128.143.208  (droplet consumifacili: 178.62.237.244)
  - prova01 cattura 'www.consumifacili.com' e lo passa alla droplet
    --> server_name:  www.consumifacili.com
    --> destination:  178.62.237.244



test:
- floating IP --> gothings-v09
- si arriva su http://<gothings>:xxx/ e si viene rediretti su http://www.consumifacili.com/
  <-- vediamo eventuali inconvenienti del gateway

ERRORE:
  --> perche' un hostname non valido (es. IP Addr) conduce ad un redirect infinito su consumifacili.com ??
  --> risoluzione ad hoc: definiti server virtuali diversi per i vari casi


----------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------  PROVA 02
Prova 02 - gothings-v09 in collaborazione con altri ... -------------

scopo:
  - far funzionare gothings & consumi facili a livello di pre-pretotipo
    --> base per un gateway personalizzabile e sicuro
- il browser chiede su http://<sito gothings>:80/ e si ottiene un <sito gothings interno>/
  - con curl si mette un ip:porta e si aggiusta <host> come richiesto dalla destinazione
    <-- VERIFICARE che sia possibile andare sulla droplet attuale come http://<ip> + host
- si verifica il funzionamento dei servizi in stile gothings:
  - si usa una url come:  https://<nome sito>.gothings.org/<service>/<anypath> dove:
      <nome sito>.gothings.org        nome pubblico di un sito gothings
      <service>                       nome di un servizio gothings 
      <anypath>                       path qualunque, anche con args, utile al servizio scelto
- consumifacili.com consente un accesso diretto al multisite
  - per i nomi gia' definiti e' si va alla droplet multisite
  - per nomi diversi va inventata una procedura specifica
    - fare un tentativo andando direttamente al PHP

============>  OK, l'aggiustamento di consumifacili si fara' dopo aver introdotto il PHP



----------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------  PROVA 03
Prova 03 - integrazione di nginx con DB e PHP  ----------------------

scopo:
  - completamento architettura gateway per un pre-pretotipo del cloud gothings


-----------  gothings URLs
   www.gothings.org/wppath/
 cloud.gothings.org/wppath/
things.gothings.org/wppath/
wpwork.gothings.org/wppath/
<sito>.gothings.org/wppath/           il nome <sito> DEVE essere registrato in services
                                      DA VEDERE: gestire 'a posteriori' in services ?
  ===> mappare su wp-multi

iot.gothings.org/wppath/              equivalente dell'attuale services
  ===> mappare come services

altri siti:
<sito>.<dominio>/wppath               vanno aggiustati il DNS e wp-multi


---------------- 1.o tentativo
- prova base per vedere se funziona tutto
- obiettivo: primo funzionamento del multisite gothings sulla stessa droplet base
- svolgimento:
  - si parte dal ref 1:
      https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
-->
- si lavora su .../WP-Sviluppi/gothings/wpmulti-dev/dockrepo/sysdata/wpmulti/
  <-- e' il dir ~/wordpress nel tutorial
- 'gothings base' prendera' il posto di nginx nel tutorial
- i siti wp predefiniti sono gestiti da un apposito server virtuale 'dedicato a wp'
- la parte 'wordpress' e' 'gothings URLs'
--> creati nuovi server virtuali:                                                <-- REVISIONATO il 2020-02-03

  test                      per verificare il funzionamento della parte wp-multi
                            usato SOLO per il test

  servizi                   site:  iot.gothings.org
                            usa i servizi:
                              app                    demo iniziale di una applicazione nodejs
                              user                   show logs, da estendere per il debug e per
                                                     la gestione degli eventi
                            pensato per app 'native' (DA SVILUPPARE in seguito)

  wordpress multisite       subdomain definiti per il sito pubblico wordpress
                            per ora: {}
                              www.gothings.org       sito principale
                              cloud.gothings.org     servizi aggiunti per utenti wp
                              things.gothings.org    servizi aggiunti per utenti gothings
                              wpwork.gothings.org    servizi aggiunti per gothings admin

  undefined                 pagina di avviso per i siti non definiti ...
                            DA AGGIUSTARE: potrebbe chiedere di registrarsi
                                           potrebbe attivare un container per una registrazione
                                             automatica usando redis
                                           si puo' 'sfruttare' un redirect ???
                                           forse conviene fare qualche esperimento manuale
  
------------- testing wpmulti ...
TEST
  --> aggiustati tutti i riferimenti ...
  =====> OK

WORDPRESS
  --> avanti nel tutorial ...
step 1: scrivi il .yml
  --> si aggiunge il dir .../sysdata/var_www     <-- filr legati awordpress
  --> si aggiorna il gothingscloud.yml
      --> aggiunte a nginx (wpmulti):
            init git, .gitignore, .dockerignore
            /home/yesfi/dockrepo/sysdata/var_www/ : /var/www/
  --> messo certbot:   --> sotto nginxdata
---->
- senza PHP-FPM si arriva a index.html --> AVVISO  '... solo durante lo sviluppo'
- si aggiustano i valori letti dal tutorial ...
- seguendo il tutorial, si arriva senza grossi intoppi a phpinfo.php
  - si deve aggiustare il .env e di conseguenza gothingswpmulti.yml
  - anche sites-enabled/wpmulti necessita di correzioni
  - dopo un primo giro, va aggiustato il wp-config.php
    - che pero' non puo' essere copiato con ftp per mancanza di diritti
  - si aggiusta wp-config.php in netbeans come file wp-config.beans.php
    - si copia sulla droplet come tale
    - nella droplet si esegue:
        sudo cp wp-config.beans.php wp-config.php 
      --> ora il wp-config.php e' aggiornato !
====> ERRORE di connessione al db !
--> investighiamo se il db e' ben inizializzato:
  in .env aggiorniamo la root pwd come consigliato in:
    https://forums.cpanel.net/threads/mysql-root-password-special-characters.645745/
  usando SOLO . e : come caratteri speciali
  cancellato totalmente dbdata
  ===> dice che ci ha trovato dei file!!!
    sudo rm -rf /home/yesfi/dockrepo/sysdata/dbdata/*
  aggiustati MYSQL_USER & MYSQL_PASSWORD (variable is not set) in gothingswpmulti.yml
  sono segnalati errori mysql
--> verifica db:
    ref.:  https://www.a2hosting.com/kb/developer-corner/mysql/managing-mysql-databases-and-users-from-the-command-line
===>
      ./down_wpmulti
      sudo rm -rf /home/yesfi/dockrepo/sysdata/dbdata/*
      ls -la /home/yesfi/dockrepo/sysdata/dbdata
      sudo cp /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.beans.php /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php
      cat /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php
      ./start_wpmulti
      ./showdock
      docker exec -ti db bash
      mysql -u root --password=HiLite_2008_GoCloud_2020
        oppure:   mysql -u root -p    -->    pwd: HiLite_2008_GoCloud_2020
      show databases;
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT
-->
    create user hlite:                                           <--  lo fa il container!!
      GRANT ALL PRIVILEGES ON *.* TO 'Pluto1945'@'localhost' IDENTIFIED BY 'Himage_2019_IoT';
-->
    verifica wp-config.php
      sudo cp /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.beans.php /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php
      cat /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php


----------------------------------------------------------------------------------------------------
-------- Script up/down per wpmulti
./start_wpmulti
  - start db, worpress & letsencrypt
  - 1.a volta: init di TUTTO
  - poi: ricostruisce i containers in stile 'up -d' con compose 

-./down_wpmulti
  - stop & destroy db, worpress & letsencrypt
  - db & wp-config inalterati

-./clear_wpmulti
  - ./down_wpmulti
  - azzera il db
  -


------------------------------------------------------------------------------- INSTALL WP MULTISITE
ref.:
  https://www.wpbeginner.com/wp-tutorials/how-to-install-and-setup-wordpress-multisite-network/

1.- installa il wp standard con le opzioni:
    Site Title    Go to the internet of things
    Username      yesflorence
    Password      2020Himage.Boh:admin
    Your Email    yesflorence@gmail.com

    Search Engine Visibility  Si

    table prefix:  GoTh01_

2.- multisite setup
  - stop wordpress ed aggiusta il wp-config, copiandoi valori da wp-config.beans
      docker stop wordpress
      sudo cp /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.beans.php /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php
  - verifica il cambiamento:
      cat /home/yesfi/dockrepo/sysdata/var_www/html/wp-config.php
  - restart wordpress
=====>  l'installazione riprende dall'inizio !!

   ===> la prima volta e' andata male ...

2.o tentativo:   e si riparte ...
  - si azzera il db
      ./clear_wpmulti
  - si eliminano tutti i file wordpress in  .../var_www/html
      sudo rm -rf /home/yesfi/dockrepo/sysdata/var_www/html/*
      sudo rm /home/yesfi/dockrepo/sysdata/var_www/html/.htaccess
  - copiato wp-config.netneans.php --> wp-config-php      <-- unico file nel dir !!!
  - ./start_wpmulti

DA CONTROLLARE / FARE:

Per il db:
  - DB root senza password ????
  altri controlli:
  - db port 3306 oppure 33060
  - in env:   db:3306    ??  oppure  33060 ?
  - in mysql funziona il root ??

separare la costruzione del db da quella di wordpress
  --> db da solo        <--  .../gothingsdb.yml
  --> WP & certbot      <--  .../gothingswordpress.yml
- aggiustare ./start_wpmulti  -->   wpmulti_start  +  db_start



@@@@@@==>
  Sembra importante fare PRIMA il setup di wordpress SENZA multisite
  ed aggiungere DOPO il multisite ....

3.o tentativo
  NO! ---> forse bisogna eseguire il primo log come admin ....
             --> e POI abilitare il multisite ....

@@@@@==>  ERROR:  out of memory !!!!!!

tentativi possibili:
  -->  espandere memoria droplet momentaneamente
  -->  creare  db + wordpress da soli e senza docker 

4.o tentativo
- si parte con 
- init db & wordpress con
      ./start_wpmulti
- si lancia il 5-minutes-install
- si esegue il login ...
  - si girella sulla dashboard: sembra OK
- si controlla il log del db
  --> sembra buono
- proviamo:
      docker exec -ti db bash
      mysql -u Pluto1945 -p
        --> Himage_2019_IoT
      use gtlite
      show tables;
        --> 12 tabelle
- si ferma il wordpress
      docker stop wordpress
- si aggiusta il multisite con
      ./set_wpmulti
- si riparte:
      ./start_wpmulti
@@@====> NON FUNZIONA !!!   <-- redirect infinito ...
    possibile causa:  fatto refresh di admin, sembra non possa andare bene ...



5.o tentativo
ref.
  https://instruction.austincc.edu/blog/2017/08/23/docker-for-wordpress-multisite/
    --> dice di abilitare subito il multisite con:
          define('WP_ALLOW_MULTISITE', true);
- si esegue piu' o meno come prima:
    ./clear_wp_multi
    ./start_wpmulti
- sembra funzionare, ma il subdomain include il www :
    site1.www.gothings.org  site2.www.gothings.org
- riproviamo modificando la url in wp-config.php
@@@===>   vicissitudini varie ...
          sembra che si debba mettere in wp-config.php il sito con il prefisso www
          ma che si debba chiamare il primo setup con la url SENZA il www
          sembra anche che il 'noblogredirect' sia utile ad evitare il redirect infinito ...
--> Si rifa' la prova dall'inizio in questo modo ....

@@@@@@@@@==========>   EUREKA !!!       Funziona.




+++>
repository gitlab da costruire ....

===> VERIFICARE come si riaggiustano keys & salts



++++++++++++++++++++++++++++++++
- la sezione nginx in gothingscloud.yml viene aggiustata secondo le indicazioni del tutorial

- osservazioni su come WP usa le directory (multisite da vedere)
   ref.: https://deliciousbrains.com/move-wordpress-root-subdirectory/
   ref da WP.ORG:  https://wordpress.org/support/article/giving-wordpress-its-own-directory/


















++++++++++++++++++++++++++++++++


-----------------  modifica services
- verificare struttura dirs nel multisite di consumifacili (no docker):
    .../gothings/wpmulti-dev/aux/consumifacili-l2.wpmulti                <-- home del wp multisite
    .../gothings/wpmulti-dev/aux/nginx.conf/sites-enabled/wp-multi       <-- nginx conf
- struttura dir base:
    /var/www/wp-multi/
        ├── giuseppe.php
        ├── index.lua
        ├── index.nginx-debian.html
        ├── index.php
        ├── license.txt
        ├── readme.html
        ├── test.txt
        ├── wp-activate.php
        ├── wp-blog-header.php
        ├── wp-comments-post.php
        ├── wp-config.php
        ├── wp-config-sample.php
        ├── wp-cron.php
        ├── wp-links-opml.php
        ├── wp-load.php
        ├── wp-login.php
        ├── wp-mail.php
        ├── wp-settings.php
        ├── wp-signup.php
        ├── wp-trackback.php
        ├── xmlrpc.php
        ├── wp-admin/
        ├── wp-content/
        └── wp-includes/
    ==> un po' di file statici + file di tipo .php + dirs di tipo /wp-xxx/
    ==> sembra si possa riportare direttamente la conf di consumi sopra il nuovo multisite
- struttura delle url:
    www.gothings.org/              wpbase
    xxxxx.gothings.org/            con xxxx registrato  -->  sito del multisite
    srv.gothings.org/app/          applicazione node base
    srv.gothings.org/debug/        applicazione di debug
    srv.gothings.org/yyy/          con yyy registrato --> applicazione wpmulti per un utente qualunque
    srv.gothings.org/yyy/          con yyy NON registrato --> 
    srv.gothings.org/yyy/          con yyy
    srv.gothings.org/yyy/          con yyy
    srv.gothings.org/xxx/          
    srv.gothings.org/xxx/          
    srv.gothings.org/xxx/          


### consumifacili.com      ssh yesfi@178.62.237.244

- mettere il wp-multisite nel subdir .../var/www/html/docs/ del container
  --> per nginx:  wpmulti dir == .../htdocs/docs

  - se '= /'      # esattamente homepage
            -->   vai alla base del sito in 
 
                                                                                     ???    IN CORSO


--------- inserisci php
- Riferimenti al vecchio cloud2run.it
  -->  ssh yesdock@cloud2run.it     matty08
       ssh yesdock@188.166.1.130    matty08

Refs.:
1.
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
    <-- installazione WP ~= alla nostra + certbot

2.
  https://upcloud.com/community/tutorials/deploy-wordpress-with-docker-compose/
    <-- sottoinsieme di 1. - usa mariadb

3.
  https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04
    <-- semplice esempio che aggiunge phpmyadmin


da vedere
  https://easyengine.io/
    <-- sistema interessante per dare ordini ai containers (shell?)
    <-- sviluppo docker+WP con github / bitbucket / gitlab (?)

da vedere (forse)
  https://www.digitalocean.com/community/tutorials/how-to-dockerise-and-deploy-multiple-wordpress-applications-on-ubuntu

  https://www.sitepoint.com/deploying-wordpress-with-docker/

  https://stackoverflow.com/questions/54820303/how-to-call-redis-cli-get-using-bash
    <-- per usare REDIS dalla shell


?????
- portati in aux i file usati su
- pocker-compose da




---------------- 2.o tentativo
- spostare il PHP (e quindi wordpress) su una droplet diversa ...
  - obiettivo: abilitare il gateway a funzionare con multisite completamente diversi ...
  - usare redis anche per il sitename ???




---------------------------------------------------------------------------------------  DA RIVEDERE

- nginx gateway:  auth & proxy services
  --> redis keystore nella stessa droplet
  --> sqldb ?

- wp droplet
  <-- 


--------------------------------------------------------------------------------------------  FUTURO

improvement 01:
  - mettere un meccanismo su nginx che scopre se un sito e' attualmente attivo
    - se e' ON, lo usa direttamente
      se e' OFF va su una pagina che ti consente di attivarlo
  - disabilitare i siti attivi dopo un certo intervallo?

improvement 02:
  - 

improvement 03:
  - 

improvement 04:
  - mettere un meccanismo su nginx che scopre se un sito e' attualmente attivo
    - se e' ON, lo usa direttamente
      se e' OFF va su una pagina che ti consente di attivarlo
  - disabilitare i siti attivi dopo un certo intervallo?





                                                                  *** 2.a stesura CLOUD droplet ***
---------------------------------------------------------------------------------------------------\
                                                                          *** GOTHINGS cloud v02 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------




                                                                   *** 2.a stesura CLOUD droplet ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2020-01-26
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                   *** 1.a stesura CLOUD droplet ***



---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2019-12-28
                                                                         *** STRATEGIA cloud v01 ***/----------
---------------------------------------------------------------------------------------------------/
                                                                  *** Distribuzione servizi v01 ***

Servizi necessari:

- proxy nginx


- redis keystore


- SQL DB (mariadb)


- PHP-FPM

DA VEDERE/FARE:

  https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04
    <-- https & let's encrypt

  https://tarunlalwani.com/post/request-capturing-nginx-lua/
    <-- interessante sistema per "guardare" cosa fa nginx  (log, statistiche, ...)

  https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
    <-- AVVERTENZE varie, anche per PHP


----------------------------------------------------------------------------------------------------
                                                                        NOTA di sviluppo: LOG FORMAT
Personalizzazione del debug a livello NGINX

refs:
  https://www.tecmint.com/configure-custom-access-and-error-log-formats-in-nginx/
    <-- consigli su come formattare
  https://docs.nginx.com/nginx/admin-guide/monitoring/logging/
    <-- doc ufficiale
  https://serverfault.com/questions/498799/how-to-log-nginx-requests-made-to-a-specific-location-in-a-different-file
    <-- interessante: try_files & internal location & proxy_pass


log_format format_name 'set_of_variables_to_define_format';
  <-- DEVE essere messo a livello http   ==>  in globalloc.conf
      es.:  log_format gothings_base_fmt '$remote_addr [$time_local] "$request" $status $body_bytes_sent &{$debug_value}&';

access_log /path/to/log_file format_name;
  <-- DEVE essere messo nei server che vogliono usare il formato definito in log_format

=====> vedi come esempio il sites-enabled  'consumi'


----------------------------------------------------------------------------------------------------
------------------------------------------------------- test di una ipotesi di costruzione sul cloud

obiettivo:
  - realizzare droplet (indipendenti tra loro) per un mix-and-match di funzionalita'
  - unificare i diversi siti dal punto di vista del network
    <-- es.: faccio un secondo 'consumi facili' e li scambio a livello di proxy
    <-- per ogni sito ho una versione stabile ed una di sviluppo, sostituibili tra loro
    <-- un server http ha un nome interno ed uno esterno
        <-- quello interno e' http
        <-- quello esterno e' https


Prova 01 - da fare su gothings-v09 ----------------------------------
scopo:
  - formalizzare un gateway nginx che:
    --> da un <ip:x> faccia funzionare un sito interno qualunque (es. WP di consumifacili)
    --> base per un gateway personalizzabile
test:
- floating IP --> gothings-v09
- si arriva su http://<gothings>:xxx/ e si viene rediretti su http://www.consumifacili.com/
  <-- vediamo eventuali inconvenienti del gateway
- si aggiunge *.consumifacili con 
====> fatte correzioni varie, sia nella logica sia per un log utile al debug


Prova 02 - gothings-v09 in collaborazione con altri ... -------------
- floating IP --> droplet gothings-v09
- il browser chiede su http://<sito gothings>:80/ e si ottiene un <sito gothings interno>/
  - con curl si mette un ip:porta e si aggiusta <host> come richiesto dalla destinazione
    <-- VERIFICARE che sia possibile andare sulla droplet attuale come http://<ip> + host
- si verifica il funzionamento dei servizi in stile gothings:
  - si usa una url come:  https://<nome sito>.gothings.org/<service>/<anypath> dove:
      <nome sito>.gothings.org        nome pubblico di un sito gothings
      <service>                       nome di un servizio gothings 
      <anypath>                       path qualunque, anche con args, utile al servizio scelto
- consumifacili.com consente un accesso diretto al multisite
  - per i nomi gia' definiti e' si va alla droplet multisite
  - per nomi diversi va inventata una procedura specifica
    - fare un tentativo andando direttamente al PHP



Prova 03 - integrazione di nginx con DB e PHP  ----------------------

scopo:
  - completamento architettura gateway per un pre-pretotipo del cloud gothings



Prova 04 - gothings-v09 come gateway generalizzato ------------------

scopo:
  - aggiungere sicurezza con https & JWT
  - pretoripo effettivo del cloud gothings
*** Step da definire ***


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------  PROVA 01
Prova 01 su gothings-v09

scopo:
  - formalizzare un gateway nginx che:
    --> da un <ip:x> faccia funzionare un sito interno qualunque (es. WP di consumifacili)
    --> base per un gateway personalizzabile

IP addresses:
  178.62.237.244       consumifacili.com public IP
  178.128.143.208      DO floating IP (assegnato a gothings-v09)
  104.248.95.29        gothings-v09 public IP


Sito interno: consumifacili.com -->  www.consumifacili.com -->  178.62.237.244
  Prova curl su droplet public IP:
    curl --verbose --header 'Host: www.consumifacili.com' 'http://178.62.237.244'
      <-- ritorna la homepage ...
    curl --verbose --header 'Host: www.consumifacili.com' 'http://178.62.237.244/come-e-dove-si-installa/'
      <-- ritorna la pagina 'come-e-dove-si-installa/'

Floating IP assegnato a gothings-v09:   178.128.143.208     <--
  Prova curl su droplet floating IP:
    curl --verbose --header 'Host: www.gothings.org' 'http://178.128.143.208'

    curl --verbose --header 'Host: www.gothings.org' 'http://104.248.95.29'

test:
1.
- aggiunto il sito "prova01" ai sites-enabled della droplet gothings
  --> il salto diretto a consumifacili.com funziona, ma e' una specie di redirect
      --> WP risponde come 'www.consumifacili.com'
2.
- modifiche:
  - DNS per www.consumifacili.com --> 178.128.143.208  (droplet consumifacili: 178.62.237.244)
  - prova01 cattura 'www.consumifacili.com' e lo passa alla droplet
    --> server_name:  www.consumifacili.com
    --> destination:  178.62.237.244



test:
- floating IP --> gothings-v09
- si arriva su http://<gothings>:xxx/ e si viene rediretti su http://www.consumifacili.com/
  <-- vediamo eventuali inconvenienti del gateway

ERRORE:
  --> perche' un hostname non valido (es. IP Addr) conduce ad un redirect infinito su consumifacili.com ??
  --> risoluzione ad hoc: definiti server virtuali diversi per i vari casi



------------------------------------------------------------------------------------------  PROVA 02
Prova 02 - gothings-v09 in collaborazione con altri ... -------------

scopo:
  - far funzionare gothings & consumi facili a livello di pre-pretotipo
    --> base per un gateway personalizzabile e sicuro
- il browser chiede su http://<sito gothings>:80/ e si ottiene un <sito gothings interno>/
  - con curl si mette un ip:porta e si aggiusta <host> come richiesto dalla destinazione
    <-- VERIFICARE che sia possibile andare sulla droplet attuale come http://<ip> + host
- si verifica il funzionamento dei servizi in stile gothings:
  - si usa una url come:  https://<nome sito>.gothings.org/<service>/<anypath> dove:
      <nome sito>.gothings.org        nome pubblico di un sito gothings
      <service>                       nome di un servizio gothings 
      <anypath>                       path qualunque, anche con args, utile al servizio scelto
- consumifacili.com consente un accesso diretto al multisite
  - per i nomi gia' definiti e' si va alla droplet multisite
  - per nomi diversi va inventata una procedura specifica
    - fare un tentativo andando direttamente al PHP

============>  OK, l'aggiustamento di consumifacili si fara' dopo aver introdotto il PHP



------------------------------------------------------------------------------------------  PROVA 03
Prova 03 - integrazione di nginx con DB e PHP  ----------------------

scopo:
  - completamento architettura gateway per un pre-pretotipo del cloud gothings

---------------- 1.o tentativo
- prova base per vedere se funziona tutto
- obiettivo: riprendere quanto gia' fatto sulla droplet consumifacili 
- svolgimento:
  - partire dalla configurazione di consumifacili



---------------- 2.o tentativo
- spostare il PHP (e quindi wordpress) su una droplet diversa ...
  - obiettivo: abilitare il gateway a funzionare con multisite completamente diversi ...
  - usare redis anche per il sitename ???




---------------------------------------------------------------------------------------  DA RIVEDERE

- nginx gateway:  auth & proxy services
  --> redis keystore nella stessa droplet
  --> sqldb ?

- wp droplet
  <-- 


--------------------------------------------------------------------------------------------  FUTURO

improvement 01:
  - mettere un meccanismo su nginx che scopre se un sito e' attualmente attivo
    - se e' ON, lo usa direttamente
      se e' OFF va su una pagina che ti consente di attivarlo
  - disabilitare i siti attivi dopo un certo intervallo?

improvement 02:
  - 

improvement 03:
  - 

improvement 04:
  - mettere un meccanismo su nginx che scopre se un sito e' attualmente attivo
    - se e' ON, lo usa direttamente
      se e' OFF va su una pagina che ti consente di attivarlo
  - disabilitare i siti attivi dopo un certo intervallo?





                                                                  *** Distribuzione servizi v01 ***
---------------------------------------------------------------------------------------------------\
                                                                         *** STRATEGIA cloud v01 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2019-12-28
                                                               *** GoThings cloud droplets v0.02 ***/----------
---------------------------------------------------------------------------------------------------/
                                                   *** Generazione development droplet - v 0.02 ***



====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
??????????????????????  DA QUI IN POI AGGIUSTARE O ELIMINARE !!!  ???????????????                >>> INIZIO




- Generazione droplet & init software from github
- Costruzione del menu 'gocloud' (GoThings Cloud Menu)

----------------------------------------------------------------------------------------------------
                                                                                          REFERENCES

--- DNS

https://www.namecheap.com/support/knowledgebase/article.aspx/33/11/what-is-dynamic-dns?_ga=2.28964540.1277616335.1574977851-902166792.1573042405&_gac=1.20788554.1573042409.Cj0KCQiA-4nuBRCnARIsAHwyuPrCfQl29LhZWoTsVmpVVR7tw2XF6Wx-tvD4VJbwv0gL8B8Fi-955PwaAm57EALw_wcB
  <-- usare il DNS dinamico per spengere & riaccendere la droplet solo quando serve                 *** DA FARE ***


--- Create droplet
ricerca:   digitalocean install docker

1.-
https://www.digitalocean.com/community/tutorials/automating-initial-server-setup-with-ubuntu-18-04
  <-- creazione automatica del server ubuntu 18.04

2.-
https://www.digitalocean.com/community/tutorials/how-to-install-docker-compose-on-ubuntu-18-04
  <-- come sopra, tutorial installazione docker-compose

3.-
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04
   <-- tutorial installazione manuale docker


-----------------  Docker images guideline:
4.-
https://github.com/docker-library/official-images#consistency
  <-- consigli su come scrivere i dockerfile
  <-- uso di 'tini' per inizializzare il sistema



----------------------------------------------------------------------------------------------------
                                                                                           Strategia
  - Per ogni container si definiscono le fasi:
    - expand
      <-- carica & espandi archivio .tar.gz da github
    - init
      <-- esegui operazioni una-tantum nella vita della droplet
    - install
      <-- esegui operazioni (ripetibili) per l'inizializzazione del container

  - per ogni fase e' definito un file di stato .json
    <-- dice se l'operazione va fatta o no
    <-- indica lo script che esegue l'azione

  - durante lo sviluppo si mantiene come fatto l'expand
    <-- si caricano le correzioni direttamente sulla droplet
    <-- per ogni versione pubblicabile:
        - si aggiorna l'archivio .tar.gz
        - si segna come 'da fare' l'expand
        - generalmente va anche rifatto init & install
  - si possono ripetere init & install con i rispettivi .json


  - per 'cloud' e' gia' fatto in gocloud VERSION="0.00.06" 
    - nella VERSION="0.00.07" si aggiungono:
      - htdocs        solo expand
      - nginxdata     solo expand
      - redisdata     solo expand
    - i nuovi containers hanno solo 'expand', init & install non servono

                                                                                                    DA FARE
===========>  SEPARARE i .tar.gz durante l'inizializzazione ...
- aggiustare .../redisdata/db permissions anche sul netbeans@vmatic  (se necessario ..)



----------------------------------------------------------------------------------------------------
                                                                                          AVVERTENZE
--------------- problema gestione file su github
i file su github sono raggiungibili come:
    https://github.com/fpirri/gothings-cloud/blob/master/dockrepo/dockimages/cloud/cloudinstall.json
divisi come:                                                                              getgitfile
    GITHUBHOME    :    https://github.com/fpirri/         :   costante                          --
    GITHUBPATH    :    gothings-cloud/blob/master/        :   repository da scaricare           $2
    RASPIPATH     :    dockrepo/dockimages/cloud/         :   path del file                     $3
                                                              identici su github e su raspi
    nome file     :    cloudinstall.json                  :   nome file da scaricare            $1

  #  path:  dockrepo/dockimages/cloud/cloudinstall.json




----------------------------------------------------------------------------------------------------
                                                                               ===========>  FATTO !

- redis NON salva il db
  - il file dump.rdb di redis (e il dir sopra === db) DEVONO appartenere a 999:999 (redis:redis)
  - dir db permission: 755    file dump.rdb permission:  644
    <-- ref.: https://stackoverflow.com/questions/22160753/redis-failed-opening-rdb-for-saving-permission-denied
============> set dir & file permission: 999:999  (redis:redis)



                                                   *** Generazione development droplet - v 0.02 ***
---------------------------------------------------------------------------------------------------\
                                                               *** GoThings cloud droplets v0.02 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2019-11-28
                                                                      *** GoThings cloud install ***/----------
---------------------------------------------------------------------------------------------------/
                                                                *** Sviluppo droplet cloud base ***

- Generazione veloce della parte cloud del sistema GOTHINGS
  <-- procedura guidata per la generazione veloce di una droplet
      <-- si usa uno start script per generare una prima immagine
      <-- si fa un upgrade con lo script 'gocloud'
  <-- gocloud inizializza l'ambiente gothings-cloud sulla droplet
      <-- si copia il tutto da gothings-cloud
      <-- tutti i dir necessari ed il content di partenza sono presi da un .tar.gz
      <-- per proseguire basta:
            - download un tar.gz sulla droplet
            - aggiorna i .json in .../dockrepo/dockimages/cloud/
            - girare gocloud che espande il sistema aggiornato
  <-- ref per controlli utili; 
      - create logs in /var/log/cloud-init-output.log
      - verifica lo stato di docker:   sudo systemctl status docker

                                                                                                    *** IN CORSO ***
--------- creazione droplet a partire dallo snapshot
Viene creata la droplet a partire dallo snapshot
  <-- viene presentato lo stesso menu ...
  <-- si fa tutto uguale, meno lo 'user data'
====> la droplet non funziona bene:
  - i .json di configurazione andrebbero re-inizializzati ...
  - fare un cl-re-init prima di salvare                       <-- SI, cosi' si puo ripartire con ./c
- dopo dovrebbe essere tutto normale:
  - esegui lo script di boot ./c
    <-- viene caricato il GOTHINGS Control Menu ed e' inizializzata la parte base di gothings


-------- PROBLEMI da risolvere
install/init:
  - va organizzato il processo di inizializzazione, da rendere piu' controllabile
    durante lo sviluppo
  - separare redis & nginx da cloud ... ??
redis:
  - WARNING overcommit_memory is set to 0! Background save may fail under low memory condition.
    To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot
     or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
  - WARNING you have Transparent Huge Pages (THP) support enabled in your kernel.
    This will create latency and memory usage issues with Redis.
    To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled'
    as root, and add it to your /etc/rc.local in order to retain the setting after a reboot.
    Redis must be restarted after THP is disabled.


                                                                                 OSSERVAZIONI VARIE:
- Installazione & setup della droplet gothings:
  contenuti:
    - download da github
    - dir necessari per inizializzare l'ambiente gothings (versione cloud)

- REFRESH completo dell'installazione:
  - inizializzare i .json in .../dockrepo/dockimages/cloud
      <-- mette status == 'todo'             <-- si eseguiranno expand & install
  - CANCELLARE il .tar.gz in .../dockrepo/sysdata



----------------------------------------------------------------------------------------------------
Docker install on DO droplet

create droplet ------------------------
- new project:  gothings
- create standard droplet (5Eur/mese, il minimo possibile), droplet in AMS3
- setup automatico: vedi ref 1.-
  - aggiungi private net & user data & monitoring
      <-- file:    .../WP-Sviluppi/gothings/cloud-dev/gothingsserverinit.sh
  - 'keys all' : tutte le chiavi
  - RICORDA: sul PC i key file DEVONO essere chmod 600
- il log del droplet setup e' in:    /var/log/cloud-init-output.log                                 log

===> al 2019-12-17:                                                                                 snapshot
            droplet:        gothings-v05
           snapshot:        gothings-v05-firstboot
                 IP:        128.199.48.13

first boot -----------------------------
- viene letto lo script 'c' da gothings install
  - si carica il menu gocloud
  - si esegue il primo npm install

--------------  REDIS
- aggiustati i volumi come da doc su dockerhub
  ===>  OK


--------------  NGINX
- aggiustati i volumi come da doc su dockerhub
  ===>  ???






start base ----------------------------
- esegui comando start:
  - prerequisites
    - init docker networks
    - ??
  - 




                                                                                                    DA FARE
- aggiungere 'install tree' ne





DA VEDERE: cosa si puo' da consumi facili & cf-dock-02




                                                                *** Sviluppo droplet cloud base ***
---------------------------------------------------------------------------------------------------\
                                                                      *** GoThings cloud install ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2018-08-19
                                                *** Dettagli di un tema correlato alla strategia ***/-------------
---------------------------------------------------------------------------------------------------/
                                               *** sottotitolo diverso per ogni versione storica ***





                                               *** sottotitolo diverso per ogni versione storica ***
---------------------------------------------------------------------------------------------------\
                                                *** Dettagli di un tema correlato alla strategia ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------


====================================================================================================
====================================================================================================  ROBACCIA
====================================================================================================
                                                                                                 >>> FINE

                                                                   *** 1.a stesura CLOUD droplet ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2019-12-27
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                               *** GoThings cloud droplets v0.01 ***


---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2019-12-23
                                                               *** GoThings cloud droplets v0.01 ***/----------
---------------------------------------------------------------------------------------------------/
                                                   *** Generazione development droplet - v 0.01 ***

- Generazione droplet & init software from github
- Costruzione del menu 'gocloud' (GoThings Cloud Menu)

----------------------------------------------------------------------------------------------------
                                                                                          REFERENCES

--- DNS

https://www.namecheap.com/support/knowledgebase/article.aspx/33/11/what-is-dynamic-dns?_ga=2.28964540.1277616335.1574977851-902166792.1573042405&_gac=1.20788554.1573042409.Cj0KCQiA-4nuBRCnARIsAHwyuPrCfQl29LhZWoTsVmpVVR7tw2XF6Wx-tvD4VJbwv0gL8B8Fi-955PwaAm57EALw_wcB
  <-- usare il DNS dinamico per spengere & riaccendere la droplet solo quando serve                 *** DA FARE ***


--- Create droplet
ricerca:   digitalocean install docker

1.-
https://www.digitalocean.com/community/tutorials/automating-initial-server-setup-with-ubuntu-18-04
  <-- creazione automatica del server ubuntu 18.04

2.-
https://www.digitalocean.com/community/tutorials/how-to-install-docker-compose-on-ubuntu-18-04
  <-- come sopra, tutorial installazione docker-compose

3.-
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04
   <-- tutorial installazione manuale docker


-----------------  Docker images guideline:
4.-
https://github.com/docker-library/official-images#consistency
  <-- consigli su come scrivere i dockerfile
  <-- uso di 'tini' per inizializzare il sistema



----------------------------------------------------------------------------------------------------
                                                                                           Strategia
  - Per ogni container si definiscono le fasi:
    - expand
      <-- carica & espandi archivio .tar.gz da github
    - init
      <-- esegui operazioni una-tantum nella vita della droplet
    - install
      <-- esegui operazioni (ripetibili) per l'inizializzazione del container

  - per ogni fase e' definito un file di stato .json
    <-- dice se l'operazione va fatta o no
    <-- indica lo script che esegue l'azione

  - durante lo sviluppo si mantiene come fatto l'expand
    <-- si caricano le correzioni direttamente sulla droplet
    <-- per ogni versione pubblicabile:
        - si aggiorna l'archivio .tar.gz
        - si segna come 'da fare' l'expand
        - generalmente va anche rifatto init & install
  - si possono ripetere init & install con i rispettivi .json


  - per 'cloud' e' gia' fatto in gocloud VERSION="0.00.06" 
    - nella VERSION="0.00.07" si aggiungono:
      - htdocs        solo expand
      - nginxdata     solo expand
      - redisdata     solo expand
    - i nuovi containers hanno solo 'expand', init & install non servono

                                                                                                    DA FARE
===========>  SEPARARE i .tar.gz durante l'inizializzazione ...
- aggiustare .../redisdata/db permissions anche sul netbeans@vmatic  (se necessario ..)



----------------------------------------------------------------------------------------------------
                                                                                          AVVERTENZE
--------------- problema gestione file su github
i file su github sono raggiungibili come:
    https://github.com/fpirri/gothings-cloud/blob/master/dockrepo/dockimages/cloud/cloudinstall.json
divisi come:                                                                              getgitfile
    GITHUBHOME    :    https://github.com/fpirri/         :   costante                          --
    GITHUBPATH    :    gothings-cloud/blob/master/        :   repository da scaricare           $2
    RASPIPATH     :    dockrepo/dockimages/cloud/         :   path del file                     $3
                                                              identici su github e su raspi
    nome file     :    cloudinstall.json                  :   nome file da scaricare            $1

  #  path:  dockrepo/dockimages/cloud/cloudinstall.json




----------------------------------------------------------------------------------------------------
                                                                               ===========>  FATTO !

- redis NON salva il db
  - il file dump.rdb di redis (e il dir sopra === db) DEVONO appartenere a 999:999 (redis:redis)
  - dir db permission: 755    file dump.rdb permission:  644
    <-- ref.: https://stackoverflow.com/questions/22160753/redis-failed-opening-rdb-for-saving-permission-denied
============> set dir & file permission: 999:999  (redis:redis)



                                                   *** Generazione development droplet - v 0.01 ***
---------------------------------------------------------------------------------------------------\
                                                               *** GoThings cloud droplets v0.01 ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------

                                                               *** GoThings cloud droplets v0.01 ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@






---------------------------------------------------------------------------------------------------- 2019-12-08
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                                      *** GoThings cloud install ***

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2019-11-28
                                                                      *** GoThings cloud install ***/----------
---------------------------------------------------------------------------------------------------/
                                                     *** Porting della BASE raspberry sul cloud ***

- installazione di gothings menu' '0'   (Gothings install menu
- Costruzione del menu 'g' (GoThings Control Menu)

----------------------------------------------------------------------------------------------------
                                                                                          REFERENCES

--- DNS

https://www.namecheap.com/support/knowledgebase/article.aspx/33/11/what-is-dynamic-dns?_ga=2.28964540.1277616335.1574977851-902166792.1573042405&_gac=1.20788554.1573042409.Cj0KCQiA-4nuBRCnARIsAHwyuPrCfQl29LhZWoTsVmpVVR7tw2XF6Wx-tvD4VJbwv0gL8B8Fi-955PwaAm57EALw_wcB
  <-- usare il DNS dinamico per spengere & riaccendere la droplet solo quando serve                 *** DA FARE ***


--- Create droplet
ricerca:   digitalocean install docker

1.-
https://www.digitalocean.com/community/tutorials/automating-initial-server-setup-with-ubuntu-18-04
  <-- creazione automatica del server ubuntu 18.04

2.-
https://www.digitalocean.com/community/tutorials/how-to-install-docker-compose-on-ubuntu-18-04
  <-- come sopra, tutorial installazione docker-compose

3.-
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04
   <-- tutorial installazione manuale docker


-----------------  Docker images guideline:
4.-
https://github.com/docker-library/official-images#consistency
  <-- consigli su come scrivere i dockerfile
  <-- uso di 'tini' per inizializzare il sistema


----------------------------------------------------------------------------------------------------

Docker install on DO droplet:      vedi sotto in :   *** Sviluppo droplet cloud base ***

- install docker:  ref. 3.-

- snapshot: gothings-v05-firstboot                                                        snapshot  DA AGGIORNARE
    <-- snapshot creazione droplet:
        - installato ubuntu 18.04 con ssh X utente ysefi
        - download automatico del pre-bootstrap 'c'
        - create logs:   /var/log/cloud-init-output.log
        - ./c esegue il download di gocloud
        - ./gocloud consente di andare avanti
        - verifica lo stato di docker:   sudo systemctl status docker
    <-- se non funziona alla prima:   exit ssh & reconnect


Generazione droplet GOTHINGS:
1.- opzioni disponibili: 
    1.1.- CREARE una nuova droplet come descritto in:  *** Sviluppo droplet cloud base ***
          <-- vedi sotto per i passi necessari
    1.2.- CREARE una nuova droplet a partire da uno snapshot
          <--  i passi successivi dipendono dallo snapshot
2.- fasi necessarie:
    2.1.- esegui lo script di boot ./c 
          <-- viene caricato il GOTHINGS Control Menu ed e' inizializzata la parte base di gothings
    2.2.- crea droplet a partire dallo snapshot
          esegui lo script di boot ./c
          <-- viene caricato il GOTHINGS Control Menu ed e' inizializzata la parte base di gothings



-----------------------------------------------------------------------------

ssh yesfi@128.199.37.78


----------------------------------------------------------------------------------------------------  DA FARE

- aggiungere un .json per ??

- mettere in gocloud una verifica di funzionalita'




                                                     *** Porting della BASE raspberry sul cloud ***
---------------------------------------------------------------------------------------------------\
                                                                      *** GoThings cloud install ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 2019-11-28
                                                                      *** GoThings cloud install ***/----------
---------------------------------------------------------------------------------------------------/
                                                                *** Sviluppo droplet cloud base ***

- Generazione veloce della parte cloud del sistema GOTHINGS
  <-- procedura guidata per la generazione veloce di una droplet
      <-- si usa uno start script per generare una prima immagine
      <-- si fa un upgrade con lo script 'gocloud'
  <-- gocloud inizializza l'ambiente gothings-cloud sulla droplet
      <-- si copia il tutto da gothings-cloud
      <-- tutti i dir necessari ed il content di partenza sono presi da un .tar.gz
      <-- per proseguire basta:
            - download un tar.gz sulla droplet
            - aggiorna i .json in .../dockrepo/dockimages/cloud/
            - girare gocloud che espande il sistema aggiornato
  <-- ref per controlli utili; 
      - create logs in /var/log/cloud-init-output.log
      - verifica lo stato di docker:   sudo systemctl status docker

                                                                                                    *** IN CORSO ***
--------- creazione droplet a partire dallo snapshot
Viene creata la droplet a partire dallo snapshot
  <-- viene presentato lo stesso menu ...
  <-- si fa tutto uguale, meno lo 'user data'
====> la droplet non funziona bene:
  - i .json di configurazione andrebbero re-inizializzati ...
  - fare un cl-re-init prima di salvare                       <-- SI, cosi' si puo ripartire con ./c
- dopo dovrebbe essere tutto normale:
  - esegui lo script di boot ./c
    <-- viene caricato il GOTHINGS Control Menu ed e' inizializzata la parte base di gothings


-------- PROBLEMI da risolvere
install/init:
  - va organizzato il processo di inizializzazione, da rendere piu' controllabile
    durante lo sviluppo
  - separare redis & nginx da cloud ... ??
redis:
  - WARNING overcommit_memory is set to 0! Background save may fail under low memory condition.
    To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot
     or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
  - WARNING you have Transparent Huge Pages (THP) support enabled in your kernel.
    This will create latency and memory usage issues with Redis.
    To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled'
    as root, and add it to your /etc/rc.local in order to retain the setting after a reboot.
    Redis must be restarted after THP is disabled.


                                                                                 OSSERVAZIONI VARIE:
- Installazione & setup della droplet gothings:
  contenuti:
    - download da github
    - dir necessari per inizializzare l'ambiente gothings (versione cloud)

- REFRESH completo dell'installazione:
  - inizializzare i .json in .../dockrepo/dockimages/cloud
      <-- mette status == 'todo'             <-- si eseguiranno expand & install
  - CANCELLARE il .tar.gz in .../dockrepo/sysdata



----------------------------------------------------------------------------------------------------
Docker install on DO droplet

create droplet ------------------------
- new project:  gothings
- create standard droplet (5Eur/mese, il minimo possibile), droplet in AMS3
- setup automatico: vedi ref 1.-
  - aggiungi private net & user data & monitoring
      <-- file:    .../WP-Sviluppi/gothings/cloud-dev/gothingsserverinit.sh
  - 'keys all' : tutte le chiavi
  - RICORDA: sul PC i key file DEVONO essere chmod 600
- il log del droplet setup e' in:    /var/log/cloud-init-output.log                                 log

===> al 2019-12-17:                                                                                 snapshot
            droplet:        gothings-v05
           snapshot:        gothings-v05-firstboot
                 IP:        128.199.48.13

first boot -----------------------------
- viene letto lo script 'c' da gothings install
  - si carica il menu gocloud
  - si esegue il primo npm install

--------------  REDIS
- aggiustati i volumi come da doc su dockerhub
  ===>  OK


--------------  NGINX
- aggiustati i volumi come da doc su dockerhub
  ===>  ???






start base ----------------------------
- esegui comando start:
  - prerequisites
    - init docker networks
    - ??
  - 


                                                                                                    DA FARE
- aggiungere 'install tree' ne



----------------------------------------------------------------------------------------------------
--------------- problema gestione file su github
i file su github sono raggiungibili come:
    https://github.com/fpirri/gothings-cloud/blob/master/dockrepo/dockimages/cloud/cloudinstall.json
divisi come:                                                                              getgitfile
    GITHUBHOME    :    https://github.com/fpirri/         :   costante                          --
    GITHUBPATH    :    gothings-cloud/blob/master/        :   repository da scaricare           $2
    RASPIPATH     :    dockrepo/dockimages/cloud/         :   path del file                     $3
                                                              identici su github e su raspi
    nome file     :    cloudinstall.json                  :   nome file da scaricare            $1

  #  path:  dockrepo/dockimages/cloud/cloudinstall.json





DA VEDERE: cosa si puo' da consumi facili & cf-dock-02


                                                                *** Sviluppo droplet cloud base ***
---------------------------------------------------------------------------------------------------\
                                                                      *** GoThings cloud install ***\----------
---------------------------------------------------------------------------------------------------- \  FINE
---------------------------------------------------------------------------------------------------------------

                                                                      *** GoThings cloud install ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@











@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
---------------------------------------------------------------------------------------------------- 2019-11-29
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\------>>>>  INIZIO
                                                             *** lavoro precedente, su raspberry ***













@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  lavoro precedente, su raspberry  @@@
Riportato qui, per convenienza e per rapida consultazione

Vedi file:

/home/superman/NetBeansProjects/github-gothings/README.github.gothings

------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2018-08-17
                                                                            *** GoThings install ***/-------------
---------------------------------------------------------------------------------------------------/
                                                               *** 1.a stesura GoThings-install ***


Si parte da :    gothings-f01-2019-10-29-4GB.img

  . 0                                                <-- exec bootstrap per aggiornare g
           3. GO      download GOTHINGS control menu            step 3 del menu 0
   <== NON FUNZIONA !!!  <-- manca jq

  sudo apt install jq           <-- installare jq
                                <-- ci mette un po'  (si ferma molto su 81%...)
  ./g                           <-- esegue fase "expand"
                                <-- esegue baseinstall.sh
                                <-- scarica l'immagine gothings/nodebase:arm-004
                       ... in INSTALL:   mettere 'INSTALL' al posto di 'Start GoThings BASE'        DA FARE
                       ... VANNO DEFINITI i network 'external'                                      DA FARE
  ==> networks definiti a mano ...
                       ... togliere il 'pause' alla fine della fase INSTALL                         DA FARE alla fine
... si riparte con install (re-init baseinstall.sh)
... non e' chiaro se i node_modules ci sono:    <-- NON CI SONO  <-- l'install NON HA FUNZIONATO !!!
      --> fallisce in base@0.0.1 init: `./initbase.sh` -->  npm ERR! Exit status 126




STOP example containers:
    docker-compose -f /home/pi/dockrepo/dockimages/app-testvue.yml down

DA FARE:    mettere il link a controlmenu in sezione 6


DA FARE:   .gitignore
              <-- forse NON SERVE se non si fa upload con git 

DA FARE:    Mettere "controllo MD5" ?         <-- DA RIVEDERE alla fine

DA FARE:    fare il rebbot automatico alla fine del passo 1



                                                               *** 1.a stesura GoThings-install ***
---------------------------------------------------------------------------------------------------\
                                                                            *** GoThings install ***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------/ 2019-11-06
                                                                  *** G O T H I N G S   Lifecycle***/-------------
---------------------------------------------------------------------------------------------------/
                                                                 *** Ciclo di vita applicazioni ***
NOTA:  (^n)  con n= 1, 2, ...  indica la nota n.esima


1.- Immagine docker   ------------------------------------------------------------------------------
L'immagine usata per costruire l'applicazione e' generata con un procedimento parallelo
a gothings
In altre parole nei menu' gothings l'immagine e' considerata pre-esistente e scaricabile
da docker hub
--> Il menu' di installazione per lo sviluppatore primario e' separato da tutto il resto
      <-- lo chiameremo gdev


2.- Init data   ------------------------------------------------------------------------------------
  I dati del contenitore  sono mantenuti in un host-volume, per garantire la persistenza
su un dato host a prescindere dal ciclo di vita dei contenitori (^1).
  In gothings i dati per il particolare contenitore sono mantenuti nel dir(^2):
    /home/pi/dockrepo/sysdata/<nome contenitore>
e questo viene mappato su un dir interno del contenitore che gira l'applicazione.
  Per esempio, se una applicazione nodejs gira nel dir /usr/app/ del contenitore
di nome nodeapp, i suoi sorgenti saranno in:
    /home/pi/dockrepo/sysdata/nodeapp
e nel file .yml del docker-compose verra' definito il docker host volume:
    volumes:
      - /home/pi/dockrepo/sysdata/nodeapp/:/usr/app/
Da osservare che  un contenitore potra' comunque usare database esterni o altri
volumi docker, secondo le definizioni dello sviluppatore.
L'inizializzazione del volume avviene per espansione di un archivio .tar.gz
La prima stesura dell'archivio .tar.gz e' realizzata tramite gdev
L'archivio viene espanso sul volume host. L'espansione mantiene ownership &
permissions.


3.- Start application   ----------------------------------------------------------------------------
  Richiama un compose.yml per lo start dell'applicazione. Se l'applicazione e'
gia' attiva non si hanno effetti.


4.- Stop application   -----------------------------------------------------------------------------
  Richiama un compose.yml per lo stop dell'applicazione. Il contenitore diviene
inattivo ed il suo stato e' marcato "exithed".


5.- Destroy application   --------------------------------------------------------------------------
  Richiama un compose.yml che ferma l'applicazione e distrugge il contenitore,
che non e' piu' recurabile nel sistema. I dati rimangono nel volume ed un
successivo start dovrebbe ripartire senza alterazione dei dati.



NOTE -----------------------------------------------------------------------------------------------
(^1): I dati invarianti per tutta la vita dell'applicazione saranno memorizzati
      nell'immagine
(^2): /home/pi/ e', nella raspberry, l'utente che gira gothings


----------------------------------------------------------------------------------------------------
La fase '1.- Immagine docker' e' realizzata nel menu gdev per tutte le applicazioni
della parte BASE

Per la fase '2.- Init data' :
  - per la parte BASE viene eseguita automaticamente allo start di ./g (vedi ginit)
  - per le altre app viene eseguita al primo richiamo della corrispondente voce di menu'
                                                                  <--  da fare



------------------------------------------------------------------------------------ IMPLEMENTAZIONE
Si definisce un file '<application>.json'

Nel file ci staranno informazioni varie per il display dell'applicazione durante il management
  <-- per esempio: nome, versione, autore, ???
      <-- questa parte sara' espamsa in seguito, per ora, SOLO il minimo indispensabile
Nel file viene definito il ciclo di vita dell'applicazione:
  <-- per esempio:
      - cerca un archivio .tar.gz per inizializzare il volume dati in .../sysdata/<application>/...
      - esegui uno script per l'installazione iniziale ...
      - esegui uno script per lo start dell'applicazione ...
      - etc. per tutte le fasi del ciclo di vita dell'applicazione ...
Ogni azione definita sopra ha un proprio ciclo di vita
  <-- ad es.: l'installazione e' un pre-requisito, da fare subito appena vista ..

vediamo come si puo' fare ...
    {
      "package": "base",                        definizioni varie, utili, ma NON operative
      "version": "0.1.0",
      "description": "BASE subsystem",
      "author": "vmaticFP",
      "actions": {                              definizione del ciclo di vita dell'applicazione
        "expand": {                               lettura volume dati
            "type": "once"                          da fare una sola volta
          "status": "todo"                          diviene "done" quando fatto
          "script": "./getbase.sh"                  script che esegue la lettura & l'espansione del .tar.gz
        }
        "install": {                              installazione del contenitore (ad es.: npm install ....)
             "type": "once"
           "status": "todo"
           "script": "./installbase.sh"
        }
        "start" : {                               comando per il control menu
            "type": "control"
          "status": "ready"
          "script": "./startbase.sh"
        }
        "pause" : {
            "type": "control"
          "status": "ready"
          "script": "./stopbase.sh"
        }
        "destroy" : {
              "type": "control"
            "status": "ready"
            "script": "./basedown.sh"
        }
      }
    }

Si definiscono le transizioni:

todo -->  ready
  ==> se todo, esegui e vai in done
      se done, no-operation

ready --> ready

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@====>  NO!  : semplificare:

--------- 2.a strada
1.- l'utente mette baseexpand.json & baseexpand.sh in .../dockimages/base
    - eventualmente, l'utente mette anche il .tar.gz in .../dockimages/base
2.- il .json contiene i nomi di tutto
3.- ginit verifica baseexpand.json per vedere se l'espansione e' da fare,
    ovvero se e' gia' fatta o non e' comunque necessaria:
    - NO:
        <-- si fa l'espansione, prendendo i parametri dal .json
          <-- eventualmente si scarica il .tar.gz dall'indirizzo fornito
        <-- espansione OK?
          - SI:
              <-- abbiamo finito l'expand, ritorna OK
          -NO:
              <-- abbiamo finito l'expand, ritorna ERR 1
    - SI:
        <-- abbiamo finito l'expand OK, ritorna 0
  - ginit: ERRORI?
    - SI:
        <-- ritorna l'errore
    - NO:
        <-- ritorna 0

------------------------ svolgimento parte jq:
baseexpand.json:
{
  "package": "base",
  "status": "todo",
  "filetargz": "dockrepo/dockimages/base/basedir.tar.gz",
  "githubgzfile": "https://raw.githubusercontent.com/fpirri/gothings-base/master/dockrepo/sysarchive/basedir.tar.gz",
  "script": "dockrepo/dockimages/base/expandbase.sh"
}
---- DOPO MOLTI TENTATIVI:
comando jq:
BLA=($(cat baseexpand.json | jq -r '.status,.filetargz,.githubgzfile,.script | @sh'))

Lunghezza dell'array BLA:
pi@raspberrypi:~/dockrepo/dockimages/base $ echo ${#BLA[@]}
4
Vedi l'elemento [1]:
pi@raspberrypi:~/dockrepo/dockimages/base $ echo ${BLA[1]}
'dockrepo/dockimages/base/basedir.tar.gz'

   <===== OK, il template e' giusto!

--------  OSSERVAZIONI --
"package": "base"
  - per ora il nome non e' usato
    <-- sara' aggiustato in seguito, nella costruzione di un 'verifyexpand' generalizzato

"status": "todo"
  - si ammettono due soli valori: 'todo' & 'done'
  - al momento non sono previste variazioni

"filetargz": "dockrepo/dockimages/base/basedir.tar.gz"
  - DEVE essere un .tar.gz
    <-- al momento non c'e' controllo immediato
        <-- si fa controllo solo sul risultato della chiamata di espansione ...
  - viene prefisso con $HOMEDIR === "/home/pi/"
    <-- il contenuto DEVE partire da ./dockrepo
        <-- questo controllo NON C'E'

"githubgzfile": "https://raw.githubusercontent.com/fpirri/gothings-base/master/dockrepo/sysarchive/basedir.tar.gz"
  - DEVE essere raggiungibile dalla funzione wget
  - si controlla che il risultato porti effettivamente un file

"script": "dockrepo/dockimages/base/expandbase.sh"
  - NON USATO nella fase di expand
    <-- sara' usato in seguito


-------------------- CONTROLLI esistenti sul .json                                            ERRORI
ERROR 1
  invalid values in JSON
  si controllano i valori inaccettabili: null, true, false, ""

ERROR 2
  empty strings in JSON

ERROR 3
  status non valido, i valori accettati sono [todo, done]

ERROR 4
  install script not found

ERROR 5
  cannot update JSON file

ERROR 66
  archivio .tar.gz introvabile
  espansione archivio .tar.gz fallita, causa stampata in debuglog



-----------------------------------  Sostituzione valore con jq
lettura:
  echo "$(cat baseexpand.json | jq -r '.status')"

scrittura:
  echo "$(cat baseexpand.json | jq -r '.status |= "done"')" > newbaseexpand.json
  

jq '(..|select(type=="boolean")) |= if . then 1 else 0 end'

jq 


?? -----------------------------------
installbase.sh
  <-- inizializzare il volume dati
  <-- fare eventuale espansione 




                                                                 *** Ciclo di vita applicazioni ***
---------------------------------------------------------------------------------------------------\
                                                                  *** G O T H I N G S   Lifecycle***\-------------
-----------------------------------------------------------------------------------------------------\    FINE
------------------------------------------------------------------------------------------------------------------



                                                             *** lavoro precedente, su raspberry ***
////////////////////////////////////////////////////////////////////////////////////////////////////------>>>>   FINE
----------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
